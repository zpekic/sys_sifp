			.org $;
// Clear carry flag
CLC:		PUSHA;	// save A
			CLRA;	// clear A
ACSet:		RRC;	// clear or set AC
			POPA;	// restore A
ACDone:		RTS;

// Set carry flag
SEC:		IF_AC;
			.relative ACDone;
CSet:		PUSHA;
			LDAI -1;
			JR ACSet;

// Upper case the 8-bit ASCII in A LSB
// TODO
ToUpper:	ANDI 0x00FF;	// mask upper byte
			PUSHA;
			LDAI 'a';		// lowest lowercase
			JSR SEC;
			POPA;
			RTS;

Print:		LDA, M[Y];
			IF_AZ;
			.relative PrintDone;
			JSR PrintChr;
			INY, JR Print;
PrintDone:	RTS;
			
PrintChr:	JSR VGA_OutChr;
			JR UART_OutChr;
			//RTS;

PrintHex:	PUSHY;
			PUSHX;
			LDYI @StrHex;

			LDXI 12;	// 12, 8, 4, 0 shifts right
			PUSHX;
			PUSHA;

SrcLoopX:	CHKX;
			IF_XZ;
			.relative PrintNib; 
			DEX, RRC, JR SrcLoopX; 
			
PrintNib:	ANDI 0x000F;
			LDX, A;
			LDA, M[Y+X];
			JSR PrintChr;

			POPA;
			POPX;
			IF_XZ;
			.relative PrintHexEx;
			DEX;
			DEX; 
			DEX;
			DEX;
			PUSHX;
			PUSHA;
			JR SrcLoopX;
			
PrintHexEx:	POPX;
			POPY;
			RTS;
			