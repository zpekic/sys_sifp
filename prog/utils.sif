			.org $;
// Clear carry flag
CLC:		PUSHA;	// save A
			LDAI;	// clear A
			.data 0;
ACSet:		SLC;	// clear or set AC
			POPA;	// restore A
ACDone:		RTS;

// Set carry flag
SEC:		IF_AC;
			.branchto @ACDone - $;
CSet:		PUSHA;
			LDAI;
			.data -1;
			BRANCH;
			.to @ACSet - $;

Print:		LDA, M[Y];
			IF_AZ;
			.branchto @PrintDone - $;
			MARK2;
			BRANCH;
			.into @PrintChr - $;
			INY, BRANCH;
			.to @Print - $;
PrintDone:	RTS;
			
PrintChr:	MARK2;
			BRANCH;
			.into @VGA_OutChr - $;
			MARK2;
			BRANCH;
			.into @UART_OutChr - $;
			RTS;

PrintHexA:	PUSHX;
			PUSHA;
			
			LDXI;
			.data 12;
			MARK2;
			BRANCH;
			.into @PrintHex - $;

			LDA, M[S];
			LDXI;
			.data 8;
			MARK2;
			BRANCH;
			.into @PrintHex - $;
			
			LDA, M[S];
			LDXI;
			.data 4;
			MARK2;
			BRANCH;
			.into @PrintHex - $;

			LDA, M[S];
			LDXI;
			.data 0;
			MARK2;
			BRANCH;
			.into @PrintHex - $;
			
			POPA;
			POPX;
			RTS;
			
PrintHex:	CPXI;
			.data 0;
			IF_XZ;
			.branchto @PrintHex1 - $;
			SRC, DEX, BRANCH;
			.to @PrintHex - $;
PrintHex1:	ANDI;
			.data 0x000F;
			LDX, A;
			ADXI;
			.data '0';
			CPXI;
			.data '0';	// TODO!!!
			IF_XC;
			.branchto @ConvAtoF - $;
			BRANCH;
			.to @Conv0to9 - $;
ConvAtoF:	ADXI;
			.data '7';
Conv0to9:	LDA, X;
			MARK2;
			BRANCH;
			.into @VGA_OutChr - $;
			MARK2;
			BRANCH;
			.into @UART_OutChr - $;
			RTS;
