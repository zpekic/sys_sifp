--------------------------------------------------------
-- mcc V1.3.1030 - Custom microcode compiler (c)2020-... 
--    https://github.com/zpekic/MicroCodeCompiler
--------------------------------------------------------
Compiling helloworld.sif, pass 1 out of 2.
Compiling sifp.mcc, pass 1 out of 2.
Success: pass 0 on sifp.mcc - 131 line(s) read, 43 statement(s) parsed, code address range 0xFFFFFFFF - 0xFFFFFFFF.
Compiling sifp_sys.mcc, pass 1 out of 2.
Success: pass 0 on sifp_sys.mcc - 17 line(s) read, 55 statement(s) parsed, code address range 0xFFFFFFFF - 0xFFFFFFFF.
Warning: .org value changed from -1 (0xFFFFFFFF) to 0 (0x0000)
Line 21: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 21
L0021@0001.  r_p = STP2, r_s = M[PUSH];

Line 23: resolved aliases:  .into in 'data16 =  @VGA_Init - $', line 23
L0023@0003.  data16 =  @VGA_Init - $;

Line 24: resolved aliases:  LDXI in 'r_p = M[IMM], r_x = LDX', line 24
L0024@0004.  r_p = M[IMM], r_x = LDX;

Line 25: resolved aliases:  .data in 'data16 =  @StrHWorld', line 25
L0025@0005.  data16 =  @StrHWorld;

Line 26: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 26
L0026@0006.  r_p = STP2, r_s = M[PUSH];

Line 28: resolved aliases:  .into in 'data16 =  @VGA_OutStr - $', line 28
L0028@0008.  data16 =  @VGA_OutStr - $;

Line 30: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 30
L0030@0009.  r_p = STP2, r_s = M[PUSH];

Line 32: resolved aliases:  .into in 'data16 =  @UART_Init - $', line 32
L0032@000B.  data16 =  @UART_Init - $;

Line 33: resolved aliases:  LDXI in 'r_p = M[IMM], r_x = LDX', line 33
L0033@000C.  r_p = M[IMM], r_x = LDX;

Line 34: resolved aliases:  .data in 'data16 =  @StrHWorld', line 34
L0034@000D.  data16 =  @StrHWorld;

Line 35: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 35
L0035@000E.  r_p = STP2, r_s = M[PUSH];

Line 37: resolved aliases:  .into in 'data16 =  @UART_OutStr - $', line 37
L0037@0010.  data16 =  @UART_OutStr - $;

Line 40: resolved aliases:  INTON in 'r_p = NOP, r_a = A, r_x = X, r_y = Y, r_s = S', line 40
L0040@0011.  r_p = NOP, r_a = A, r_x = X, r_y = Y, r_s = S;

Line 42: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 42
L0042@0012.EchoLoop:  r_p = STP2, r_s = M[PUSH];

Line 44: resolved aliases:  .into in 'data16 =  @UART_GetChr - $', line 44
L0044@0014.  data16 =  @UART_GetChr - $;

Line 45: resolved aliases:  PUSHA in 'r_a = STA, r_s = M[PUSH]', line 45
L0045@0015.EchoOut:  r_a = STA, r_s = M[PUSH];

Line 46: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 46
L0046@0016.  r_p = STP2, r_s = M[PUSH];

Line 48: resolved aliases:  .into in 'data16 =  @UART_OutChr - $', line 48
L0048@0018.  data16 =  @UART_OutChr - $;

Line 49: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 49
L0049@0019.  r_p = STP2, r_s = M[PUSH];

Line 51: resolved aliases:  .into in 'data16 =  @VGA_OutChr - $', line 51
L0051@001B.  data16 =  @VGA_OutChr - $;

Line 52: resolved aliases:  POPA in 'r_a = LDA, r_s = M[POP]', line 52
L0052@001C.  r_a = LDA, r_s = M[POP];

Line 53: resolved aliases:  XORI in 'r_p = M[IMM], r_a = XOR', line 53
L0053@001D.  r_p = M[IMM], r_a = XOR;

Line 54: resolved aliases:  CR, .data in 'data16 =  0xD', line 54
L0054@001E.  data16 =  0xD;

Line 56: resolved aliases:  .branchto in 'data16 =  @EchoLF - $', line 56
L0056@0020.  data16 =  @EchoLF - $;

Line 58: resolved aliases:  .to in 'data16 =  @EchoLoop', line 58
L0058@0022.  data16 =  @EchoLoop;

Line 59: resolved aliases:  LDAI in 'r_p = M[IMM], r_a = LDA', line 59
L0059@0023.EchoLF:  r_p = M[IMM], r_a = LDA;

Line 60: resolved aliases:  LF, .data in 'data16 =  0xA', line 60
L0060@0024.  data16 =  0xA;

Line 62: resolved aliases:  .to in 'data16 =  @EchoOut', line 62
L0062@0026.  data16 =  @EchoOut;

Line 64: resolved aliases:  CLS, .data in 'data16 =  0x1', line 64
L0064@0027.StrClear:  data16 =  0x1;

Line 65: resolved aliases:  .data in 'data16 =  0', line 65
L0065@0028.  data16 =  0;

Line 67: resolved aliases:  .data in 'data16 =  'H'', line 67
L0067@0029.StrHWorld:  data16 =  'H';

Line 68: resolved aliases:  .data in 'data16 =  'e'', line 68
L0068@002A.  data16 =  'e';

Line 69: resolved aliases:  .data in 'data16 =  'l'', line 69
L0069@002B.  data16 =  'l';

Line 70: resolved aliases:  .data in 'data16 =  'l'', line 70
L0070@002C.  data16 =  'l';

Line 71: resolved aliases:  .data in 'data16 =  'o'', line 71
L0071@002D.  data16 =  'o';

Line 72: resolved aliases:  .data in 'data16 =  ' '', line 72
L0072@002E.  data16 =  ' ';

Line 73: resolved aliases:  .data in 'data16 =  'W'', line 73
L0073@002F.  data16 =  'W';

Line 74: resolved aliases:  .data in 'data16 =  'o'', line 74
L0074@0030.  data16 =  'o';

Line 75: resolved aliases:  .data in 'data16 =  'r'', line 75
L0075@0031.  data16 =  'r';

Line 76: resolved aliases:  .data in 'data16 =  'l'', line 76
L0076@0032.  data16 =  'l';

Line 77: resolved aliases:  .data in 'data16 =  'd'', line 77
L0077@0033.  data16 =  'd';

Line 78: resolved aliases:  .data in 'data16 =  '!'', line 78
L0078@0034.  data16 =  '!';

Line 79: resolved aliases:  CR, .data in 'data16 =  0xD', line 79
L0079@0035.StrEnd:  data16 =  0xD;

Line 80: resolved aliases:  LF, .data in 'data16 =  0xA', line 80
L0080@0036.  data16 =  0xA;

Line 81: resolved aliases:  .data in 'data16 =  0', line 81
L0081@0037.  data16 =  0;

Compiling utils.sif, pass 1 out of 2.
Warning: .org value changed from 56 (0x0038) to 56 (0x0038)
Line 3: resolved aliases:  PUSHA in 'r_a = STA, r_s = M[PUSH]', line 3
L0003@0038.CLC:  r_a = STA, r_s = M[PUSH];

Line 4: resolved aliases:  LDAI in 'r_p = M[IMM], r_a = LDA', line 4
L0004@0039.  r_p = M[IMM], r_a = LDA;

Line 5: resolved aliases:  .data in 'data16 =  0', line 5
L0005@003A.  data16 =  0;

Line 7: resolved aliases:  POPA in 'r_a = LDA, r_s = M[POP]', line 7
L0007@003C.  r_a = LDA, r_s = M[POP];

Line 8: resolved aliases:  RTS in 'r_p = LDP, r_s = M[POP]', line 8
L0008@003D.ACDone:  r_p = LDP, r_s = M[POP];

Line 12: resolved aliases:  .branchto in 'data16 =  @ACDone - $', line 12
L0012@003F.  data16 =  @ACDone - $;

Line 13: resolved aliases:  PUSHA in 'r_a = STA, r_s = M[PUSH]', line 13
L0013@0040.CSet:  r_a = STA, r_s = M[PUSH];

Line 14: resolved aliases:  LDAI in 'r_p = M[IMM], r_a = LDA', line 14
L0014@0041.  r_p = M[IMM], r_a = LDA;

Line 15: resolved aliases:  .data in 'data16 =  -1', line 15
L0015@0042.  data16 =  -1;

Line 17: resolved aliases:  .to in 'data16 =  @ACSet - $', line 17
L0017@0044.  data16 =  @ACSet - $;

Line 21: resolved aliases:  PUSHX in 'r_x = STX, r_s = M[PUSH]', line 21
L0021@0045.MulU:  r_x = STX, r_s = M[PUSH];

Line 22: resolved aliases:  LDXI in 'r_p = M[IMM], r_x = LDX', line 22
L0022@0046.  r_p = M[IMM], r_x = LDX;

Line 23: resolved aliases:  .data in 'data16 =  16', line 23
L0023@0047.  data16 =  16;

Line 24: resolved aliases:  LDAI in 'r_p = M[IMM], r_a = LDA', line 24
L0024@0048.  r_p = M[IMM], r_a = LDA;

Line 25: resolved aliases:  .data in 'data16 =  0', line 25
L0025@0049.  data16 =  0;

Line 27: resolved aliases:  PUSHA in 'r_a = STA, r_s = M[PUSH]', line 27
L0027@004A.CheckY0:  r_a = STA, r_s = M[PUSH];

Line 30: resolved aliases:  POPA in 'r_a = LDA, r_s = M[POP]', line 30
L0030@004D.  r_a = LDA, r_s = M[POP];

Line 32: resolved aliases:  .branchto in 'data16 =  @Y01 - $', line 32
L0032@004F.  data16 =  @Y01 - $;

Line 33: resolved aliases:  ADCI in 'r_p = M[IMM], r_a = ADC', line 33
L0033@0050.Y00:  r_p = M[IMM], r_a = ADC;

Line 34: resolved aliases:  .data in 'data16 =  0', line 34
L0034@0051.  data16 =  0;

Line 36: resolved aliases:  .to in 'data16 =  @Nextbit - $', line 36
L0036@0053.  data16 =  @Nextbit - $;

Line 37: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 37
L0037@0054.Y01:  r_p = STP2, r_s = M[PUSH];

Line 39: resolved aliases:  .into in 'data16 =  @CLC - $', line 39
L0039@0056.  data16 =  @CLC - $;

Line 42: resolved aliases:  PUSHA in 'r_a = STA, r_s = M[PUSH]', line 42
L0042@0059.  r_a = STA, r_s = M[PUSH];

Line 48: resolved aliases:  .branchto in 'data16 =  @CheckY0 - $', line 48
L0048@005F.  data16 =  @CheckY0 - $;

Line 49: resolved aliases:  POPX in 'r_x = LDX, r_s = M[POP]', line 49
L0049@0060.  r_x = LDX, r_s = M[POP];

Line 50: resolved aliases:  RTS in 'r_p = LDP, r_s = M[POP]', line 50
L0050@0061.  r_p = LDP, r_s = M[POP];

Line 53: resolved aliases:  PUSHF in 'r_p = NOP, r_a = NOA, r_x = NOX, r_y = NOY, r_s = M[PUSH]', line 53
L0053@0062.StackTest:  r_p = NOP, r_a = NOA, r_x = NOX, r_y = NOY, r_s = M[PUSH];

Line 54: resolved aliases:  PUSHX in 'r_x = STX, r_s = M[PUSH]', line 54
L0054@0063.  r_x = STX, r_s = M[PUSH];

Line 57: resolved aliases:  .branchto in 'data16 =  @ContY - $', line 57
L0057@0066.  data16 =  @ContY - $;

Line 58: resolved aliases:  HALT in 'r_p = M[IMM], r_a = A, r_x = X, r_y = Y, r_s = S', line 58
L0058@0067.  r_p = M[IMM], r_a = A, r_x = X, r_y = Y, r_s = S;

Line 59: resolved aliases:  PUSHY in 'r_y = STY, r_s = M[PUSH]', line 59
L0059@0068.ContY:  r_y = STY, r_s = M[PUSH];

Line 62: resolved aliases:  .branchto in 'data16 =  @ContA - $', line 62
L0062@006B.  data16 =  @ContA - $;

Line 63: resolved aliases:  HALT in 'r_p = M[IMM], r_a = A, r_x = X, r_y = Y, r_s = S', line 63
L0063@006C.  r_p = M[IMM], r_a = A, r_x = X, r_y = Y, r_s = S;

Line 64: resolved aliases:  PUSHA in 'r_a = STA, r_s = M[PUSH]', line 64
L0064@006D.ContA:  r_a = STA, r_s = M[PUSH];

Line 66: resolved aliases:  .data in 'data16 =  0', line 66
L0066@006F.  data16 =  0;

Line 67: resolved aliases:  POPA in 'r_a = LDA, r_s = M[POP]', line 67
L0067@0070.  r_a = LDA, r_s = M[POP];

Line 68: resolved aliases:  POPY in 'r_y = LDY, r_s = M[POP]', line 68
L0068@0071.  r_y = LDY, r_s = M[POP];

Line 69: resolved aliases:  POPX in 'r_x = LDX, r_s = M[POP]', line 69
L0069@0072.  r_x = LDX, r_s = M[POP];

Line 70: resolved aliases:  POPF in 'r_p = NOP, r_a = NOA, r_x = NOX, r_y = NOY, r_s = M[POP]', line 70
L0070@0073.  r_p = NOP, r_a = NOA, r_x = NOX, r_y = NOY, r_s = M[POP];

Line 71: resolved aliases:  RTS in 'r_p = LDP, r_s = M[POP]', line 71
L0071@0074.  r_p = LDP, r_s = M[POP];

Success: pass 0 on utils.sif - 72 line(s) read, 174 statement(s) parsed, code address range 0x0038 - 0x0075.
Compiling uart.sif, pass 1 out of 2.
Warning: .org value changed from 117 (0x0075) to 117 (0x0075)
Line 2: resolved aliases:  LDYI in 'r_p = M[IMM], r_y = LDY', line 2
L0002@0075.UART_Init:  r_p = M[IMM], r_y = LDY;

Line 3: resolved aliases:  UART_CONTROL, .data in 'data16 =  0xE000', line 3
L0003@0076.  data16 =  0xE000;

Line 4: resolved aliases:  LDAI in 'r_p = M[IMM], r_a = LDA', line 4
L0004@0077.  r_p = M[IMM], r_a = LDA;

Line 5: resolved aliases:  .data in 'data16 =  3', line 5
L0005@0078.  data16 =  3;

Line 7: resolved aliases:  LDAI in 'r_p = M[IMM], r_a = LDA', line 7
L0007@007A.  r_p = M[IMM], r_a = LDA;

Line 8: resolved aliases:  .data in 'data16 =  0x10', line 8
L0008@007B.  data16 =  0x10;

Line 10: resolved aliases:  RTS in 'r_p = LDP, r_s = M[POP]', line 10
L0010@007D.  r_p = LDP, r_s = M[POP];

Line 12: resolved aliases:  PUSHY in 'r_y = STY, r_s = M[PUSH]', line 12
L0012@007E.UART_GetChr:  r_y = STY, r_s = M[PUSH];

Line 13: resolved aliases:  LDYI in 'r_p = M[IMM], r_y = LDY', line 13
L0013@007F.  r_p = M[IMM], r_y = LDY;

Line 14: resolved aliases:  UART_STATUS, .data in 'data16 =  0xE000', line 14
L0014@0080.  data16 =  0xE000;

Line 18: resolved aliases:  .branchto in 'data16 =  @GetChr - $', line 18
L0018@0084.  data16 =  @GetChr - $;

Line 20: resolved aliases:  .to in 'data16 =  @RdStatus0 - $', line 20
L0020@0086.  data16 =  @RdStatus0 - $;

Line 23: resolved aliases:  ANDI in 'r_p = M[IMM], r_a = AND', line 23
L0023@0089.  r_p = M[IMM], r_a = AND;

Line 24: resolved aliases:  .data in 'data16 =  0x00FF', line 24
L0024@008A.  data16 =  0x00FF;

Line 25: resolved aliases:  POPY in 'r_y = LDY, r_s = M[POP]', line 25
L0025@008B.  r_y = LDY, r_s = M[POP];

Line 26: resolved aliases:  RTS in 'r_p = LDP, r_s = M[POP]', line 26
L0026@008C.  r_p = LDP, r_s = M[POP];

Line 28: resolved aliases:  PUSHY in 'r_y = STY, r_s = M[PUSH]', line 28
L0028@008D.UART_OutChr:  r_y = STY, r_s = M[PUSH];

Line 29: resolved aliases:  PUSHA in 'r_a = STA, r_s = M[PUSH]', line 29
L0029@008E.  r_a = STA, r_s = M[PUSH];

Line 30: resolved aliases:  LDYI in 'r_p = M[IMM], r_y = LDY', line 30
L0030@008F.  r_p = M[IMM], r_y = LDY;

Line 31: resolved aliases:  UART_STATUS, .data in 'data16 =  0xE000', line 31
L0031@0090.  data16 =  0xE000;

Line 36: resolved aliases:  .branchto in 'data16 =  @OutChr - $', line 36
L0036@0095.  data16 =  @OutChr - $;

Line 38: resolved aliases:  .to in 'data16 =  @RdStatus1 - $', line 38
L0038@0097.  data16 =  @RdStatus1 - $;

Line 41: resolved aliases:  POPY in 'r_y = LDY, r_s = M[POP]', line 41
L0041@009A.  r_y = LDY, r_s = M[POP];

Line 42: resolved aliases:  RTS in 'r_p = LDP, r_s = M[POP]', line 42
L0042@009B.  r_p = LDP, r_s = M[POP];

Line 46: resolved aliases:  .branchto in 'data16 =  @UART_Done - $', line 46
L0046@009E.  data16 =  @UART_Done - $;

Line 47: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 47
L0047@009F.  r_p = STP2, r_s = M[PUSH];

Line 49: resolved aliases:  .into in 'data16 =  @UART_OutChr - $', line 49
L0049@00A1.  data16 =  @UART_OutChr - $;

Line 51: resolved aliases:  .data in 'data16 =  @UART_OutStr - $', line 51
L0051@00A3.  data16 =  @UART_OutStr - $;

Line 52: resolved aliases:  RTS in 'r_p = LDP, r_s = M[POP]', line 52
L0052@00A4.UART_Done:  r_p = LDP, r_s = M[POP];

Success: pass 0 on uart.sif - 52 line(s) read, 223 statement(s) parsed, code address range 0x0075 - 0x00A5.
Compiling vga.sif, pass 1 out of 2.
Warning: .org value changed from 165 (0x00A5) to 165 (0x00A5)
Line 8: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 8
L0008@00A5.VGA_Init:  r_p = STP2, r_s = M[PUSH];

Line 10: resolved aliases:  .into in 'data16 =  @CLC - $', line 10
L0010@00A7.  data16 =  @CLC - $;

Line 11: resolved aliases:  LDAI in 'r_p = M[IMM], r_a = LDA', line 11
L0011@00A8.  r_p = M[IMM], r_a = LDA;

Line 12: resolved aliases:  VGA_COLS, .data in 'data16 =  64', line 12
L0012@00A9.  data16 =  64;

Line 13: resolved aliases:  PUSHA in 'r_a = STA, r_s = M[PUSH]', line 13
L0013@00AA.  r_a = STA, r_s = M[PUSH];

Line 14: resolved aliases:  LDAI in 'r_p = M[IMM], r_a = LDA', line 14
L0014@00AB.  r_p = M[IMM], r_a = LDA;

Line 15: resolved aliases:  VGA_BASE, .data in 'data16 =  0x1000', line 15
L0015@00AC.  data16 =  0x1000;

Line 16: resolved aliases:  LDXI in 'r_p = M[IMM], r_x = LDX', line 16
L0016@00AD.  r_p = M[IMM], r_x = LDX;

Line 17: resolved aliases:  VGA_ROWS, .data in 'data16 =  32', line 17
L0017@00AE.  data16 =  32;

Line 18: resolved aliases:  LDYI in 'r_p = M[IMM], r_y = LDY', line 18
L0018@00AF.  r_p = M[IMM], r_y = LDY;

Line 19: resolved aliases:  ROW_OFFSET, RAM_BASE, .data in 'data16 =  0xFF00 + 0', line 19
L0019@00B0.  data16 =  0xFF00 + 0;

Line 25: resolved aliases:  .branchto in 'data16 =  @RowOffDone - $', line 25
L0025@00B6.  data16 =  @RowOffDone - $;

Line 27: resolved aliases:  .to in 'data16 =  @RowOffLoop - $', line 27
L0027@00B8.  data16 =  @RowOffLoop - $;

Line 28: resolved aliases:  POPA in 'r_a = LDA, r_s = M[POP]', line 28
L0028@00B9.RowOffDone:  r_a = LDA, r_s = M[POP];

Line 29: resolved aliases:  LDAI in 'r_p = M[IMM], r_a = LDA', line 29
L0029@00BA.  r_p = M[IMM], r_a = LDA;

Line 30: resolved aliases:  CLS, .data in 'data16 =  0x1', line 30
L0030@00BB.  data16 =  0x1;

Line 35: resolved aliases:  PUSHX in 'r_x = STX, r_s = M[PUSH]', line 35
L0035@00BC.VGA_OutChr:  r_x = STX, r_s = M[PUSH];

Line 36: resolved aliases:  PUSHY in 'r_y = STY, r_s = M[PUSH]', line 36
L0036@00BD.  r_y = STY, r_s = M[PUSH];

Line 37: resolved aliases:  PUSHA in 'r_a = STA, r_s = M[PUSH]', line 37
L0037@00BE.  r_a = STA, r_s = M[PUSH];

Line 39: resolved aliases:  XORI in 'r_p = M[IMM], r_a = XOR', line 39
L0039@00BF.  r_p = M[IMM], r_a = XOR;

Line 40: resolved aliases:  HOME, .data in 'data16 =  0x2', line 40
L0040@00C0.  data16 =  0x2;

Line 42: resolved aliases:  .branchto in 'data16 =  @VGA_HOME - $', line 42
L0042@00C2.  data16 =  @VGA_HOME - $;

Line 45: resolved aliases:  XORI in 'r_p = M[IMM], r_a = XOR', line 45
L0045@00C4.  r_p = M[IMM], r_a = XOR;

Line 46: resolved aliases:  CLS, .data in 'data16 =  0x1', line 46
L0046@00C5.  data16 =  0x1;

Line 48: resolved aliases:  .branchto in 'data16 =  @VGA_CLS - $', line 48
L0048@00C7.  data16 =  @VGA_CLS - $;

Line 50: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 50
L0050@00C8.  r_p = STP2, r_s = M[PUSH];

Line 52: resolved aliases:  .into in 'data16 =  @GetCursorXY - $', line 52
L0052@00CA.  data16 =  @GetCursorXY - $;

Line 55: resolved aliases:  XORI in 'r_p = M[IMM], r_a = XOR', line 55
L0055@00CC.  r_p = M[IMM], r_a = XOR;

Line 56: resolved aliases:  CR, .data in 'data16 =  0xD', line 56
L0056@00CD.  data16 =  0xD;

Line 58: resolved aliases:  .branchto in 'data16 =  @VGA_CR - $', line 58
L0058@00CF.  data16 =  @VGA_CR - $;

Line 61: resolved aliases:  XORI in 'r_p = M[IMM], r_a = XOR', line 61
L0061@00D1.  r_p = M[IMM], r_a = XOR;

Line 62: resolved aliases:  LF, .data in 'data16 =  0xA', line 62
L0062@00D2.  data16 =  0xA;

Line 64: resolved aliases:  .branchto in 'data16 =  @VGA_LF - $', line 64
L0064@00D4.  data16 =  @VGA_LF - $;

Line 67: resolved aliases:  POPA in 'r_a = LDA, r_s = M[POP]', line 67
L0067@00D5.  r_a = LDA, r_s = M[POP];

Line 70: resolved aliases:  PUSHY in 'r_y = STY, r_s = M[PUSH]', line 70
L0070@00D7.  r_y = STY, r_s = M[PUSH];

Line 71: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 71
L0071@00D8.  r_p = STP2, r_s = M[PUSH];

Line 73: resolved aliases:  .into in 'data16 =  @GetRowBase - $', line 73
L0073@00DA.  data16 =  @GetRowBase - $;

Line 74: resolved aliases:  M[Y+X] in 'STA, r_x = M[X], r_y = M[Y]', line 74
L0074@00DB.  STA, r_x = M[X], r_y = M[Y];

Line 75: resolved aliases:  POPY in 'INX, r_y = LDY, r_s = M[POP]', line 75
L0075@00DC.  INX, r_y = LDY, r_s = M[POP];

Line 76: resolved aliases:  CPXI in 'r_p = M[IMM], r_x = CPX', line 76
L0076@00DD.  r_p = M[IMM], r_x = CPX;

Line 77: resolved aliases:  VGA_COLS, .data in 'data16 =  64', line 77
L0077@00DE.  data16 =  64;

Line 79: resolved aliases:  .branchto in 'data16 =  @NextRow - $', line 79
L0079@00E0.  data16 =  @NextRow - $;

Line 80: resolved aliases:  PUSHY in 'r_y = STY, r_s = M[PUSH]', line 80
L0080@00E1.SetCursorXY:  r_y = STY, r_s = M[PUSH];

Line 81: resolved aliases:  LDYI in 'r_p = M[IMM], r_y = LDY', line 81
L0081@00E2.  r_p = M[IMM], r_y = LDY;

Line 82: resolved aliases:  CURSOR_X, RAM_BASE, .data in 'data16 =  0xFF00 + 62', line 82
L0082@00E3.  data16 =  0xFF00 + 62;

Line 84: resolved aliases:  LDXI in 'r_p = M[IMM], r_x = LDX', line 84
L0084@00E5.  r_p = M[IMM], r_x = LDX;

Line 85: resolved aliases:  CURSOR_Y, RAM_BASE, .data in 'data16 =  0xFF00 + 63', line 85
L0085@00E6.  data16 =  0xFF00 + 63;

Line 86: resolved aliases:  POPY in 'r_y = LDY, r_s = M[POP]', line 86
L0086@00E7.  r_y = LDY, r_s = M[POP];

Line 89: resolved aliases:  POPY in 'r_y = LDY, r_s = M[POP]', line 89
L0089@00E9.  r_y = LDY, r_s = M[POP];

Line 90: resolved aliases:  POPX in 'r_x = LDX, r_s = M[POP]', line 90
L0090@00EA.  r_x = LDX, r_s = M[POP];

Line 91: resolved aliases:  RTS in 'r_p = LDP, r_s = M[POP]', line 91
L0091@00EB.  r_p = LDP, r_s = M[POP];

Line 93: resolved aliases:  LDXI in 'r_p = M[IMM], r_x = LDX', line 93
L0093@00EC.NextRow:  r_p = M[IMM], r_x = LDX;

Line 94: resolved aliases:  .data in 'data16 =  0', line 94
L0094@00ED.  data16 =  0;

Line 96: resolved aliases:  CPYI in 'r_p = M[IMM], r_y = CPY', line 96
L0096@00EF.  r_p = M[IMM], r_y = CPY;

Line 97: resolved aliases:  VGA_ROWS, .data in 'data16 =  32', line 97
L0097@00F0.  data16 =  32;

Line 99: resolved aliases:  .branchto in 'data16 =  @ScrollUp - $', line 99
L0099@00F2.  data16 =  @ScrollUp - $;

Line 101: resolved aliases:  .to in 'data16 =  @SetCursorXY - $', line 101
L0101@00F4.  data16 =  @SetCursorXY - $;

Line 103: resolved aliases:  LDYI in 'r_p = M[IMM], r_y = LDY', line 103
L0103@00F5.ScrollUp:  r_p = M[IMM], r_y = LDY;

Line 104: resolved aliases:  .data in 'data16 =  0', line 104
L0104@00F6.  data16 =  0;

Line 105: resolved aliases:  PUSHY in 'r_y = STY, r_s = M[PUSH]', line 105
L0105@00F7.NxtRow:  r_y = STY, r_s = M[PUSH];

Line 106: resolved aliases:  LDXI in 'r_p = M[IMM], r_x = LDX', line 106
L0106@00F8.  r_p = M[IMM], r_x = LDX;

Line 107: resolved aliases:  .data in 'data16 =  0', line 107
L0107@00F9.  data16 =  0;

Line 108: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 108
L0108@00FA.  r_p = STP2, r_s = M[PUSH];

Line 110: resolved aliases:  .into in 'data16 =  @GetRowBase - $', line 110
L0110@00FC.  data16 =  @GetRowBase - $;

Line 111: resolved aliases:  PUSHY in 'r_y = STY, r_s = M[PUSH]', line 111
L0111@00FD.NxtCol:  r_y = STY, r_s = M[PUSH];

Line 112: resolved aliases:  ADYI in 'r_p = M[IMM], r_y = ADY', line 112
L0112@00FE.  r_p = M[IMM], r_y = ADY;

Line 113: resolved aliases:  VGA_COLS, .data in 'data16 =  64', line 113
L0113@00FF.  data16 =  64;

Line 114: resolved aliases:  M[Y+X] in 'LDA, r_x = M[X], r_y = M[Y]', line 114
L0114@0100.  LDA, r_x = M[X], r_y = M[Y];

Line 115: resolved aliases:  POPY in 'r_y = LDY, r_s = M[POP]', line 115
L0115@0101.  r_y = LDY, r_s = M[POP];

Line 116: resolved aliases:  M[Y+X] in 'STA, r_x = M[X], r_y = M[Y]', line 116
L0116@0102.  STA, r_x = M[X], r_y = M[Y];

Line 118: resolved aliases:  CPXI in 'r_p = M[IMM], r_x = CPX', line 118
L0118@0104.  r_p = M[IMM], r_x = CPX;

Line 119: resolved aliases:  VGA_COLS, .data in 'data16 =  64', line 119
L0119@0105.  data16 =  64;

Line 121: resolved aliases:  .branchto in 'data16 =  @ChkRow - $', line 121
L0121@0107.  data16 =  @ChkRow - $;

Line 123: resolved aliases:  .to in 'data16 =  @NxtCol - $', line 123
L0123@0109.  data16 =  @NxtCol - $;

Line 124: resolved aliases:  POPY in 'r_y = LDY, r_s = M[POP]', line 124
L0124@010A.ChkRow:  r_y = LDY, r_s = M[POP];

Line 126: resolved aliases:  CPYI in 'r_p = M[IMM], r_y = CPY', line 126
L0126@010C.  r_p = M[IMM], r_y = CPY;

Line 127: resolved aliases:  VGA_ROWS, .data in 'data16 =  32 - 1', line 127
L0127@010D.  data16 =  32 - 1;

Line 129: resolved aliases:  .branchto in 'data16 =  @ClrLastRow - $', line 129
L0129@010F.  data16 =  @ClrLastRow - $;

Line 131: resolved aliases:  .to in 'data16 =  @NxtRow - $', line 131
L0131@0111.  data16 =  @NxtRow - $;

Line 134: resolved aliases:  LDYI in 'r_p = M[IMM], r_y = LDY', line 134
L0134@0113.  r_p = M[IMM], r_y = LDY;

Line 135: resolved aliases:  VGA_ROWS, .data in 'data16 =  32 - 1', line 135
L0135@0114.  data16 =  32 - 1;

Line 136: resolved aliases:  PUSHY in 'r_y = STY, r_s = M[PUSH]', line 136
L0136@0115.  r_y = STY, r_s = M[PUSH];

Line 137: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 137
L0137@0116.  r_p = STP2, r_s = M[PUSH];

Line 139: resolved aliases:  .into in 'data16 =  @ClearRow - $', line 139
L0139@0118.  data16 =  @ClearRow - $;

Line 140: resolved aliases:  POPY in 'r_y = LDY, r_s = M[POP]', line 140
L0140@0119.  r_y = LDY, r_s = M[POP];

Line 142: resolved aliases:  .to in 'data16 =  @SetX0 - $', line 142
L0142@011B.  data16 =  @SetX0 - $;

Line 144: resolved aliases:  POPA in 'r_a = LDA, r_s = M[POP]', line 144
L0144@011C.VGA_CR:  r_a = LDA, r_s = M[POP];

Line 145: resolved aliases:  LDXI in 'r_p = M[IMM], r_x = LDX', line 145
L0145@011D.SetX0:  r_p = M[IMM], r_x = LDX;

Line 146: resolved aliases:  .data in 'data16 =  0', line 146
L0146@011E.  data16 =  0;

Line 148: resolved aliases:  .to in 'data16 =  @SetCursorXY - $', line 148
L0148@0120.  data16 =  @SetCursorXY - $;

Line 150: resolved aliases:  POPA in 'r_a = LDA, r_s = M[POP]', line 150
L0150@0121.VGA_LF:  r_a = LDA, r_s = M[POP];

Line 152: resolved aliases:  .to in 'data16 =  @NextRow1 - $', line 152
L0152@0123.  data16 =  @NextRow1 - $;

Line 154: resolved aliases:  POPA in 'r_a = LDA, r_s = M[POP]', line 154
L0154@0124.VGA_CLS:  r_a = LDA, r_s = M[POP];

Line 155: resolved aliases:  LDAI in 'r_p = M[IMM], r_a = LDA', line 155
L0155@0125.  r_p = M[IMM], r_a = LDA;

Line 156: resolved aliases:  .data in 'data16 =  ' '', line 156
L0156@0126.  data16 =  ' ';

Line 157: resolved aliases:  LDYI in 'r_p = M[IMM], r_y = LDY', line 157
L0157@0127.  r_p = M[IMM], r_y = LDY;

Line 158: resolved aliases:  .data in 'data16 =  0', line 158
L0158@0128.  data16 =  0;

Line 159: resolved aliases:  PUSHY in 'r_y = STY, r_s = M[PUSH]', line 159
L0159@0129.ClrNextRow:  r_y = STY, r_s = M[PUSH];

Line 160: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 160
L0160@012A.  r_p = STP2, r_s = M[PUSH];

Line 162: resolved aliases:  .into in 'data16 =  @ClearRow - $', line 162
L0162@012C.  data16 =  @ClearRow - $;

Line 163: resolved aliases:  POPY in 'r_y = LDY, r_s = M[POP]', line 163
L0163@012D.  r_y = LDY, r_s = M[POP];

Line 165: resolved aliases:  CPYI in 'r_p = M[IMM], r_y = CPY', line 165
L0165@012F.  r_p = M[IMM], r_y = CPY;

Line 166: resolved aliases:  VGA_ROWS, .data in 'data16 =  32', line 166
L0166@0130.  data16 =  32;

Line 168: resolved aliases:  .branchto in 'data16 =  @vga_home1 - $', line 168
L0168@0132.  data16 =  @vga_home1 - $;

Line 170: resolved aliases:  .to in 'data16 =  @ClrNextRow - $', line 170
L0170@0134.  data16 =  @ClrNextRow - $;

Line 172: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 172
L0172@0135.ClearRow:  r_p = STP2, r_s = M[PUSH];

Line 174: resolved aliases:  .into in 'data16 =  @GetRowBase - $', line 174
L0174@0137.  data16 =  @GetRowBase - $;

Line 175: resolved aliases:  LDAI in 'r_p = M[IMM], r_a = LDA', line 175
L0175@0138.  r_p = M[IMM], r_a = LDA;

Line 176: resolved aliases:  .data in 'data16 =  ' '', line 176
L0176@0139.  data16 =  ' ';

Line 177: resolved aliases:  LDXI in 'r_p = M[IMM], r_x = LDX', line 177
L0177@013A.  r_p = M[IMM], r_x = LDX;

Line 178: resolved aliases:  VGA_COLS, .data in 'data16 =  64 / 8 - 1', line 178
L0178@013B.  data16 =  64 / 8 - 1;

Line 179: resolved aliases:  M[Y+X] in 'STA, r_x = M[X], r_y = M[Y]', line 179
L0179@013C.ClrRLoop:  STA, r_x = M[X], r_y = M[Y];

Line 181: resolved aliases:  .branchto in 'data16 =  @ClrDone - $', line 181
L0181@013E.  data16 =  @ClrDone - $;

Line 183: resolved aliases:  .to in 'data16 =  @ClrRLoop - $', line 183
L0183@0140.  data16 =  @ClrRLoop - $;

Line 184: resolved aliases:  RTS in 'r_p = LDP, r_s = M[POP]', line 184
L0184@0141.ClrDone:  r_p = LDP, r_s = M[POP];

Line 186: resolved aliases:  POPA in 'r_a = LDA, r_s = M[POP]', line 186
L0186@0142.VGA_HOME:  r_a = LDA, r_s = M[POP];

Line 188: resolved aliases:  .data in 'data16 =  0', line 188
L0188@0144.  data16 =  0;

Line 190: resolved aliases:  .to in 'data16 =  @SetCursorXY - $', line 190
L0190@0146.  data16 =  @SetCursorXY - $;

Line 192: resolved aliases:  LDYI in 'r_p = M[IMM], r_y = LDY', line 192
L0192@0147.GetCursorXY:  r_p = M[IMM], r_y = LDY;

Line 193: resolved aliases:  CURSOR_X, RAM_BASE, .data in 'data16 =  0xFF00 + 62', line 193
L0193@0148.  data16 =  0xFF00 + 62;

Line 195: resolved aliases:  PUSHX in 'r_x = STX, r_s = M[PUSH]', line 195
L0195@014A.  r_x = STX, r_s = M[PUSH];

Line 196: resolved aliases:  LDXI in 'r_p = M[IMM], r_x = LDX', line 196
L0196@014B.  r_p = M[IMM], r_x = LDX;

Line 197: resolved aliases:  CURSOR_Y, RAM_BASE, .data in 'data16 =  0xFF00 + 63', line 197
L0197@014C.  data16 =  0xFF00 + 63;

Line 199: resolved aliases:  POPX in 'r_x = LDX, r_s = M[POP]', line 199
L0199@014E.  r_x = LDX, r_s = M[POP];

Line 200: resolved aliases:  RTS in 'r_p = LDP, r_s = M[POP]', line 200
L0200@014F.  r_p = LDP, r_s = M[POP];

Line 202: resolved aliases:  PUSHA in 'r_a = STA, r_s = M[PUSH]', line 202
L0202@0150.GetRowBase:  r_a = STA, r_s = M[PUSH];

Line 203: resolved aliases:  ADYI in 'r_p = M[IMM], r_y = ADY', line 203
L0203@0151.  r_p = M[IMM], r_y = ADY;

Line 204: resolved aliases:  ROW_OFFSET, RAM_BASE, .data in 'data16 =  0xFF00 + 0', line 204
L0204@0152.  data16 =  0xFF00 + 0;

Line 207: resolved aliases:  POPA in 'r_a = LDA, r_s = M[POP]', line 207
L0207@0155.  r_a = LDA, r_s = M[POP];

Line 208: resolved aliases:  RTS in 'r_p = LDP, r_s = M[POP]', line 208
L0208@0156.  r_p = LDP, r_s = M[POP];

Line 212: resolved aliases:  .branchto in 'data16 =  @OutStrDone - $', line 212
L0212@0159.  data16 =  @OutStrDone - $;

Line 213: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 213
L0213@015A.  r_p = STP2, r_s = M[PUSH];

Line 215: resolved aliases:  .into in 'data16 =  @VGA_OutChr - $', line 215
L0215@015C.  data16 =  @VGA_OutChr - $;

Line 217: resolved aliases:  .to in 'data16 =  @VGA_OutStr - $', line 217
L0217@015E.  data16 =  @VGA_OutStr - $;

Line 218: resolved aliases:  RTS in 'r_p = LDP, r_s = M[POP]', line 218
L0218@015F.OutStrDone:  r_p = LDP, r_s = M[POP];

Line 220: resolved aliases:  PUSHA in 'r_a = STA, r_s = M[PUSH]', line 220
L0220@0160.VGATest:  r_a = STA, r_s = M[PUSH];

Line 221: resolved aliases:  LDYI in 'r_p = M[IMM], r_y = LDY', line 221
L0221@0161.  r_p = M[IMM], r_y = LDY;

Line 222: resolved aliases:  VGA_BASE, .data in 'data16 =  0x1000', line 222
L0222@0162.  data16 =  0x1000;

Line 223: resolved aliases:  LDXI in 'r_p = M[IMM], r_x = LDX', line 223
L0223@0163.  r_p = M[IMM], r_x = LDX;

Line 224: resolved aliases:  .data in 'data16 =  0', line 224
L0224@0164.  data16 =  0;

Line 227: resolved aliases:  M[Y+X] in 'STA, r_x = M[X], r_y = M[Y]', line 227
L0227@0167.  STA, r_x = M[X], r_y = M[Y];

Line 229: resolved aliases:  CPXI in 'r_p = M[IMM], r_x = CPX', line 229
L0229@0169.  r_p = M[IMM], r_x = CPX;

Line 230: resolved aliases:  VGA_COLS, VGA_ROWS, .data in 'data16 =  64 * 32', line 230
L0230@016A.  data16 =  64 * 32;

Line 232: resolved aliases:  .branchto in 'data16 =  @VGATestEx - $', line 232
L0232@016C.  data16 =  @VGATestEx - $;

Line 234: resolved aliases:  .to in 'data16 =  @VGATLoop - $', line 234
L0234@016E.  data16 =  @VGATLoop - $;

Line 235: resolved aliases:  POPA in 'r_a = LDA, r_s = M[POP]', line 235
L0235@016F.VGATestEx:  r_a = LDA, r_s = M[POP];

Line 236: resolved aliases:  RTS in 'r_p = LDP, r_s = M[POP]', line 236
L0236@0170.  r_p = LDP, r_s = M[POP];

Success: pass 0 on vga.sif - 240 line(s) read, 431 statement(s) parsed, code address range 0x00A5 - 0x0171.
Success: pass 0 on helloworld.sif - 86 line(s) read, 431 statement(s) parsed, code address range 0xFFFFFFFF - 0x0171.
Compiling helloworld.sif, pass 2 out of 2.
Info: line -1 - symbol[0000] <= 'System.Byte[]'
Info: line -1 - symbol[0001] <= 'System.Byte[]'
Info: line -1 - symbol[0002] <= 'System.Byte[]'
Info: line -1 - symbol[0003] <= 'System.Byte[]'
Info: line -1 - symbol[0004] <= 'System.Byte[]'
Info: line -1 - symbol[0005] <= 'System.Byte[]'
Info: line -1 - symbol[0006] <= 'System.Byte[]'
Info: line -1 - symbol[0007] <= 'System.Byte[]'
Info: line -1 - symbol[0008] <= 'System.Byte[]'
Info: line -1 - symbol[0009] <= 'System.Byte[]'
Info: line -1 - symbol[000A] <= 'System.Byte[]'
Info: line -1 - symbol[000B] <= 'System.Byte[]'
Info: line -1 - symbol[000C] <= 'System.Byte[]'
Info: line -1 - symbol[000D] <= 'System.Byte[]'
Info: line -1 - symbol[000E] <= 'System.Byte[]'
Info: line -1 - symbol[000F] <= 'System.Byte[]'
Info: line -1 - symbol[0010] <= 'System.Byte[]'
Info: line -1 - symbol[0011] <= 'System.Byte[]'
Info: line -1 - symbol[0012] <= 'System.Byte[]'
Info: line -1 - symbol[0013] <= 'System.Byte[]'
Info: line -1 - symbol[0014] <= 'System.Byte[]'
Info: line -1 - symbol[0015] <= 'System.Byte[]'
Info: line -1 - symbol[0016] <= 'System.Byte[]'
Info: line -1 - symbol[0017] <= 'System.Byte[]'
Info: line -1 - symbol[0018] <= 'System.Byte[]'
Info: line -1 - symbol[0019] <= 'System.Byte[]'
Info: line -1 - symbol[001A] <= 'System.Byte[]'
Info: line -1 - symbol[001B] <= 'System.Byte[]'
Info: line -1 - symbol[001C] <= 'System.Byte[]'
Info: line -1 - symbol[001D] <= 'System.Byte[]'
Info: line -1 - symbol[001E] <= 'System.Byte[]'
Info: line -1 - symbol[001F] <= 'System.Byte[]'
Info: line -1 - symbol[0020] <= 'System.Byte[]'
Info: line -1 - symbol[0021] <= 'System.Byte[]'
Info: line -1 - symbol[0022] <= 'System.Byte[]'
Info: line -1 - symbol[0023] <= 'System.Byte[]'
Info: line -1 - symbol[0024] <= 'System.Byte[]'
Info: line -1 - symbol[0025] <= 'System.Byte[]'
Info: line -1 - symbol[0026] <= 'System.Byte[]'
Info: line -1 - symbol[0027] <= 'System.Byte[]'
Info: line -1 - symbol[0028] <= 'System.Byte[]'
Info: line -1 - symbol[0029] <= 'System.Byte[]'
Info: line -1 - symbol[002A] <= 'System.Byte[]'
Info: line -1 - symbol[002B] <= 'System.Byte[]'
Info: line -1 - symbol[002C] <= 'System.Byte[]'
Info: line -1 - symbol[002D] <= 'System.Byte[]'
Info: line -1 - symbol[002E] <= 'System.Byte[]'
Info: line -1 - symbol[002F] <= 'System.Byte[]'
Info: line -1 - symbol[0030] <= 'System.Byte[]'
Info: line -1 - symbol[0031] <= 'System.Byte[]'
Info: line -1 - symbol[0032] <= 'System.Byte[]'
Info: line -1 - symbol[0033] <= 'System.Byte[]'
Info: line -1 - symbol[0034] <= 'System.Byte[]'
Info: line -1 - symbol[0035] <= 'System.Byte[]'
Info: line -1 - symbol[0036] <= 'System.Byte[]'
Info: line -1 - symbol[0037] <= 'System.Byte[]'
Info: line -1 - symbol[0038] <= 'System.Byte[]'
Info: line -1 - symbol[0039] <= 'System.Byte[]'
Info: line -1 - symbol[003A] <= 'System.Byte[]'
Info: line -1 - symbol[003B] <= 'System.Byte[]'
Info: line -1 - symbol[003C] <= 'System.Byte[]'
Info: line -1 - symbol[003D] <= 'System.Byte[]'
Info: line -1 - symbol[003E] <= 'System.Byte[]'
Info: line -1 - symbol[003F] <= 'System.Byte[]'
Info: line -1 - symbol[0040] <= 'System.Byte[]'
Info: line -1 - symbol[0041] <= 'System.Byte[]'
Info: line -1 - symbol[0042] <= 'System.Byte[]'
Info: line -1 - symbol[0043] <= 'System.Byte[]'
Info: line -1 - symbol[0044] <= 'System.Byte[]'
Info: line -1 - symbol[0045] <= 'System.Byte[]'
Info: line -1 - symbol[0046] <= 'System.Byte[]'
Info: line -1 - symbol[0047] <= 'System.Byte[]'
Info: line -1 - symbol[0048] <= 'System.Byte[]'
Info: line -1 - symbol[0049] <= 'System.Byte[]'
Info: line -1 - symbol[004A] <= 'System.Byte[]'
Info: line -1 - symbol[004B] <= 'System.Byte[]'
Info: line -1 - symbol[004C] <= 'System.Byte[]'
Info: line -1 - symbol[004D] <= 'System.Byte[]'
Info: line -1 - symbol[004E] <= 'System.Byte[]'
Info: line -1 - symbol[004F] <= 'System.Byte[]'
Info: line -1 - symbol[0050] <= 'System.Byte[]'
Info: line -1 - symbol[0051] <= 'System.Byte[]'
Info: line -1 - symbol[0052] <= 'System.Byte[]'
Info: line -1 - symbol[0053] <= 'System.Byte[]'
Info: line -1 - symbol[0054] <= 'System.Byte[]'
Info: line -1 - symbol[0055] <= 'System.Byte[]'
Info: line -1 - symbol[0056] <= 'System.Byte[]'
Info: line -1 - symbol[0057] <= 'System.Byte[]'
Info: line -1 - symbol[0058] <= 'System.Byte[]'
Info: line -1 - symbol[0059] <= 'System.Byte[]'
Info: line -1 - symbol[005A] <= 'System.Byte[]'
Info: line -1 - symbol[005B] <= 'System.Byte[]'
Info: line -1 - symbol[005C] <= 'System.Byte[]'
Info: line -1 - symbol[005D] <= 'System.Byte[]'
Info: line -1 - symbol[005E] <= 'System.Byte[]'
Info: line -1 - symbol[005F] <= 'System.Byte[]'
Info: line -1 - symbol[0060] <= 'System.Byte[]'
Info: line -1 - symbol[0061] <= 'System.Byte[]'
Info: line -1 - symbol[0062] <= 'System.Byte[]'
Info: line -1 - symbol[0063] <= 'System.Byte[]'
Info: line -1 - symbol[0064] <= 'System.Byte[]'
Info: line -1 - symbol[0065] <= 'System.Byte[]'
Info: line -1 - symbol[0066] <= 'System.Byte[]'
Info: line -1 - symbol[0067] <= 'System.Byte[]'
Info: line -1 - symbol[0068] <= 'System.Byte[]'
Info: line -1 - symbol[0069] <= 'System.Byte[]'
Info: line -1 - symbol[006A] <= 'System.Byte[]'
Info: line -1 - symbol[006B] <= 'System.Byte[]'
Info: line -1 - symbol[006C] <= 'System.Byte[]'
Info: line -1 - symbol[006D] <= 'System.Byte[]'
Info: line -1 - symbol[006E] <= 'System.Byte[]'
Info: line -1 - symbol[006F] <= 'System.Byte[]'
Info: line -1 - symbol[0070] <= 'System.Byte[]'
Info: line -1 - symbol[0071] <= 'System.Byte[]'
Info: line -1 - symbol[0072] <= 'System.Byte[]'
Info: line -1 - symbol[0073] <= 'System.Byte[]'
Info: line -1 - symbol[0074] <= 'System.Byte[]'
Info: line -1 - symbol[0075] <= 'System.Byte[]'
Info: line -1 - symbol[0076] <= 'System.Byte[]'
Info: line -1 - symbol[0077] <= 'System.Byte[]'
Info: line -1 - symbol[0078] <= 'System.Byte[]'
Info: line -1 - symbol[0079] <= 'System.Byte[]'
Info: line -1 - symbol[007A] <= 'System.Byte[]'
Info: line -1 - symbol[007B] <= 'System.Byte[]'
Info: line -1 - symbol[007C] <= 'System.Byte[]'
Info: line -1 - symbol[007D] <= 'System.Byte[]'
Info: line -1 - symbol[007E] <= 'System.Byte[]'
Info: line -1 - symbol[007F] <= 'System.Byte[]'
Info: line -1 - symbol[0080] <= 'System.Byte[]'
Info: line -1 - symbol[0081] <= 'System.Byte[]'
Info: line -1 - symbol[0082] <= 'System.Byte[]'
Info: line -1 - symbol[0083] <= 'System.Byte[]'
Info: line -1 - symbol[0084] <= 'System.Byte[]'
Info: line -1 - symbol[0085] <= 'System.Byte[]'
Info: line -1 - symbol[0086] <= 'System.Byte[]'
Info: line -1 - symbol[0087] <= 'System.Byte[]'
Info: line -1 - symbol[0088] <= 'System.Byte[]'
Info: line -1 - symbol[0089] <= 'System.Byte[]'
Info: line -1 - symbol[008A] <= 'System.Byte[]'
Info: line -1 - symbol[008B] <= 'System.Byte[]'
Info: line -1 - symbol[008C] <= 'System.Byte[]'
Info: line -1 - symbol[008D] <= 'System.Byte[]'
Info: line -1 - symbol[008E] <= 'System.Byte[]'
Info: line -1 - symbol[008F] <= 'System.Byte[]'
Info: line -1 - symbol[0090] <= 'System.Byte[]'
Info: line -1 - symbol[0091] <= 'System.Byte[]'
Info: line -1 - symbol[0092] <= 'System.Byte[]'
Info: line -1 - symbol[0093] <= 'System.Byte[]'
Info: line -1 - symbol[0094] <= 'System.Byte[]'
Info: line -1 - symbol[0095] <= 'System.Byte[]'
Info: line -1 - symbol[0096] <= 'System.Byte[]'
Info: line -1 - symbol[0097] <= 'System.Byte[]'
Info: line -1 - symbol[0098] <= 'System.Byte[]'
Info: line -1 - symbol[0099] <= 'System.Byte[]'
Info: line -1 - symbol[009A] <= 'System.Byte[]'
Info: line -1 - symbol[009B] <= 'System.Byte[]'
Info: line -1 - symbol[009C] <= 'System.Byte[]'
Info: line -1 - symbol[009D] <= 'System.Byte[]'
Info: line -1 - symbol[009E] <= 'System.Byte[]'
Info: line -1 - symbol[009F] <= 'System.Byte[]'
Info: line -1 - symbol[00A0] <= 'System.Byte[]'
Info: line -1 - symbol[00A1] <= 'System.Byte[]'
Info: line -1 - symbol[00A2] <= 'System.Byte[]'
Info: line -1 - symbol[00A3] <= 'System.Byte[]'
Info: line -1 - symbol[00A4] <= 'System.Byte[]'
Info: line -1 - symbol[00A5] <= 'System.Byte[]'
Info: line -1 - symbol[00A6] <= 'System.Byte[]'
Info: line -1 - symbol[00A7] <= 'System.Byte[]'
Info: line -1 - symbol[00A8] <= 'System.Byte[]'
Info: line -1 - symbol[00A9] <= 'System.Byte[]'
Info: line -1 - symbol[00AA] <= 'System.Byte[]'
Info: line -1 - symbol[00AB] <= 'System.Byte[]'
Info: line -1 - symbol[00AC] <= 'System.Byte[]'
Info: line -1 - symbol[00AD] <= 'System.Byte[]'
Info: line -1 - symbol[00AE] <= 'System.Byte[]'
Info: line -1 - symbol[00AF] <= 'System.Byte[]'
Info: line -1 - symbol[00B0] <= 'System.Byte[]'
Info: line -1 - symbol[00B1] <= 'System.Byte[]'
Info: line -1 - symbol[00B2] <= 'System.Byte[]'
Info: line -1 - symbol[00B3] <= 'System.Byte[]'
Info: line -1 - symbol[00B4] <= 'System.Byte[]'
Info: line -1 - symbol[00B5] <= 'System.Byte[]'
Info: line -1 - symbol[00B6] <= 'System.Byte[]'
Info: line -1 - symbol[00B7] <= 'System.Byte[]'
Info: line -1 - symbol[00B8] <= 'System.Byte[]'
Info: line -1 - symbol[00B9] <= 'System.Byte[]'
Info: line -1 - symbol[00BA] <= 'System.Byte[]'
Info: line -1 - symbol[00BB] <= 'System.Byte[]'
Info: line -1 - symbol[00BC] <= 'System.Byte[]'
Info: line -1 - symbol[00BD] <= 'System.Byte[]'
Info: line -1 - symbol[00BE] <= 'System.Byte[]'
Info: line -1 - symbol[00BF] <= 'System.Byte[]'
Info: line -1 - symbol[00C0] <= 'System.Byte[]'
Info: line -1 - symbol[00C1] <= 'System.Byte[]'
Info: line -1 - symbol[00C2] <= 'System.Byte[]'
Info: line -1 - symbol[00C3] <= 'System.Byte[]'
Info: line -1 - symbol[00C4] <= 'System.Byte[]'
Info: line -1 - symbol[00C5] <= 'System.Byte[]'
Info: line -1 - symbol[00C6] <= 'System.Byte[]'
Info: line -1 - symbol[00C7] <= 'System.Byte[]'
Info: line -1 - symbol[00C8] <= 'System.Byte[]'
Info: line -1 - symbol[00C9] <= 'System.Byte[]'
Info: line -1 - symbol[00CA] <= 'System.Byte[]'
Info: line -1 - symbol[00CB] <= 'System.Byte[]'
Info: line -1 - symbol[00CC] <= 'System.Byte[]'
Info: line -1 - symbol[00CD] <= 'System.Byte[]'
Info: line -1 - symbol[00CE] <= 'System.Byte[]'
Info: line -1 - symbol[00CF] <= 'System.Byte[]'
Info: line -1 - symbol[00D0] <= 'System.Byte[]'
Info: line -1 - symbol[00D1] <= 'System.Byte[]'
Info: line -1 - symbol[00D2] <= 'System.Byte[]'
Info: line -1 - symbol[00D3] <= 'System.Byte[]'
Info: line -1 - symbol[00D4] <= 'System.Byte[]'
Info: line -1 - symbol[00D5] <= 'System.Byte[]'
Info: line -1 - symbol[00D6] <= 'System.Byte[]'
Info: line -1 - symbol[00D7] <= 'System.Byte[]'
Info: line -1 - symbol[00D8] <= 'System.Byte[]'
Info: line -1 - symbol[00D9] <= 'System.Byte[]'
Info: line -1 - symbol[00DA] <= 'System.Byte[]'
Info: line -1 - symbol[00DB] <= 'System.Byte[]'
Info: line -1 - symbol[00DC] <= 'System.Byte[]'
Info: line -1 - symbol[00DD] <= 'System.Byte[]'
Info: line -1 - symbol[00DE] <= 'System.Byte[]'
Info: line -1 - symbol[00DF] <= 'System.Byte[]'
Info: line -1 - symbol[00E0] <= 'System.Byte[]'
Info: line -1 - symbol[00E1] <= 'System.Byte[]'
Info: line -1 - symbol[00E2] <= 'System.Byte[]'
Info: line -1 - symbol[00E3] <= 'System.Byte[]'
Info: line -1 - symbol[00E4] <= 'System.Byte[]'
Info: line -1 - symbol[00E5] <= 'System.Byte[]'
Info: line -1 - symbol[00E6] <= 'System.Byte[]'
Info: line -1 - symbol[00E7] <= 'System.Byte[]'
Info: line -1 - symbol[00E8] <= 'System.Byte[]'
Info: line -1 - symbol[00E9] <= 'System.Byte[]'
Info: line -1 - symbol[00EA] <= 'System.Byte[]'
Info: line -1 - symbol[00EB] <= 'System.Byte[]'
Info: line -1 - symbol[00EC] <= 'System.Byte[]'
Info: line -1 - symbol[00ED] <= 'System.Byte[]'
Info: line -1 - symbol[00EE] <= 'System.Byte[]'
Info: line -1 - symbol[00EF] <= 'System.Byte[]'
Info: line -1 - symbol[00F0] <= 'System.Byte[]'
Info: line -1 - symbol[00F1] <= 'System.Byte[]'
Info: line -1 - symbol[00F2] <= 'System.Byte[]'
Info: line -1 - symbol[00F3] <= 'System.Byte[]'
Info: line -1 - symbol[00F4] <= 'System.Byte[]'
Info: line -1 - symbol[00F5] <= 'System.Byte[]'
Info: line -1 - symbol[00F6] <= 'System.Byte[]'
Info: line -1 - symbol[00F7] <= 'System.Byte[]'
Info: line -1 - symbol[00F8] <= 'System.Byte[]'
Info: line -1 - symbol[00F9] <= 'System.Byte[]'
Info: line -1 - symbol[00FA] <= 'System.Byte[]'
Info: line -1 - symbol[00FB] <= 'System.Byte[]'
Info: line -1 - symbol[00FC] <= 'System.Byte[]'
Info: line -1 - symbol[00FD] <= 'System.Byte[]'
Info: line -1 - symbol[00FE] <= 'System.Byte[]'
Info: line -1 - symbol[00FF] <= 'System.Byte[]'
Info: line -1 - symbol[0100] <= 'System.Byte[]'
Info: line -1 - symbol[0101] <= 'System.Byte[]'
Info: line -1 - symbol[0102] <= 'System.Byte[]'
Info: line -1 - symbol[0103] <= 'System.Byte[]'
Info: line -1 - symbol[0104] <= 'System.Byte[]'
Info: line -1 - symbol[0105] <= 'System.Byte[]'
Info: line -1 - symbol[0106] <= 'System.Byte[]'
Info: line -1 - symbol[0107] <= 'System.Byte[]'
Info: line -1 - symbol[0108] <= 'System.Byte[]'
Info: line -1 - symbol[0109] <= 'System.Byte[]'
Info: line -1 - symbol[010A] <= 'System.Byte[]'
Info: line -1 - symbol[010B] <= 'System.Byte[]'
Info: line -1 - symbol[010C] <= 'System.Byte[]'
Info: line -1 - symbol[010D] <= 'System.Byte[]'
Info: line -1 - symbol[010E] <= 'System.Byte[]'
Info: line -1 - symbol[010F] <= 'System.Byte[]'
Info: line -1 - symbol[0110] <= 'System.Byte[]'
Info: line -1 - symbol[0111] <= 'System.Byte[]'
Info: line -1 - symbol[0112] <= 'System.Byte[]'
Info: line -1 - symbol[0113] <= 'System.Byte[]'
Info: line -1 - symbol[0114] <= 'System.Byte[]'
Info: line -1 - symbol[0115] <= 'System.Byte[]'
Info: line -1 - symbol[0116] <= 'System.Byte[]'
Info: line -1 - symbol[0117] <= 'System.Byte[]'
Info: line -1 - symbol[0118] <= 'System.Byte[]'
Info: line -1 - symbol[0119] <= 'System.Byte[]'
Info: line -1 - symbol[011A] <= 'System.Byte[]'
Info: line -1 - symbol[011B] <= 'System.Byte[]'
Info: line -1 - symbol[011C] <= 'System.Byte[]'
Info: line -1 - symbol[011D] <= 'System.Byte[]'
Info: line -1 - symbol[011E] <= 'System.Byte[]'
Info: line -1 - symbol[011F] <= 'System.Byte[]'
Info: line -1 - symbol[0120] <= 'System.Byte[]'
Info: line -1 - symbol[0121] <= 'System.Byte[]'
Info: line -1 - symbol[0122] <= 'System.Byte[]'
Info: line -1 - symbol[0123] <= 'System.Byte[]'
Info: line -1 - symbol[0124] <= 'System.Byte[]'
Info: line -1 - symbol[0125] <= 'System.Byte[]'
Info: line -1 - symbol[0126] <= 'System.Byte[]'
Info: line -1 - symbol[0127] <= 'System.Byte[]'
Info: line -1 - symbol[0128] <= 'System.Byte[]'
Info: line -1 - symbol[0129] <= 'System.Byte[]'
Info: line -1 - symbol[012A] <= 'System.Byte[]'
Info: line -1 - symbol[012B] <= 'System.Byte[]'
Info: line -1 - symbol[012C] <= 'System.Byte[]'
Info: line -1 - symbol[012D] <= 'System.Byte[]'
Info: line -1 - symbol[012E] <= 'System.Byte[]'
Info: line -1 - symbol[012F] <= 'System.Byte[]'
Info: line -1 - symbol[0130] <= 'System.Byte[]'
Info: line -1 - symbol[0131] <= 'System.Byte[]'
Info: line -1 - symbol[0132] <= 'System.Byte[]'
Info: line -1 - symbol[0133] <= 'System.Byte[]'
Info: line -1 - symbol[0134] <= 'System.Byte[]'
Info: line -1 - symbol[0135] <= 'System.Byte[]'
Info: line -1 - symbol[0136] <= 'System.Byte[]'
Info: line -1 - symbol[0137] <= 'System.Byte[]'
Info: line -1 - symbol[0138] <= 'System.Byte[]'
Info: line -1 - symbol[0139] <= 'System.Byte[]'
Info: line -1 - symbol[013A] <= 'System.Byte[]'
Info: line -1 - symbol[013B] <= 'System.Byte[]'
Info: line -1 - symbol[013C] <= 'System.Byte[]'
Info: line -1 - symbol[013D] <= 'System.Byte[]'
Info: line -1 - symbol[013E] <= 'System.Byte[]'
Info: line -1 - symbol[013F] <= 'System.Byte[]'
Info: line -1 - symbol[0140] <= 'System.Byte[]'
Info: line -1 - symbol[0141] <= 'System.Byte[]'
Info: line -1 - symbol[0142] <= 'System.Byte[]'
Info: line -1 - symbol[0143] <= 'System.Byte[]'
Info: line -1 - symbol[0144] <= 'System.Byte[]'
Info: line -1 - symbol[0145] <= 'System.Byte[]'
Info: line -1 - symbol[0146] <= 'System.Byte[]'
Info: line -1 - symbol[0147] <= 'System.Byte[]'
Info: line -1 - symbol[0148] <= 'System.Byte[]'
Info: line -1 - symbol[0149] <= 'System.Byte[]'
Info: line -1 - symbol[014A] <= 'System.Byte[]'
Info: line -1 - symbol[014B] <= 'System.Byte[]'
Info: line -1 - symbol[014C] <= 'System.Byte[]'
Info: line -1 - symbol[014D] <= 'System.Byte[]'
Info: line -1 - symbol[014E] <= 'System.Byte[]'
Info: line -1 - symbol[014F] <= 'System.Byte[]'
Info: line -1 - symbol[0150] <= 'System.Byte[]'
Info: line -1 - symbol[0151] <= 'System.Byte[]'
Info: line -1 - symbol[0152] <= 'System.Byte[]'
Info: line -1 - symbol[0153] <= 'System.Byte[]'
Info: line -1 - symbol[0154] <= 'System.Byte[]'
Info: line -1 - symbol[0155] <= 'System.Byte[]'
Info: line -1 - symbol[0156] <= 'System.Byte[]'
Info: line -1 - symbol[0157] <= 'System.Byte[]'
Info: line -1 - symbol[0158] <= 'System.Byte[]'
Info: line -1 - symbol[0159] <= 'System.Byte[]'
Info: line -1 - symbol[015A] <= 'System.Byte[]'
Info: line -1 - symbol[015B] <= 'System.Byte[]'
Info: line -1 - symbol[015C] <= 'System.Byte[]'
Info: line -1 - symbol[015D] <= 'System.Byte[]'
Info: line -1 - symbol[015E] <= 'System.Byte[]'
Info: line -1 - symbol[015F] <= 'System.Byte[]'
Info: line -1 - symbol[0160] <= 'System.Byte[]'
Info: line -1 - symbol[0161] <= 'System.Byte[]'
Info: line -1 - symbol[0162] <= 'System.Byte[]'
Info: line -1 - symbol[0163] <= 'System.Byte[]'
Info: line -1 - symbol[0164] <= 'System.Byte[]'
Info: line -1 - symbol[0165] <= 'System.Byte[]'
Info: line -1 - symbol[0166] <= 'System.Byte[]'
Info: line -1 - symbol[0167] <= 'System.Byte[]'
Info: line -1 - symbol[0168] <= 'System.Byte[]'
Info: line -1 - symbol[0169] <= 'System.Byte[]'
Info: line -1 - symbol[016A] <= 'System.Byte[]'
Info: line -1 - symbol[016B] <= 'System.Byte[]'
Info: line -1 - symbol[016C] <= 'System.Byte[]'
Info: line -1 - symbol[016D] <= 'System.Byte[]'
Info: line -1 - symbol[016E] <= 'System.Byte[]'
Info: line -1 - symbol[016F] <= 'System.Byte[]'
Info: line -1 - symbol[0170] <= 'System.Byte[]'
Info: line -1 - symbol[0171] <= 'System.Byte[]'
Info: line -1 - symbol[0172] <= 'System.Byte[]'
Info: line -1 - symbol[0173] <= 'System.Byte[]'
Info: line -1 - symbol[0174] <= 'System.Byte[]'
Info: line -1 - symbol[0175] <= 'System.Byte[]'
Info: line -1 - symbol[0176] <= 'System.Byte[]'
Info: line -1 - symbol[0177] <= 'System.Byte[]'
Info: line -1 - symbol[0178] <= 'System.Byte[]'
Info: line -1 - symbol[0179] <= 'System.Byte[]'
Info: line -1 - symbol[017A] <= 'System.Byte[]'
Info: line -1 - symbol[017B] <= 'System.Byte[]'
Info: line -1 - symbol[017C] <= 'System.Byte[]'
Info: line -1 - symbol[017D] <= 'System.Byte[]'
Info: line -1 - symbol[017E] <= 'System.Byte[]'
Info: line -1 - symbol[017F] <= 'System.Byte[]'
Info: line -1 - symbol[0180] <= 'System.Byte[]'
Info: line -1 - symbol[0181] <= 'System.Byte[]'
Info: line -1 - symbol[0182] <= 'System.Byte[]'
Info: line -1 - symbol[0183] <= 'System.Byte[]'
Info: line -1 - symbol[0184] <= 'System.Byte[]'
Info: line -1 - symbol[0185] <= 'System.Byte[]'
Info: line -1 - symbol[0186] <= 'System.Byte[]'
Info: line -1 - symbol[0187] <= 'System.Byte[]'
Info: line -1 - symbol[0188] <= 'System.Byte[]'
Info: line -1 - symbol[0189] <= 'System.Byte[]'
Info: line -1 - symbol[018A] <= 'System.Byte[]'
Info: line -1 - symbol[018B] <= 'System.Byte[]'
Info: line -1 - symbol[018C] <= 'System.Byte[]'
Info: line -1 - symbol[018D] <= 'System.Byte[]'
Info: line -1 - symbol[018E] <= 'System.Byte[]'
Info: line -1 - symbol[018F] <= 'System.Byte[]'
Info: line -1 - symbol[0190] <= 'System.Byte[]'
Info: line -1 - symbol[0191] <= 'System.Byte[]'
Info: line -1 - symbol[0192] <= 'System.Byte[]'
Info: line -1 - symbol[0193] <= 'System.Byte[]'
Info: line -1 - symbol[0194] <= 'System.Byte[]'
Info: line -1 - symbol[0195] <= 'System.Byte[]'
Info: line -1 - symbol[0196] <= 'System.Byte[]'
Info: line -1 - symbol[0197] <= 'System.Byte[]'
Info: line -1 - symbol[0198] <= 'System.Byte[]'
Info: line -1 - symbol[0199] <= 'System.Byte[]'
Info: line -1 - symbol[019A] <= 'System.Byte[]'
Info: line -1 - symbol[019B] <= 'System.Byte[]'
Info: line -1 - symbol[019C] <= 'System.Byte[]'
Info: line -1 - symbol[019D] <= 'System.Byte[]'
Info: line -1 - symbol[019E] <= 'System.Byte[]'
Info: line -1 - symbol[019F] <= 'System.Byte[]'
Info: line -1 - symbol[01A0] <= 'System.Byte[]'
Info: line -1 - symbol[01A1] <= 'System.Byte[]'
Info: line -1 - symbol[01A2] <= 'System.Byte[]'
Info: line -1 - symbol[01A3] <= 'System.Byte[]'
Info: line -1 - symbol[01A4] <= 'System.Byte[]'
Info: line -1 - symbol[01A5] <= 'System.Byte[]'
Info: line -1 - symbol[01A6] <= 'System.Byte[]'
Info: line -1 - symbol[01A7] <= 'System.Byte[]'
Info: line -1 - symbol[01A8] <= 'System.Byte[]'
Info: line -1 - symbol[01A9] <= 'System.Byte[]'
Info: line -1 - symbol[01AA] <= 'System.Byte[]'
Info: line -1 - symbol[01AB] <= 'System.Byte[]'
Info: line -1 - symbol[01AC] <= 'System.Byte[]'
Info: line -1 - symbol[01AD] <= 'System.Byte[]'
Info: line -1 - symbol[01AE] <= 'System.Byte[]'
Info: line -1 - symbol[01AF] <= 'System.Byte[]'
Info: line -1 - symbol[01B0] <= 'System.Byte[]'
Info: line -1 - symbol[01B1] <= 'System.Byte[]'
Info: line -1 - symbol[01B2] <= 'System.Byte[]'
Info: line -1 - symbol[01B3] <= 'System.Byte[]'
Info: line -1 - symbol[01B4] <= 'System.Byte[]'
Info: line -1 - symbol[01B5] <= 'System.Byte[]'
Info: line -1 - symbol[01B6] <= 'System.Byte[]'
Info: line -1 - symbol[01B7] <= 'System.Byte[]'
Info: line -1 - symbol[01B8] <= 'System.Byte[]'
Info: line -1 - symbol[01B9] <= 'System.Byte[]'
Info: line -1 - symbol[01BA] <= 'System.Byte[]'
Info: line -1 - symbol[01BB] <= 'System.Byte[]'
Info: line -1 - symbol[01BC] <= 'System.Byte[]'
Info: line -1 - symbol[01BD] <= 'System.Byte[]'
Info: line -1 - symbol[01BE] <= 'System.Byte[]'
Info: line -1 - symbol[01BF] <= 'System.Byte[]'
Info: line -1 - symbol[01C0] <= 'System.Byte[]'
Info: line -1 - symbol[01C1] <= 'System.Byte[]'
Info: line -1 - symbol[01C2] <= 'System.Byte[]'
Info: line -1 - symbol[01C3] <= 'System.Byte[]'
Info: line -1 - symbol[01C4] <= 'System.Byte[]'
Info: line -1 - symbol[01C5] <= 'System.Byte[]'
Info: line -1 - symbol[01C6] <= 'System.Byte[]'
Info: line -1 - symbol[01C7] <= 'System.Byte[]'
Info: line -1 - symbol[01C8] <= 'System.Byte[]'
Info: line -1 - symbol[01C9] <= 'System.Byte[]'
Info: line -1 - symbol[01CA] <= 'System.Byte[]'
Info: line -1 - symbol[01CB] <= 'System.Byte[]'
Info: line -1 - symbol[01CC] <= 'System.Byte[]'
Info: line -1 - symbol[01CD] <= 'System.Byte[]'
Info: line -1 - symbol[01CE] <= 'System.Byte[]'
Info: line -1 - symbol[01CF] <= 'System.Byte[]'
Info: line -1 - symbol[01D0] <= 'System.Byte[]'
Info: line -1 - symbol[01D1] <= 'System.Byte[]'
Info: line -1 - symbol[01D2] <= 'System.Byte[]'
Info: line -1 - symbol[01D3] <= 'System.Byte[]'
Info: line -1 - symbol[01D4] <= 'System.Byte[]'
Info: line -1 - symbol[01D5] <= 'System.Byte[]'
Info: line -1 - symbol[01D6] <= 'System.Byte[]'
Info: line -1 - symbol[01D7] <= 'System.Byte[]'
Info: line -1 - symbol[01D8] <= 'System.Byte[]'
Info: line -1 - symbol[01D9] <= 'System.Byte[]'
Info: line -1 - symbol[01DA] <= 'System.Byte[]'
Info: line -1 - symbol[01DB] <= 'System.Byte[]'
Info: line -1 - symbol[01DC] <= 'System.Byte[]'
Info: line -1 - symbol[01DD] <= 'System.Byte[]'
Info: line -1 - symbol[01DE] <= 'System.Byte[]'
Info: line -1 - symbol[01DF] <= 'System.Byte[]'
Info: line -1 - symbol[01E0] <= 'System.Byte[]'
Info: line -1 - symbol[01E1] <= 'System.Byte[]'
Info: line -1 - symbol[01E2] <= 'System.Byte[]'
Info: line -1 - symbol[01E3] <= 'System.Byte[]'
Info: line -1 - symbol[01E4] <= 'System.Byte[]'
Info: line -1 - symbol[01E5] <= 'System.Byte[]'
Info: line -1 - symbol[01E6] <= 'System.Byte[]'
Info: line -1 - symbol[01E7] <= 'System.Byte[]'
Info: line -1 - symbol[01E8] <= 'System.Byte[]'
Info: line -1 - symbol[01E9] <= 'System.Byte[]'
Info: line -1 - symbol[01EA] <= 'System.Byte[]'
Info: line -1 - symbol[01EB] <= 'System.Byte[]'
Info: line -1 - symbol[01EC] <= 'System.Byte[]'
Info: line -1 - symbol[01ED] <= 'System.Byte[]'
Info: line -1 - symbol[01EE] <= 'System.Byte[]'
Info: line -1 - symbol[01EF] <= 'System.Byte[]'
Info: line -1 - symbol[01F0] <= 'System.Byte[]'
Info: line -1 - symbol[01F1] <= 'System.Byte[]'
Info: line -1 - symbol[01F2] <= 'System.Byte[]'
Info: line -1 - symbol[01F3] <= 'System.Byte[]'
Info: line -1 - symbol[01F4] <= 'System.Byte[]'
Info: line -1 - symbol[01F5] <= 'System.Byte[]'
Info: line -1 - symbol[01F6] <= 'System.Byte[]'
Info: line -1 - symbol[01F7] <= 'System.Byte[]'
Info: line -1 - symbol[01F8] <= 'System.Byte[]'
Info: line -1 - symbol[01F9] <= 'System.Byte[]'
Info: line -1 - symbol[01FA] <= 'System.Byte[]'
Info: line -1 - symbol[01FB] <= 'System.Byte[]'
Info: line -1 - symbol[01FC] <= 'System.Byte[]'
Info: line -1 - symbol[01FD] <= 'System.Byte[]'
Info: line -1 - symbol[01FE] <= 'System.Byte[]'
Info: line -1 - symbol[01FF] <= 'System.Byte[]'
Field 'r_p' 15 .. 12
Field 'r_a' 11 .. 9
Field 'r_x' 8 .. 6
Field 'r_y' 5 .. 3
Field 'r_s' 2 .. 0
Field 'data16' 15 .. 0 overlaps with: r_p, r_a, r_x, r_y, r_s
Info: line 9 - code[0000] <= '0000_000_000_000_000'
Info: line -1 - symbol[0000] <= 'System.Byte[]'
Info: line 9 - code[0001] <= '0110_000_000_000_011'
Info: line -1 - symbol[0001] <= 'System.Byte[]'
Info: line 9 - code[0002] <= '0010_000_000_000_000'
Info: line -1 - symbol[0002] <= 'System.Byte[]'
Info: line 9 - code[0003] <= '0000000010100010'
Info: line -1 - symbol[0003] <= 'System.Byte[]'
Info: line 9 - code[0004] <= '0001_000_100_000_000'
Info: line -1 - symbol[0004] <= 'System.Byte[]'
Info: line 9 - code[0005] <= '0000000000101001'
Info: line -1 - symbol[0005] <= 'System.Byte[]'
Info: line 9 - code[0006] <= '0110_000_000_000_011'
Info: line -1 - symbol[0006] <= 'System.Byte[]'
Info: line 9 - code[0007] <= '0010_000_000_000_000'
Info: line -1 - symbol[0007] <= 'System.Byte[]'
Info: line 9 - code[0008] <= '0000000101001111'
Info: line -1 - symbol[0008] <= 'System.Byte[]'
Info: line 9 - code[0009] <= '0110_000_000_000_011'
Info: line -1 - symbol[0009] <= 'System.Byte[]'
Info: line 9 - code[000A] <= '0010_000_000_000_000'
Info: line -1 - symbol[000A] <= 'System.Byte[]'
Info: line 9 - code[000B] <= '0000000001101010'
Info: line -1 - symbol[000B] <= 'System.Byte[]'
Info: line 9 - code[000C] <= '0001_000_100_000_000'
Info: line -1 - symbol[000C] <= 'System.Byte[]'
Info: line 9 - code[000D] <= '0000000000101001'
Info: line -1 - symbol[000D] <= 'System.Byte[]'
Info: line 9 - code[000E] <= '0110_000_000_000_011'
Info: line -1 - symbol[000E] <= 'System.Byte[]'
Info: line 9 - code[000F] <= '0010_000_000_000_000'
Info: line -1 - symbol[000F] <= 'System.Byte[]'
Info: line 9 - code[0010] <= '0000000010001100'
Info: line -1 - symbol[0010] <= 'System.Byte[]'
Info: line 9 - code[0011] <= '0000_111_111_111_111'
Info: line -1 - symbol[0011] <= 'System.Byte[]'
Info: line 9 - code[0012] <= '0110_000_000_000_011'
Info: line -1 - symbol[0012] <= 'System.Byte[]'
Info: line 9 - code[0013] <= '0010_000_000_000_000'
Info: line -1 - symbol[0013] <= 'System.Byte[]'
Info: line 9 - code[0014] <= '0000000001101010'
Info: line -1 - symbol[0014] <= 'System.Byte[]'
Info: line 9 - code[0015] <= '0000_111_000_000_011'
Info: line -1 - symbol[0015] <= 'System.Byte[]'
Info: line 9 - code[0016] <= '0110_000_000_000_011'
Info: line -1 - symbol[0016] <= 'System.Byte[]'
Info: line 9 - code[0017] <= '0010_000_000_000_000'
Info: line -1 - symbol[0017] <= 'System.Byte[]'
Info: line 9 - code[0018] <= '0000000001110101'
Info: line -1 - symbol[0018] <= 'System.Byte[]'
Info: line 9 - code[0019] <= '0110_000_000_000_011'
Info: line -1 - symbol[0019] <= 'System.Byte[]'
Info: line 9 - code[001A] <= '0010_000_000_000_000'
Info: line -1 - symbol[001A] <= 'System.Byte[]'
Info: line 9 - code[001B] <= '0000000010100001'
Info: line -1 - symbol[001B] <= 'System.Byte[]'
Info: line 9 - code[001C] <= '0000_100_000_000_010'
Info: line -1 - symbol[001C] <= 'System.Byte[]'
Info: line 9 - code[001D] <= '0001_001_000_000_000'
Info: line -1 - symbol[001D] <= 'System.Byte[]'
Info: line 9 - code[001E] <= '0000000000001101'
Info: line -1 - symbol[001E] <= 'System.Byte[]'
Info: line 9 - code[001F] <= '1001_000_000_000_000'
Info: line -1 - symbol[001F] <= 'System.Byte[]'
Info: line 9 - code[0020] <= '0000000000000011'
Info: line -1 - symbol[0020] <= 'System.Byte[]'
Info: line 9 - code[0021] <= '0011_000_000_000_000'
Info: line -1 - symbol[0021] <= 'System.Byte[]'
Info: line 9 - code[0022] <= '0000000000010010'
Info: line -1 - symbol[0022] <= 'System.Byte[]'
Info: line 9 - code[0023] <= '0001_100_000_000_000'
Info: line -1 - symbol[0023] <= 'System.Byte[]'
Info: line 9 - code[0024] <= '0000000000001010'
Info: line -1 - symbol[0024] <= 'System.Byte[]'
Info: line 9 - code[0025] <= '0011_000_000_000_000'
Info: line -1 - symbol[0025] <= 'System.Byte[]'
Info: line 9 - code[0026] <= '0000000000010101'
Info: line -1 - symbol[0026] <= 'System.Byte[]'
Info: line 9 - code[0027] <= '0000000000000001'
Info: line -1 - symbol[0027] <= 'System.Byte[]'
Info: line 9 - code[0028] <= '0000000000000000'
Info: line -1 - symbol[0028] <= 'System.Byte[]'
Info: line 9 - code[0029] <= '0000000001001000'
Info: line -1 - symbol[0029] <= 'System.Byte[]'
Info: line 9 - code[002A] <= '0000000001100101'
Info: line -1 - symbol[002A] <= 'System.Byte[]'
Info: line 9 - code[002B] <= '0000000001101100'
Info: line -1 - symbol[002B] <= 'System.Byte[]'
Info: line 9 - code[002C] <= '0000000001101100'
Info: line -1 - symbol[002C] <= 'System.Byte[]'
Info: line 9 - code[002D] <= '0000000001101111'
Info: line -1 - symbol[002D] <= 'System.Byte[]'
Info: line 9 - code[002E] <= '0000000000100000'
Info: line -1 - symbol[002E] <= 'System.Byte[]'
Info: line 9 - code[002F] <= '0000000001010111'
Info: line -1 - symbol[002F] <= 'System.Byte[]'
Info: line 9 - code[0030] <= '0000000001101111'
Info: line -1 - symbol[0030] <= 'System.Byte[]'
Info: line 9 - code[0031] <= '0000000001110010'
Info: line -1 - symbol[0031] <= 'System.Byte[]'
Info: line 9 - code[0032] <= '0000000001101100'
Info: line -1 - symbol[0032] <= 'System.Byte[]'
Info: line 9 - code[0033] <= '0000000001100100'
Info: line -1 - symbol[0033] <= 'System.Byte[]'
Info: line 9 - code[0034] <= '0000000000100001'
Info: line -1 - symbol[0034] <= 'System.Byte[]'
Info: line 9 - code[0035] <= '0000000000001101'
Info: line -1 - symbol[0035] <= 'System.Byte[]'
Info: line 9 - code[0036] <= '0000000000001010'
Info: line -1 - symbol[0036] <= 'System.Byte[]'
Info: line 9 - code[0037] <= '0000000000000000'
Info: line -1 - symbol[0037] <= 'System.Byte[]'
Info: line 9 - code[0038] <= '0000_111_000_000_011'
Info: line -1 - symbol[0038] <= 'System.Byte[]'
Info: line 9 - code[0039] <= '0001_100_000_000_000'
Info: line -1 - symbol[0039] <= 'System.Byte[]'
Info: line 9 - code[003A] <= '0000000000000000'
Info: line -1 - symbol[003A] <= 'System.Byte[]'
Info: line 9 - code[003B] <= '0000_010_000_000_000'
Info: line -1 - symbol[003B] <= 'System.Byte[]'
Info: line 9 - code[003C] <= '0000_100_000_000_010'
Info: line -1 - symbol[003C] <= 'System.Byte[]'
Info: line 9 - code[003D] <= '0100_000_000_000_010'
Info: line -1 - symbol[003D] <= 'System.Byte[]'
Info: line 9 - code[003E] <= '1000_000_000_000_000'
Info: line -1 - symbol[003E] <= 'System.Byte[]'
Warning: value 11111111111111111111111111111110 truncated to value 1111111111111110 in line 12.
Info: line 9 - code[003F] <= '1111111111111110'
Info: line -1 - symbol[003F] <= 'System.Byte[]'
Info: line 9 - code[0040] <= '0000_111_000_000_011'
Info: line -1 - symbol[0040] <= 'System.Byte[]'
Info: line 9 - code[0041] <= '0001_100_000_000_000'
Info: line -1 - symbol[0041] <= 'System.Byte[]'
Warning: value 11111111111111111111111111111111 truncated to value 1111111111111111 in line 15.
Info: line 9 - code[0042] <= '1111111111111111'
Info: line -1 - symbol[0042] <= 'System.Byte[]'
Info: line 9 - code[0043] <= '0010_000_000_000_000'
Info: line -1 - symbol[0043] <= 'System.Byte[]'
Warning: value 11111111111111111111111111110111 truncated to value 1111111111110111 in line 17.
Info: line 9 - code[0044] <= '1111111111110111'
Info: line -1 - symbol[0044] <= 'System.Byte[]'
Info: line 9 - code[0045] <= '0000_000_111_000_011'
Info: line -1 - symbol[0045] <= 'System.Byte[]'
Info: line 9 - code[0046] <= '0001_000_100_000_000'
Info: line -1 - symbol[0046] <= 'System.Byte[]'
Info: line 9 - code[0047] <= '0000000000010000'
Info: line -1 - symbol[0047] <= 'System.Byte[]'
Info: line 9 - code[0048] <= '0001_100_000_000_000'
Info: line -1 - symbol[0048] <= 'System.Byte[]'
Info: line 9 - code[0049] <= '0000000000000000'
Info: line -1 - symbol[0049] <= 'System.Byte[]'
Info: line 9 - code[004A] <= '0000_111_000_000_011'
Info: line -1 - symbol[004A] <= 'System.Byte[]'
Info: line 9 - code[004B] <= '0000_100_000_111_000'
Info: line -1 - symbol[004B] <= 'System.Byte[]'
Info: line 9 - code[004C] <= '0000_011_000_000_000'
Info: line -1 - symbol[004C] <= 'System.Byte[]'
Info: line 9 - code[004D] <= '0000_100_000_000_010'
Info: line -1 - symbol[004D] <= 'System.Byte[]'
Info: line 9 - code[004E] <= '1000_000_000_000_000'
Info: line -1 - symbol[004E] <= 'System.Byte[]'
Info: line 9 - code[004F] <= '0000000000000101'
Info: line -1 - symbol[004F] <= 'System.Byte[]'
Info: line 9 - code[0050] <= '0001_101_000_000_000'
Info: line -1 - symbol[0050] <= 'System.Byte[]'
Info: line 9 - code[0051] <= '0000000000000000'
Info: line -1 - symbol[0051] <= 'System.Byte[]'
Info: line 9 - code[0052] <= '0010_000_000_000_000'
Info: line -1 - symbol[0052] <= 'System.Byte[]'
Info: line 9 - code[0053] <= '0000000000000101'
Info: line -1 - symbol[0053] <= 'System.Byte[]'
Info: line 9 - code[0054] <= '0110_000_000_000_011'
Info: line -1 - symbol[0054] <= 'System.Byte[]'
Info: line 9 - code[0055] <= '0010_000_000_000_000'
Info: line -1 - symbol[0055] <= 'System.Byte[]'
Warning: value 11111111111111111111111111100010 truncated to value 1111111111100010 in line 39.
Info: line 9 - code[0056] <= '1111111111100010'
Info: line -1 - symbol[0056] <= 'System.Byte[]'
Info: line 9 - code[0057] <= '0000_101_000_000_110'
Info: line -1 - symbol[0057] <= 'System.Byte[]'
Info: line 9 - code[0058] <= '0000_011_000_000_000'
Info: line -1 - symbol[0058] <= 'System.Byte[]'
Info: line 9 - code[0059] <= '0000_111_000_000_011'
Info: line -1 - symbol[0059] <= 'System.Byte[]'
Info: line 9 - code[005A] <= '0000_100_000_111_000'
Info: line -1 - symbol[005A] <= 'System.Byte[]'
Info: line 9 - code[005B] <= '0000_011_000_000_000'
Info: line -1 - symbol[005B] <= 'System.Byte[]'
Info: line 9 - code[005C] <= '0000_111_000_100_000'
Info: line -1 - symbol[005C] <= 'System.Byte[]'
Info: line 9 - code[005D] <= '0000_100_011_000_010'
Info: line -1 - symbol[005D] <= 'System.Byte[]'
Info: line 9 - code[005E] <= '1011_000_000_000_000'
Info: line -1 - symbol[005E] <= 'System.Byte[]'
Warning: value 11111111111111111111111111101011 truncated to value 1111111111101011 in line 48.
Info: line 9 - code[005F] <= '1111111111101011'
Info: line -1 - symbol[005F] <= 'System.Byte[]'
Info: line 9 - code[0060] <= '0000_000_100_000_010'
Info: line -1 - symbol[0060] <= 'System.Byte[]'
Info: line 9 - code[0061] <= '0100_000_000_000_010'
Info: line -1 - symbol[0061] <= 'System.Byte[]'
Info: line 9 - code[0062] <= '0000_000_000_000_011'
Info: line -1 - symbol[0062] <= 'System.Byte[]'
Info: line 9 - code[0063] <= '0000_000_111_000_011'
Info: line -1 - symbol[0063] <= 'System.Byte[]'
Info: line 9 - code[0064] <= '0000_000_001_000_110'
Info: line -1 - symbol[0064] <= 'System.Byte[]'
Info: line 9 - code[0065] <= '1011_000_000_000_000'
Info: line -1 - symbol[0065] <= 'System.Byte[]'
Info: line 9 - code[0066] <= '0000000000000010'
Info: line -1 - symbol[0066] <= 'System.Byte[]'
Info: line 9 - code[0067] <= '0001_111_111_111_111'
Info: line -1 - symbol[0067] <= 'System.Byte[]'
Info: line 9 - code[0068] <= '0000_000_000_111_011'
Info: line -1 - symbol[0068] <= 'System.Byte[]'
Info: line 9 - code[0069] <= '0000_000_000_001_110'
Info: line -1 - symbol[0069] <= 'System.Byte[]'
Info: line 9 - code[006A] <= '1101_000_000_000_000'
Info: line -1 - symbol[006A] <= 'System.Byte[]'
Info: line 9 - code[006B] <= '0000000000000010'
Info: line -1 - symbol[006B] <= 'System.Byte[]'
Info: line 9 - code[006C] <= '0001_111_111_111_111'
Info: line -1 - symbol[006C] <= 'System.Byte[]'
Info: line 9 - code[006D] <= '0000_111_000_000_011'
Info: line -1 - symbol[006D] <= 'System.Byte[]'
Info: line 9 - code[006E] <= '0001_100_100_100_000'
Info: line -1 - symbol[006E] <= 'System.Byte[]'
Info: line 9 - code[006F] <= '0000000000000000'
Info: line -1 - symbol[006F] <= 'System.Byte[]'
Info: line 9 - code[0070] <= '0000_100_000_000_010'
Info: line -1 - symbol[0070] <= 'System.Byte[]'
Info: line 9 - code[0071] <= '0000_000_000_100_010'
Info: line -1 - symbol[0071] <= 'System.Byte[]'
Info: line 9 - code[0072] <= '0000_000_100_000_010'
Info: line -1 - symbol[0072] <= 'System.Byte[]'
Info: line 9 - code[0073] <= '0000_000_000_000_010'
Info: line -1 - symbol[0073] <= 'System.Byte[]'
Info: line 9 - code[0074] <= '0100_000_000_000_010'
Info: line -1 - symbol[0074] <= 'System.Byte[]'
Info: line 9 - code[0075] <= '0001_000_000_100_000'
Info: line -1 - symbol[0075] <= 'System.Byte[]'
Info: line 9 - code[0076] <= '1110000000000000'
Info: line -1 - symbol[0076] <= 'System.Byte[]'
Info: line 9 - code[0077] <= '0001_100_000_000_000'
Info: line -1 - symbol[0077] <= 'System.Byte[]'
Info: line 9 - code[0078] <= '0000000000000011'
Info: line -1 - symbol[0078] <= 'System.Byte[]'
Info: line 9 - code[0079] <= '0000_111_000_110_000'
Info: line -1 - symbol[0079] <= 'System.Byte[]'
Info: line 9 - code[007A] <= '0001_100_000_000_000'
Info: line -1 - symbol[007A] <= 'System.Byte[]'
Info: line 9 - code[007B] <= '0000000000010000'
Info: line -1 - symbol[007B] <= 'System.Byte[]'
Info: line 9 - code[007C] <= '0000_111_000_110_000'
Info: line -1 - symbol[007C] <= 'System.Byte[]'
Info: line 9 - code[007D] <= '0100_000_000_000_010'
Info: line -1 - symbol[007D] <= 'System.Byte[]'
Info: line 9 - code[007E] <= '0000_000_000_111_011'
Info: line -1 - symbol[007E] <= 'System.Byte[]'
Info: line 9 - code[007F] <= '0001_000_000_100_000'
Info: line -1 - symbol[007F] <= 'System.Byte[]'
Info: line 9 - code[0080] <= '1110000000000000'
Info: line -1 - symbol[0080] <= 'System.Byte[]'
Info: line 9 - code[0081] <= '0000_100_000_110_000'
Info: line -1 - symbol[0081] <= 'System.Byte[]'
Info: line 9 - code[0082] <= '0000_011_000_000_000'
Info: line -1 - symbol[0082] <= 'System.Byte[]'
Info: line 9 - code[0083] <= '1000_000_000_000_000'
Info: line -1 - symbol[0083] <= 'System.Byte[]'
Info: line 9 - code[0084] <= '0000000000000011'
Info: line -1 - symbol[0084] <= 'System.Byte[]'
Info: line 9 - code[0085] <= '0010_000_000_000_000'
Info: line -1 - symbol[0085] <= 'System.Byte[]'
Warning: value 11111111111111111111111111111011 truncated to value 1111111111111011 in line 20.
Info: line 9 - code[0086] <= '1111111111111011'
Info: line -1 - symbol[0086] <= 'System.Byte[]'
Info: line 9 - code[0087] <= '0000_000_000_010_000'
Info: line -1 - symbol[0087] <= 'System.Byte[]'
Info: line 9 - code[0088] <= '0000_100_000_110_000'
Info: line -1 - symbol[0088] <= 'System.Byte[]'
Info: line 9 - code[0089] <= '0001_110_000_000_000'
Info: line -1 - symbol[0089] <= 'System.Byte[]'
Info: line 9 - code[008A] <= '0000000011111111'
Info: line -1 - symbol[008A] <= 'System.Byte[]'
Info: line 9 - code[008B] <= '0000_000_000_100_010'
Info: line -1 - symbol[008B] <= 'System.Byte[]'
Info: line 9 - code[008C] <= '0100_000_000_000_010'
Info: line -1 - symbol[008C] <= 'System.Byte[]'
Info: line 9 - code[008D] <= '0000_000_000_111_011'
Info: line -1 - symbol[008D] <= 'System.Byte[]'
Info: line 9 - code[008E] <= '0000_111_000_000_011'
Info: line -1 - symbol[008E] <= 'System.Byte[]'
Info: line 9 - code[008F] <= '0001_000_000_100_000'
Info: line -1 - symbol[008F] <= 'System.Byte[]'
Info: line 9 - code[0090] <= '1110000000000000'
Info: line -1 - symbol[0090] <= 'System.Byte[]'
Info: line 9 - code[0091] <= '0000_100_000_110_000'
Info: line -1 - symbol[0091] <= 'System.Byte[]'
Info: line 9 - code[0092] <= '0000_011_000_000_000'
Info: line -1 - symbol[0092] <= 'System.Byte[]'
Info: line 9 - code[0093] <= '0000_011_000_000_000'
Info: line -1 - symbol[0093] <= 'System.Byte[]'
Info: line 9 - code[0094] <= '1000_000_000_000_000'
Info: line -1 - symbol[0094] <= 'System.Byte[]'
Info: line 9 - code[0095] <= '0000000000000011'
Info: line -1 - symbol[0095] <= 'System.Byte[]'
Info: line 9 - code[0096] <= '0010_000_000_000_000'
Info: line -1 - symbol[0096] <= 'System.Byte[]'
Warning: value 11111111111111111111111111111010 truncated to value 1111111111111010 in line 38.
Info: line 9 - code[0097] <= '1111111111111010'
Info: line -1 - symbol[0097] <= 'System.Byte[]'
Info: line 9 - code[0098] <= '0000_100_000_010_010'
Info: line -1 - symbol[0098] <= 'System.Byte[]'
Info: line 9 - code[0099] <= '0000_111_000_110_000'
Info: line -1 - symbol[0099] <= 'System.Byte[]'
Info: line 9 - code[009A] <= '0000_000_000_100_010'
Info: line -1 - symbol[009A] <= 'System.Byte[]'
Info: line 9 - code[009B] <= '0100_000_000_000_010'
Info: line -1 - symbol[009B] <= 'System.Byte[]'
Info: line 9 - code[009C] <= '0000_100_110_000_000'
Info: line -1 - symbol[009C] <= 'System.Byte[]'
Info: line 9 - code[009D] <= '1001_000_000_000_000'
Info: line -1 - symbol[009D] <= 'System.Byte[]'
Info: line 9 - code[009E] <= '0000000000000110'
Info: line -1 - symbol[009E] <= 'System.Byte[]'
Info: line 9 - code[009F] <= '0110_000_000_000_011'
Info: line -1 - symbol[009F] <= 'System.Byte[]'
Info: line 9 - code[00A0] <= '0010_000_000_000_000'
Info: line -1 - symbol[00A0] <= 'System.Byte[]'
Warning: value 11111111111111111111111111101100 truncated to value 1111111111101100 in line 49.
Info: line 9 - code[00A1] <= '1111111111101100'
Info: line -1 - symbol[00A1] <= 'System.Byte[]'
Info: line 9 - code[00A2] <= '0010_000_010_000_000'
Info: line -1 - symbol[00A2] <= 'System.Byte[]'
Warning: value 11111111111111111111111111111001 truncated to value 1111111111111001 in line 51.
Info: line 9 - code[00A3] <= '1111111111111001'
Info: line -1 - symbol[00A3] <= 'System.Byte[]'
Info: line 9 - code[00A4] <= '0100_000_000_000_010'
Info: line -1 - symbol[00A4] <= 'System.Byte[]'
Info: line 9 - code[00A5] <= '0110_000_000_000_011'
Info: line -1 - symbol[00A5] <= 'System.Byte[]'
Info: line 9 - code[00A6] <= '0010_000_000_000_000'
Info: line -1 - symbol[00A6] <= 'System.Byte[]'
Warning: value 11111111111111111111111110010001 truncated to value 1111111110010001 in line 10.
Info: line 9 - code[00A7] <= '1111111110010001'
Info: line -1 - symbol[00A7] <= 'System.Byte[]'
Info: line 9 - code[00A8] <= '0001_100_000_000_000'
Info: line -1 - symbol[00A8] <= 'System.Byte[]'
Info: line 9 - code[00A9] <= '0000000001000000'
Info: line -1 - symbol[00A9] <= 'System.Byte[]'
Info: line 9 - code[00AA] <= '0000_111_000_000_011'
Info: line -1 - symbol[00AA] <= 'System.Byte[]'
Info: line 9 - code[00AB] <= '0001_100_000_000_000'
Info: line -1 - symbol[00AB] <= 'System.Byte[]'
Info: line 9 - code[00AC] <= '0001000000000000'
Info: line -1 - symbol[00AC] <= 'System.Byte[]'
Info: line 9 - code[00AD] <= '0001_000_100_000_000'
Info: line -1 - symbol[00AD] <= 'System.Byte[]'
Info: line 9 - code[00AE] <= '0000000000100000'
Info: line -1 - symbol[00AE] <= 'System.Byte[]'
Info: line 9 - code[00AF] <= '0001_000_000_100_000'
Info: line -1 - symbol[00AF] <= 'System.Byte[]'
Info: line 9 - code[00B0] <= '1111111100000000'
Info: line -1 - symbol[00B0] <= 'System.Byte[]'
Info: line 9 - code[00B1] <= '0000_111_000_110_000'
Info: line -1 - symbol[00B1] <= 'System.Byte[]'
Info: line 9 - code[00B2] <= '0000_100_000_110_000'
Info: line -1 - symbol[00B2] <= 'System.Byte[]'
Info: line 9 - code[00B3] <= '0000_101_000_010_110'
Info: line -1 - symbol[00B3] <= 'System.Byte[]'
Info: line 9 - code[00B4] <= '0000_111_011_110_000'
Info: line -1 - symbol[00B4] <= 'System.Byte[]'
Info: line 9 - code[00B5] <= '1011_000_000_000_000'
Info: line -1 - symbol[00B5] <= 'System.Byte[]'
Info: line 9 - code[00B6] <= '0000000000000011'
Info: line -1 - symbol[00B6] <= 'System.Byte[]'
Info: line 9 - code[00B7] <= '0010_000_000_000_000'
Info: line -1 - symbol[00B7] <= 'System.Byte[]'
Warning: value 11111111111111111111111111111010 truncated to value 1111111111111010 in line 27.
Info: line 9 - code[00B8] <= '1111111111111010'
Info: line -1 - symbol[00B8] <= 'System.Byte[]'
Info: line 9 - code[00B9] <= '0000_100_000_000_010'
Info: line -1 - symbol[00B9] <= 'System.Byte[]'
Info: line 9 - code[00BA] <= '0001_100_000_000_000'
Info: line -1 - symbol[00BA] <= 'System.Byte[]'
Info: line 9 - code[00BB] <= '0000000000000001'
Info: line -1 - symbol[00BB] <= 'System.Byte[]'
Info: line 9 - code[00BC] <= '0000_000_111_000_011'
Info: line -1 - symbol[00BC] <= 'System.Byte[]'
Info: line 9 - code[00BD] <= '0000_000_000_111_011'
Info: line -1 - symbol[00BD] <= 'System.Byte[]'
Info: line 9 - code[00BE] <= '0000_111_000_000_011'
Info: line -1 - symbol[00BE] <= 'System.Byte[]'
Info: line 9 - code[00BF] <= '0001_001_000_000_000'
Info: line -1 - symbol[00BF] <= 'System.Byte[]'
Info: line 9 - code[00C0] <= '0000000000000010'
Info: line -1 - symbol[00C0] <= 'System.Byte[]'
Info: line 9 - code[00C1] <= '1001_000_000_000_000'
Info: line -1 - symbol[00C1] <= 'System.Byte[]'
Info: line 9 - code[00C2] <= '0000000010000000'
Info: line -1 - symbol[00C2] <= 'System.Byte[]'
Info: line 9 - code[00C3] <= '0000_100_000_000_110'
Info: line -1 - symbol[00C3] <= 'System.Byte[]'
Info: line 9 - code[00C4] <= '0001_001_000_000_000'
Info: line -1 - symbol[00C4] <= 'System.Byte[]'
Info: line 9 - code[00C5] <= '0000000000000001'
Info: line -1 - symbol[00C5] <= 'System.Byte[]'
Info: line 9 - code[00C6] <= '1001_000_000_000_000'
Info: line -1 - symbol[00C6] <= 'System.Byte[]'
Info: line 9 - code[00C7] <= '0000000001011101'
Info: line -1 - symbol[00C7] <= 'System.Byte[]'
Info: line 9 - code[00C8] <= '0110_000_000_000_011'
Info: line -1 - symbol[00C8] <= 'System.Byte[]'
Info: line 9 - code[00C9] <= '0010_000_000_000_000'
Info: line -1 - symbol[00C9] <= 'System.Byte[]'
Info: line 9 - code[00CA] <= '0000000001111101'
Info: line -1 - symbol[00CA] <= 'System.Byte[]'
Info: line 9 - code[00CB] <= '0000_100_000_000_110'
Info: line -1 - symbol[00CB] <= 'System.Byte[]'
Info: line 9 - code[00CC] <= '0001_001_000_000_000'
Info: line -1 - symbol[00CC] <= 'System.Byte[]'
Info: line 9 - code[00CD] <= '0000000000001101'
Info: line -1 - symbol[00CD] <= 'System.Byte[]'
Info: line 9 - code[00CE] <= '1001_000_000_000_000'
Info: line -1 - symbol[00CE] <= 'System.Byte[]'
Info: line 9 - code[00CF] <= '0000000001001101'
Info: line -1 - symbol[00CF] <= 'System.Byte[]'
Info: line 9 - code[00D0] <= '0000_100_000_000_110'
Info: line -1 - symbol[00D0] <= 'System.Byte[]'
Info: line 9 - code[00D1] <= '0001_001_000_000_000'
Info: line -1 - symbol[00D1] <= 'System.Byte[]'
Info: line 9 - code[00D2] <= '0000000000001010'
Info: line -1 - symbol[00D2] <= 'System.Byte[]'
Info: line 9 - code[00D3] <= '1001_000_000_000_000'
Info: line -1 - symbol[00D3] <= 'System.Byte[]'
Info: line 9 - code[00D4] <= '0000000001001101'
Info: line -1 - symbol[00D4] <= 'System.Byte[]'
Info: line 9 - code[00D5] <= '0000_100_000_000_010'
Info: line -1 - symbol[00D5] <= 'System.Byte[]'
Info: line 9 - code[00D6] <= '0000_000_000_000_000'
Info: line -1 - symbol[00D6] <= 'System.Byte[]'
Info: line 9 - code[00D7] <= '0000_000_000_111_011'
Info: line -1 - symbol[00D7] <= 'System.Byte[]'
Info: line 9 - code[00D8] <= '0110_000_000_000_011'
Info: line -1 - symbol[00D8] <= 'System.Byte[]'
Info: line 9 - code[00D9] <= '0010_000_000_000_000'
Info: line -1 - symbol[00D9] <= 'System.Byte[]'
Info: line 9 - code[00DA] <= '0000000001110110'
Info: line -1 - symbol[00DA] <= 'System.Byte[]'
Info: line 9 - code[00DB] <= '0000_111_110_110_000'
Info: line -1 - symbol[00DB] <= 'System.Byte[]'
Info: line 9 - code[00DC] <= '0000_000_010_100_010'
Info: line -1 - symbol[00DC] <= 'System.Byte[]'
Info: line 9 - code[00DD] <= '0001_000_001_000_000'
Info: line -1 - symbol[00DD] <= 'System.Byte[]'
Info: line 9 - code[00DE] <= '0000000001000000'
Info: line -1 - symbol[00DE] <= 'System.Byte[]'
Info: line 9 - code[00DF] <= '1010_000_000_000_000'
Info: line -1 - symbol[00DF] <= 'System.Byte[]'
Info: line 9 - code[00E0] <= '0000000000001100'
Info: line -1 - symbol[00E0] <= 'System.Byte[]'
Info: line 9 - code[00E1] <= '0000_000_000_111_011'
Info: line -1 - symbol[00E1] <= 'System.Byte[]'
Info: line 9 - code[00E2] <= '0001_000_000_100_000'
Info: line -1 - symbol[00E2] <= 'System.Byte[]'
Info: line 9 - code[00E3] <= '1111111100111110'
Info: line -1 - symbol[00E3] <= 'System.Byte[]'
Info: line 9 - code[00E4] <= '0000_000_111_110_000'
Info: line -1 - symbol[00E4] <= 'System.Byte[]'
Info: line 9 - code[00E5] <= '0001_000_100_000_000'
Info: line -1 - symbol[00E5] <= 'System.Byte[]'
Info: line 9 - code[00E6] <= '1111111100111111'
Info: line -1 - symbol[00E6] <= 'System.Byte[]'
Info: line 9 - code[00E7] <= '0000_000_000_100_010'
Info: line -1 - symbol[00E7] <= 'System.Byte[]'
Info: line 9 - code[00E8] <= '0000_000_110_111_000'
Info: line -1 - symbol[00E8] <= 'System.Byte[]'
Info: line 9 - code[00E9] <= '0000_000_000_100_010'
Info: line -1 - symbol[00E9] <= 'System.Byte[]'
Info: line 9 - code[00EA] <= '0000_000_100_000_010'
Info: line -1 - symbol[00EA] <= 'System.Byte[]'
Info: line 9 - code[00EB] <= '0100_000_000_000_010'
Info: line -1 - symbol[00EB] <= 'System.Byte[]'
Info: line 9 - code[00EC] <= '0001_000_100_000_000'
Info: line -1 - symbol[00EC] <= 'System.Byte[]'
Info: line 9 - code[00ED] <= '0000000000000000'
Info: line -1 - symbol[00ED] <= 'System.Byte[]'
Info: line 9 - code[00EE] <= '0000_000_000_010_000'
Info: line -1 - symbol[00EE] <= 'System.Byte[]'
Info: line 9 - code[00EF] <= '0001_000_000_001_000'
Info: line -1 - symbol[00EF] <= 'System.Byte[]'
Info: line 9 - code[00F0] <= '0000000000100000'
Info: line -1 - symbol[00F0] <= 'System.Byte[]'
Info: line 9 - code[00F1] <= '1100_000_000_000_000'
Info: line -1 - symbol[00F1] <= 'System.Byte[]'
Info: line 9 - code[00F2] <= '0000000000000011'
Info: line -1 - symbol[00F2] <= 'System.Byte[]'
Info: line 9 - code[00F3] <= '0010_000_000_000_000'
Info: line -1 - symbol[00F3] <= 'System.Byte[]'
Warning: value 11111111111111111111111111101101 truncated to value 1111111111101101 in line 101.
Info: line 9 - code[00F4] <= '1111111111101101'
Info: line -1 - symbol[00F4] <= 'System.Byte[]'
Info: line 9 - code[00F5] <= '0001_000_000_100_000'
Info: line -1 - symbol[00F5] <= 'System.Byte[]'
Info: line 9 - code[00F6] <= '0000000000000000'
Info: line -1 - symbol[00F6] <= 'System.Byte[]'
Info: line 9 - code[00F7] <= '0000_000_000_111_011'
Info: line -1 - symbol[00F7] <= 'System.Byte[]'
Info: line 9 - code[00F8] <= '0001_000_100_000_000'
Info: line -1 - symbol[00F8] <= 'System.Byte[]'
Info: line 9 - code[00F9] <= '0000000000000000'
Info: line -1 - symbol[00F9] <= 'System.Byte[]'
Info: line 9 - code[00FA] <= '0110_000_000_000_011'
Info: line -1 - symbol[00FA] <= 'System.Byte[]'
Info: line 9 - code[00FB] <= '0010_000_000_000_000'
Info: line -1 - symbol[00FB] <= 'System.Byte[]'
Info: line 9 - code[00FC] <= '0000000001010100'
Info: line -1 - symbol[00FC] <= 'System.Byte[]'
Info: line 9 - code[00FD] <= '0000_000_000_111_011'
Info: line -1 - symbol[00FD] <= 'System.Byte[]'
Info: line 9 - code[00FE] <= '0001_000_000_101_000'
Info: line -1 - symbol[00FE] <= 'System.Byte[]'
Info: line 9 - code[00FF] <= '0000000001000000'
Info: line -1 - symbol[00FF] <= 'System.Byte[]'
Info: line 9 - code[0100] <= '0000_100_110_110_000'
Info: line -1 - symbol[0100] <= 'System.Byte[]'
Info: line 9 - code[0101] <= '0000_000_000_100_010'
Info: line -1 - symbol[0101] <= 'System.Byte[]'
Info: line 9 - code[0102] <= '0000_111_110_110_000'
Info: line -1 - symbol[0102] <= 'System.Byte[]'
Info: line 9 - code[0103] <= '0000_000_010_000_000'
Info: line -1 - symbol[0103] <= 'System.Byte[]'
Info: line 9 - code[0104] <= '0001_000_001_000_000'
Info: line -1 - symbol[0104] <= 'System.Byte[]'
Info: line 9 - code[0105] <= '0000000001000000'
Info: line -1 - symbol[0105] <= 'System.Byte[]'
Info: line 9 - code[0106] <= '1010_000_000_000_000'
Info: line -1 - symbol[0106] <= 'System.Byte[]'
Info: line 9 - code[0107] <= '0000000000000011'
Info: line -1 - symbol[0107] <= 'System.Byte[]'
Info: line 9 - code[0108] <= '0010_000_000_000_000'
Info: line -1 - symbol[0108] <= 'System.Byte[]'
Warning: value 11111111111111111111111111110100 truncated to value 1111111111110100 in line 123.
Info: line 9 - code[0109] <= '1111111111110100'
Info: line -1 - symbol[0109] <= 'System.Byte[]'
Info: line 9 - code[010A] <= '0000_000_000_100_010'
Info: line -1 - symbol[010A] <= 'System.Byte[]'
Info: line 9 - code[010B] <= '0000_000_000_010_000'
Info: line -1 - symbol[010B] <= 'System.Byte[]'
Info: line 9 - code[010C] <= '0001_000_000_001_000'
Info: line -1 - symbol[010C] <= 'System.Byte[]'
Info: line 9 - code[010D] <= '0000000000011111'
Info: line -1 - symbol[010D] <= 'System.Byte[]'
Info: line 9 - code[010E] <= '1100_000_000_000_000'
Info: line -1 - symbol[010E] <= 'System.Byte[]'
Info: line 9 - code[010F] <= '0000000000000011'
Info: line -1 - symbol[010F] <= 'System.Byte[]'
Info: line 9 - code[0110] <= '0010_000_000_000_000'
Info: line -1 - symbol[0110] <= 'System.Byte[]'
Warning: value 11111111111111111111111111100110 truncated to value 1111111111100110 in line 131.
Info: line 9 - code[0111] <= '1111111111100110'
Info: line -1 - symbol[0111] <= 'System.Byte[]'
Info: line 9 - code[0112] <= '0000_000_000_000_000'
Info: line -1 - symbol[0112] <= 'System.Byte[]'
Info: line 9 - code[0113] <= '0001_000_000_100_000'
Info: line -1 - symbol[0113] <= 'System.Byte[]'
Info: line 9 - code[0114] <= '0000000000011111'
Info: line -1 - symbol[0114] <= 'System.Byte[]'
Info: line 9 - code[0115] <= '0000_000_000_111_011'
Info: line -1 - symbol[0115] <= 'System.Byte[]'
Info: line 9 - code[0116] <= '0110_000_000_000_011'
Info: line -1 - symbol[0116] <= 'System.Byte[]'
Info: line 9 - code[0117] <= '0010_000_000_000_000'
Info: line -1 - symbol[0117] <= 'System.Byte[]'
Info: line 9 - code[0118] <= '0000000000011101'
Info: line -1 - symbol[0118] <= 'System.Byte[]'
Info: line 9 - code[0119] <= '0000_000_000_100_010'
Info: line -1 - symbol[0119] <= 'System.Byte[]'
Info: line 9 - code[011A] <= '0010_000_000_000_000'
Info: line -1 - symbol[011A] <= 'System.Byte[]'
Info: line 9 - code[011B] <= '0000000000000010'
Info: line -1 - symbol[011B] <= 'System.Byte[]'
Info: line 9 - code[011C] <= '0000_100_000_000_010'
Info: line -1 - symbol[011C] <= 'System.Byte[]'
Info: line 9 - code[011D] <= '0001_000_100_000_000'
Info: line -1 - symbol[011D] <= 'System.Byte[]'
Info: line 9 - code[011E] <= '0000000000000000'
Info: line -1 - symbol[011E] <= 'System.Byte[]'
Info: line 9 - code[011F] <= '0010_000_000_000_000'
Info: line -1 - symbol[011F] <= 'System.Byte[]'
Warning: value 11111111111111111111111111000001 truncated to value 1111111111000001 in line 148.
Info: line 9 - code[0120] <= '1111111111000001'
Info: line -1 - symbol[0120] <= 'System.Byte[]'
Info: line 9 - code[0121] <= '0000_100_000_000_010'
Info: line -1 - symbol[0121] <= 'System.Byte[]'
Info: line 9 - code[0122] <= '0010_000_000_000_000'
Info: line -1 - symbol[0122] <= 'System.Byte[]'
Warning: value 11111111111111111111111111001011 truncated to value 1111111111001011 in line 152.
Info: line 9 - code[0123] <= '1111111111001011'
Info: line -1 - symbol[0123] <= 'System.Byte[]'
Info: line 9 - code[0124] <= '0000_100_000_000_010'
Info: line -1 - symbol[0124] <= 'System.Byte[]'
Info: line 9 - code[0125] <= '0001_100_000_000_000'
Info: line -1 - symbol[0125] <= 'System.Byte[]'
Info: line 9 - code[0126] <= '0000000000100000'
Info: line -1 - symbol[0126] <= 'System.Byte[]'
Info: line 9 - code[0127] <= '0001_000_000_100_000'
Info: line -1 - symbol[0127] <= 'System.Byte[]'
Info: line 9 - code[0128] <= '0000000000000000'
Info: line -1 - symbol[0128] <= 'System.Byte[]'
Info: line 9 - code[0129] <= '0000_000_000_111_011'
Info: line -1 - symbol[0129] <= 'System.Byte[]'
Info: line 9 - code[012A] <= '0110_000_000_000_011'
Info: line -1 - symbol[012A] <= 'System.Byte[]'
Info: line 9 - code[012B] <= '0010_000_000_000_000'
Info: line -1 - symbol[012B] <= 'System.Byte[]'
Info: line 9 - code[012C] <= '0000000000001001'
Info: line -1 - symbol[012C] <= 'System.Byte[]'
Info: line 9 - code[012D] <= '0000_000_000_100_010'
Info: line -1 - symbol[012D] <= 'System.Byte[]'
Info: line 9 - code[012E] <= '0000_000_000_010_000'
Info: line -1 - symbol[012E] <= 'System.Byte[]'
Info: line 9 - code[012F] <= '0001_000_000_001_000'
Info: line -1 - symbol[012F] <= 'System.Byte[]'
Info: line 9 - code[0130] <= '0000000000100000'
Info: line -1 - symbol[0130] <= 'System.Byte[]'
Info: line 9 - code[0131] <= '1100_000_000_000_000'
Info: line -1 - symbol[0131] <= 'System.Byte[]'
Info: line 9 - code[0132] <= '0000000000010001'
Info: line -1 - symbol[0132] <= 'System.Byte[]'
Info: line 9 - code[0133] <= '0010_000_000_000_000'
Info: line -1 - symbol[0133] <= 'System.Byte[]'
Warning: value 11111111111111111111111111110101 truncated to value 1111111111110101 in line 170.
Info: line 9 - code[0134] <= '1111111111110101'
Info: line -1 - symbol[0134] <= 'System.Byte[]'
Info: line 9 - code[0135] <= '0110_000_000_000_011'
Info: line -1 - symbol[0135] <= 'System.Byte[]'
Info: line 9 - code[0136] <= '0010_000_000_000_000'
Info: line -1 - symbol[0136] <= 'System.Byte[]'
Info: line 9 - code[0137] <= '0000000000011001'
Info: line -1 - symbol[0137] <= 'System.Byte[]'
Info: line 9 - code[0138] <= '0001_100_000_000_000'
Info: line -1 - symbol[0138] <= 'System.Byte[]'
Info: line 9 - code[0139] <= '0000000000100000'
Info: line -1 - symbol[0139] <= 'System.Byte[]'
Info: line 9 - code[013A] <= '0001_000_100_000_000'
Info: line -1 - symbol[013A] <= 'System.Byte[]'
Info: line 9 - code[013B] <= '0000000000000111'
Info: line -1 - symbol[013B] <= 'System.Byte[]'
Info: line 9 - code[013C] <= '0000_111_110_110_000'
Info: line -1 - symbol[013C] <= 'System.Byte[]'
Info: line 9 - code[013D] <= '1011_000_000_000_000'
Info: line -1 - symbol[013D] <= 'System.Byte[]'
Info: line 9 - code[013E] <= '0000000000000011'
Info: line -1 - symbol[013E] <= 'System.Byte[]'
Info: line 9 - code[013F] <= '0010_000_011_000_000'
Info: line -1 - symbol[013F] <= 'System.Byte[]'
Warning: value 11111111111111111111111111111100 truncated to value 1111111111111100 in line 183.
Info: line 9 - code[0140] <= '1111111111111100'
Info: line -1 - symbol[0140] <= 'System.Byte[]'
Info: line 9 - code[0141] <= '0100_000_000_000_010'
Info: line -1 - symbol[0141] <= 'System.Byte[]'
Info: line 9 - code[0142] <= '0000_100_000_000_010'
Info: line -1 - symbol[0142] <= 'System.Byte[]'
Info: line 9 - code[0143] <= '0001_000_100_100_000'
Info: line -1 - symbol[0143] <= 'System.Byte[]'
Info: line 9 - code[0144] <= '0000000000000000'
Info: line -1 - symbol[0144] <= 'System.Byte[]'
Info: line 9 - code[0145] <= '0010_000_000_000_000'
Info: line -1 - symbol[0145] <= 'System.Byte[]'
Warning: value 11111111111111111111111110011011 truncated to value 1111111110011011 in line 190.
Info: line 9 - code[0146] <= '1111111110011011'
Info: line -1 - symbol[0146] <= 'System.Byte[]'
Info: line 9 - code[0147] <= '0001_000_000_100_000'
Info: line -1 - symbol[0147] <= 'System.Byte[]'
Info: line 9 - code[0148] <= '1111111100111110'
Info: line -1 - symbol[0148] <= 'System.Byte[]'
Info: line 9 - code[0149] <= '0000_000_100_110_000'
Info: line -1 - symbol[0149] <= 'System.Byte[]'
Info: line 9 - code[014A] <= '0000_000_111_000_011'
Info: line -1 - symbol[014A] <= 'System.Byte[]'
Info: line 9 - code[014B] <= '0001_000_100_000_000'
Info: line -1 - symbol[014B] <= 'System.Byte[]'
Info: line 9 - code[014C] <= '1111111100111111'
Info: line -1 - symbol[014C] <= 'System.Byte[]'
Info: line 9 - code[014D] <= '0000_000_110_100_000'
Info: line -1 - symbol[014D] <= 'System.Byte[]'
Info: line 9 - code[014E] <= '0000_000_100_000_010'
Info: line -1 - symbol[014E] <= 'System.Byte[]'
Info: line 9 - code[014F] <= '0100_000_000_000_010'
Info: line -1 - symbol[014F] <= 'System.Byte[]'
Info: line 9 - code[0150] <= '0000_111_000_000_011'
Info: line -1 - symbol[0150] <= 'System.Byte[]'
Info: line 9 - code[0151] <= '0001_000_000_101_000'
Info: line -1 - symbol[0151] <= 'System.Byte[]'
Info: line 9 - code[0152] <= '1111111100000000'
Info: line -1 - symbol[0152] <= 'System.Byte[]'
Info: line 9 - code[0153] <= '0000_100_000_110_000'
Info: line -1 - symbol[0153] <= 'System.Byte[]'
Info: line 9 - code[0154] <= '0000_111_000_100_000'
Info: line -1 - symbol[0154] <= 'System.Byte[]'
Info: line 9 - code[0155] <= '0000_100_000_000_010'
Info: line -1 - symbol[0155] <= 'System.Byte[]'
Info: line 9 - code[0156] <= '0100_000_000_000_010'
Info: line -1 - symbol[0156] <= 'System.Byte[]'
Info: line 9 - code[0157] <= '0000_100_110_000_000'
Info: line -1 - symbol[0157] <= 'System.Byte[]'
Info: line 9 - code[0158] <= '1001_000_000_000_000'
Info: line -1 - symbol[0158] <= 'System.Byte[]'
Info: line 9 - code[0159] <= '0000000000000110'
Info: line -1 - symbol[0159] <= 'System.Byte[]'
Info: line 9 - code[015A] <= '0110_000_000_000_011'
Info: line -1 - symbol[015A] <= 'System.Byte[]'
Info: line 9 - code[015B] <= '0010_000_000_000_000'
Info: line -1 - symbol[015B] <= 'System.Byte[]'
Warning: value 11111111111111111111111101100000 truncated to value 1111111101100000 in line 215.
Info: line 9 - code[015C] <= '1111111101100000'
Info: line -1 - symbol[015C] <= 'System.Byte[]'
Info: line 9 - code[015D] <= '0010_000_010_000_000'
Info: line -1 - symbol[015D] <= 'System.Byte[]'
Warning: value 11111111111111111111111111111001 truncated to value 1111111111111001 in line 217.
Info: line 9 - code[015E] <= '1111111111111001'
Info: line -1 - symbol[015E] <= 'System.Byte[]'
Info: line 9 - code[015F] <= '0100_000_000_000_010'
Info: line -1 - symbol[015F] <= 'System.Byte[]'
Info: line 9 - code[0160] <= '0000_111_000_000_011'
Info: line -1 - symbol[0160] <= 'System.Byte[]'
Info: line 9 - code[0161] <= '0001_000_000_100_000'
Info: line -1 - symbol[0161] <= 'System.Byte[]'
Info: line 9 - code[0162] <= '0001000000000000'
Info: line -1 - symbol[0162] <= 'System.Byte[]'
Info: line 9 - code[0163] <= '0001_000_100_000_000'
Info: line -1 - symbol[0163] <= 'System.Byte[]'
Info: line 9 - code[0164] <= '0000000000000000'
Info: line -1 - symbol[0164] <= 'System.Byte[]'
Info: line 9 - code[0165] <= '0000_100_111_000_000'
Info: line -1 - symbol[0165] <= 'System.Byte[]'
Info: line 9 - code[0166] <= '0000_101_000_000_110'
Info: line -1 - symbol[0166] <= 'System.Byte[]'
Info: line 9 - code[0167] <= '0000_111_110_110_000'
Info: line -1 - symbol[0167] <= 'System.Byte[]'
Info: line 9 - code[0168] <= '0000_000_010_000_000'
Info: line -1 - symbol[0168] <= 'System.Byte[]'
Info: line 9 - code[0169] <= '0001_000_001_000_000'
Info: line -1 - symbol[0169] <= 'System.Byte[]'
Info: line 9 - code[016A] <= '0000100000000000'
Info: line -1 - symbol[016A] <= 'System.Byte[]'
Info: line 9 - code[016B] <= '1010_000_000_000_000'
Info: line -1 - symbol[016B] <= 'System.Byte[]'
Info: line 9 - code[016C] <= '0000000000000011'
Info: line -1 - symbol[016C] <= 'System.Byte[]'
Info: line 9 - code[016D] <= '0010_000_000_000_000'
Info: line -1 - symbol[016D] <= 'System.Byte[]'
Warning: value 11111111111111111111111111110111 truncated to value 1111111111110111 in line 234.
Info: line 9 - code[016E] <= '1111111111110111'
Info: line -1 - symbol[016E] <= 'System.Byte[]'
Info: line 9 - code[016F] <= '0000_100_000_000_010'
Info: line -1 - symbol[016F] <= 'System.Byte[]'
Info: line 9 - code[0170] <= '0100_000_000_000_010'
Info: line -1 - symbol[0170] <= 'System.Byte[]'
Generating code: 
Warning in line 9: found 143 uninitialized locations:
0171 .. 01FF

Writing 'C:\Users\zoltanp\Documents\HexCalc\sys_sifp\prog\helloworld_code.mif' ... Done.
Writing 'C:\Users\zoltanp\Documents\HexCalc\sys_sifp\prog\helloworld_code.cgf' ... Done.
Writing 'C:\Users\zoltanp\Documents\HexCalc\sys_sifp\prog\helloworld_code.coe' (LF only) ... Done (initialized locations: 369, empty locations: 143, total locations: 512).
Generating code 'C:\Users\zoltanp\Documents\HexCalc\sys_sifp\prog\helloworld_code.vhd' ... Done.
Writing 'C:\Users\zoltanp\Documents\HexCalc\sys_sifp\prog\helloworld_code.hex' ... Done.
Writing 'C:\Users\zoltanp\Documents\HexCalc\sys_sifp\prog\helloworld_code_lendian.bin' ... Done.
Writing 'C:\Users\zoltanp\Documents\HexCalc\sys_sifp\prog\helloworld_code_bendian.bin' ... Done.
Generating symbol: 
Writing 'C:\Users\zoltanp\Documents\HexCalc\sys_sifp\prog\helloworld_sym.mif' ... Done.
Writing 'C:\Users\zoltanp\Documents\HexCalc\sys_sifp\prog\helloworld_sym.cgf' ... Done.
Writing 'C:\Users\zoltanp\Documents\HexCalc\sys_sifp\prog\helloworld_sym.coe' (LF only) ... Done (initialized locations: 512, empty locations: 0, total locations: 512).
Generating code 'C:\Users\zoltanp\Documents\HexCalc\sys_sifp\prog\helloworld_sym.vhd' ... Done.
Writing 'C:\Users\zoltanp\Documents\HexCalc\sys_sifp\prog\helloworld_sym.