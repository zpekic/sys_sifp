--------------------------------------------------------
-- mcc V1.3.1030 - Custom microcode compiler (c)2020-... 
--    https://github.com/zpekic/MicroCodeCompiler
--------------------------------------------------------
Compiling helloworld.sif, pass 1 out of 2.
Compiling sifp.mcc, pass 1 out of 2.
Success: pass 0 on sifp.mcc - 131 line(s) read, 43 statement(s) parsed, code address range 0xFFFFFFFF - 0xFFFFFFFF.
Compiling sifp_sys.mcc, pass 1 out of 2.
Success: pass 0 on sifp_sys.mcc - 21 line(s) read, 59 statement(s) parsed, code address range 0xFFFFFFFF - 0xFFFFFFFF.
Warning: .org value changed from -1 (0xFFFFFFFF) to 0 (0x0000)
Line 21: resolved aliases:  .to in 'data16 =  @Init', line 21
L0021@0002.  data16 =  @Init;

Warning: .org value changed from 3 (0x0003) to 8 (0x0008)
Line 28: resolved aliases:  PUSHA in 'r_a = STA, r_s = M[PUSH]', line 28
L0028@0008.  r_a = STA, r_s = M[PUSH];

Line 29: resolved aliases:  PUSHX in 'r_x = STX, r_s = M[PUSH]', line 29
L0029@0009.  r_x = STX, r_s = M[PUSH];

Line 30: resolved aliases:  PUSHY in 'r_y = STY, r_s = M[PUSH]', line 30
L0030@000A.  r_y = STY, r_s = M[PUSH];

Line 32: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 32
L0032@000B.  r_p = STP2, r_s = M[PUSH];

Line 34: resolved aliases:  .into in 'data16 =  @GetOldCrsXY - $', line 34
L0034@000D.  data16 =  @GetOldCrsXY - $;

Line 35: resolved aliases:  PUSHY in 'r_y = STY, r_s = M[PUSH]', line 35
L0035@000E.  r_y = STY, r_s = M[PUSH];

Line 36: resolved aliases:  PUSHX in 'r_x = STX, r_s = M[PUSH]', line 36
L0036@000F.  r_x = STX, r_s = M[PUSH];

Line 37: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 37
L0037@0010.  r_p = STP2, r_s = M[PUSH];

Line 39: resolved aliases:  .into in 'data16 =  @GetRowBase - $', line 39
L0039@0012.  data16 =  @GetRowBase - $;

Line 40: resolved aliases:  M[Y+X] in 'LDA, r_x = M[X], r_y = M[Y]', line 40
L0040@0013.  LDA, r_x = M[X], r_y = M[Y];

Line 41: resolved aliases:  ANDI in 'r_p = M[IMM], r_a = AND', line 41
L0041@0014.  r_p = M[IMM], r_a = AND;

Line 42: resolved aliases:  .data in 'data16 =  0xFF7F', line 42
L0042@0015.  data16 =  0xFF7F;

Line 43: resolved aliases:  M[Y+X] in 'STA, r_x = M[X], r_y = M[Y]', line 43
L0043@0016.  STA, r_x = M[X], r_y = M[Y];

Line 44: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 44
L0044@0017.  r_p = STP2, r_s = M[PUSH];

Line 46: resolved aliases:  .into in 'data16 =  @GetCursorXY - $', line 46
L0046@0019.  data16 =  @GetCursorXY - $;

Line 50: resolved aliases:  .branchto in 'data16 =  @CheckY - $', line 50
L0050@001D.  data16 =  @CheckY - $;

Line 52: resolved aliases:  .to in 'data16 =  @NoFlip - $', line 52
L0052@001F.  data16 =  @NoFlip - $;

Line 54: resolved aliases:  .branchto in 'data16 =  @Flip - $', line 54
L0054@0021.  data16 =  @Flip - $;

Line 55: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 55
L0055@0022.NoFlip:  r_p = STP2, r_s = M[PUSH];

Line 57: resolved aliases:  .into in 'data16 =  @SetOldCrsXY - $', line 57
L0057@0024.  data16 =  @SetOldCrsXY - $;

Line 59: resolved aliases:  .to in 'data16 =  @IntExit - $', line 59
L0059@0026.  data16 =  @IntExit - $;

Line 61: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 61
L0061@0027.Flip:  r_p = STP2, r_s = M[PUSH];

Line 63: resolved aliases:  .into in 'data16 =  @GetCursorXY - $', line 63
L0063@0029.  data16 =  @GetCursorXY - $;

Line 64: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 64
L0064@002A.  r_p = STP2, r_s = M[PUSH];

Line 66: resolved aliases:  .into in 'data16 =  @GetRowBase - $', line 66
L0066@002C.  data16 =  @GetRowBase - $;

Line 67: resolved aliases:  M[Y+X] in 'LDA, r_x = M[X], r_y = M[Y]', line 67
L0067@002D.  LDA, r_x = M[X], r_y = M[Y];

Line 68: resolved aliases:  XORI in 'r_p = M[IMM], r_a = XOR', line 68
L0068@002E.  r_p = M[IMM], r_a = XOR;

Line 69: resolved aliases:  .data in 'data16 =  0x0080', line 69
L0069@002F.  data16 =  0x0080;

Line 70: resolved aliases:  M[Y+X] in 'STA, r_x = M[X], r_y = M[Y]', line 70
L0070@0030.  STA, r_x = M[X], r_y = M[Y];

Line 72: resolved aliases:  POPY in 'r_y = LDY, r_s = M[POP]', line 72
L0072@0031.IntExit:  r_y = LDY, r_s = M[POP];

Line 73: resolved aliases:  POPX in 'r_x = LDX, r_s = M[POP]', line 73
L0073@0032.  r_x = LDX, r_s = M[POP];

Line 74: resolved aliases:  POPA in 'r_a = LDA, r_s = M[POP]', line 74
L0074@0033.  r_a = LDA, r_s = M[POP];

Line 75: resolved aliases:  POPF in 'r_p = NOP, r_a = NOA, r_x = NOX, r_y = NOY, r_s = M[POP]', line 75
L0075@0034.  r_p = NOP, r_a = NOA, r_x = NOX, r_y = NOY, r_s = M[POP];

Line 76: resolved aliases:  RTS in 'r_p = LDP, r_s = M[POP]', line 76
L0076@0035.  r_p = LDP, r_s = M[POP];

Line 79: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 79
L0079@0036.Init:  r_p = STP2, r_s = M[PUSH];

Line 81: resolved aliases:  .into in 'data16 =  @VGA_Init - $', line 81
L0081@0038.  data16 =  @VGA_Init - $;

Line 82: resolved aliases:  LDXI in 'r_p = M[IMM], r_x = LDX', line 82
L0082@0039.  r_p = M[IMM], r_x = LDX;

Line 83: resolved aliases:  .data in 'data16 =  @StrReady', line 83
L0083@003A.  data16 =  @StrReady;

Line 84: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 84
L0084@003B.  r_p = STP2, r_s = M[PUSH];

Line 86: resolved aliases:  .into in 'data16 =  @VGA_OutStr - $', line 86
L0086@003D.  data16 =  @VGA_OutStr - $;

Line 88: resolved aliases:  TRACEON in 'r_p = STP2, r_a = A, r_x = X, r_y = Y, r_s = S', line 88
L0088@003E.  r_p = STP2, r_a = A, r_x = X, r_y = Y, r_s = S;

Line 90: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 90
L0090@003F.  r_p = STP2, r_s = M[PUSH];

Line 92: resolved aliases:  .into in 'data16 =  @UART_Init - $', line 92
L0092@0041.  data16 =  @UART_Init - $;

Line 93: resolved aliases:  LDXI in 'r_p = M[IMM], r_x = LDX', line 93
L0093@0042.  r_p = M[IMM], r_x = LDX;

Line 94: resolved aliases:  .data in 'data16 =  @StrReady', line 94
L0094@0043.  data16 =  @StrReady;

Line 95: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 95
L0095@0044.  r_p = STP2, r_s = M[PUSH];

Line 97: resolved aliases:  .into in 'data16 =  @UART_OutStr - $', line 97
L0097@0046.  data16 =  @UART_OutStr - $;

Line 99: resolved aliases:  INTON in 'r_p = NOP, r_a = A, r_x = X, r_y = Y, r_s = S', line 99
L0099@0047.  r_p = NOP, r_a = A, r_x = X, r_y = Y, r_s = S;

Line 104: resolved aliases:  LDYI in 'r_p = M[IMM], r_y = LDY', line 104
L0104@0048.MainLoop:  r_p = M[IMM], r_y = LDY;

Line 105: resolved aliases:  TXTBUFFER, .data in 'data16 =  0xFF40', line 105
L0105@0049.  data16 =  0xFF40;

Line 109: resolved aliases:  .data in 'data16 =  0', line 109
L0109@004B.  data16 =  0;

Line 110: resolved aliases:  M[Y+X] in 'STA, r_x = M[X], r_y = M[Y]', line 110
L0110@004C.TxtClear:  STA, r_x = M[X], r_y = M[Y];

Line 111: resolved aliases:  CPXI in 'r_p = M[IMM], r_x = CPX', line 111
L0111@004D.  r_p = M[IMM], r_x = CPX;

Line 112: resolved aliases:  TXTBUFLEN, .data in 'data16 =  0x0010', line 112
L0112@004E.  data16 =  0x0010;

Line 114: resolved aliases:  .branchto in 'data16 =  @TxtCleared - $', line 114
L0114@0050.  data16 =  @TxtCleared - $;

Line 116: resolved aliases:  .to in 'data16 =  @TxtClear - $', line 116
L0116@0052.  data16 =  @TxtClear - $;

Line 118: resolved aliases:  TRACEON in 'r_p = STP2, r_a = A, r_x = X, r_y = Y, r_s = S', line 118
L0118@0053.TxtCleared:  r_p = STP2, r_a = A, r_x = X, r_y = Y, r_s = S;

Line 121: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 121
L0121@0054.  r_p = STP2, r_s = M[PUSH];

Line 123: resolved aliases:  .into in 'data16 =  @CmdEdit - $', line 123
L0123@0056.  data16 =  @CmdEdit - $;

Line 125: resolved aliases:  .branchto in 'data16 =  @ErrOrBrk - $', line 125
L0125@0058.  data16 =  @ErrOrBrk - $;

Line 128: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 128
L0128@0059.  r_p = STP2, r_s = M[PUSH];

Line 130: resolved aliases:  .into in 'data16 =  @Print - $', line 130
L0130@005B.  data16 =  @Print - $;

Line 133: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 133
L0133@005C.  r_p = STP2, r_s = M[PUSH];

Line 135: resolved aliases:  .into in 'data16 =  @CmdExec - $', line 135
L0135@005E.  data16 =  @CmdExec - $;

Line 137: resolved aliases:  .branchto in 'data16 =  @ErrOrBrk - $', line 137
L0137@0060.  data16 =  @ErrOrBrk - $;

Line 141: resolved aliases:  .to in 'data16 =  @MainLoop - $', line 141
L0141@0062.  data16 =  @MainLoop - $;

Line 146: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 146
L0146@0063.CmdExec:  r_p = STP2, r_s = M[PUSH];

Line 148: resolved aliases:  .into in 'data16 =  @UART_IsBrk - $', line 148
L0148@0065.  data16 =  @UART_IsBrk - $;

Line 150: resolved aliases:  .branchto in 'data16 =  @CmdBreak - $', line 150
L0150@0067.  data16 =  @CmdBreak - $;

Line 151: resolved aliases:  LDAI in 'r_p = M[IMM], r_a = LDA', line 151
L0151@0068.  r_p = M[IMM], r_a = LDA;

Line 152: resolved aliases:  .data in 'data16 =  0xFFFF', line 152
L0152@0069.  data16 =  0xFFFF;

Line 154: resolved aliases:  RTS in 'r_p = LDP, r_s = M[POP]', line 154
L0154@006B.CmdBreak:  r_p = LDP, r_s = M[POP];

Line 156: resolved aliases:  LDYI in 'r_p = M[IMM], r_y = LDY', line 156
L0156@006C.ErrOrBrk:  r_p = M[IMM], r_y = LDY;

Line 157: resolved aliases:  .data in 'data16 =  @StrBreak', line 157
L0157@006D.  data16 =  @StrBreak;

Line 158: resolved aliases:  ANDI in 'r_p = M[IMM], r_a = AND', line 158
L0158@006E.  r_p = M[IMM], r_a = AND;

Line 159: resolved aliases:  .data in 'data16 =  0xFFFF', line 159
L0159@006F.  data16 =  0xFFFF;

Line 161: resolved aliases:  .branchto in 'data16 =  @Print - $', line 161
L0161@0071.  data16 =  @Print - $;

Line 162: resolved aliases:  PUSHA in 'r_a = STA, r_s = M[PUSH]', line 162
L0162@0072.  r_a = STA, r_s = M[PUSH];

Line 163: resolved aliases:  LDYI in 'r_p = M[IMM], r_y = LDY', line 163
L0163@0073.  r_p = M[IMM], r_y = LDY;

Line 164: resolved aliases:  .data in 'data16 =  @StrError', line 164
L0164@0074.  data16 =  @StrError;

Line 165: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 165
L0165@0075.  r_p = STP2, r_s = M[PUSH];

Line 167: resolved aliases:  .into in 'data16 =  @Print - $', line 167
L0167@0077.  data16 =  @Print - $;

Line 168: resolved aliases:  POPA in 'r_a = LDA, r_s = M[POP]', line 168
L0168@0078.  r_a = LDA, r_s = M[POP];

Line 169: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 169
L0169@0079.  r_p = STP2, r_s = M[PUSH];

Line 171: resolved aliases:  .into in 'data16 =  @PrintHexA - $', line 171
L0171@007B.  data16 =  @PrintHexA - $;

Line 172: resolved aliases:  LDYI in 'r_p = M[IMM], r_y = LDY', line 172
L0172@007C.  r_p = M[IMM], r_y = LDY;

Line 173: resolved aliases:  .data in 'data16 =  @StrEnd', line 173
L0173@007D.  data16 =  @StrEnd;

Line 175: resolved aliases:  .to in 'data16 =  @Print - $', line 175
L0175@007F.  data16 =  @Print - $;

Line 177: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 177
L0177@0080.CmdEdit:  r_p = STP2, r_s = M[PUSH];

Line 179: resolved aliases:  .into in 'data16 =  @UART_GetChr - $', line 179
L0179@0082.  data16 =  @UART_GetChr - $;

Line 180: resolved aliases:  PUSHA in 'r_a = STA, r_s = M[PUSH]', line 180
L0180@0083.  r_a = STA, r_s = M[PUSH];

Line 182: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 182
L0182@0084.  r_p = STP2, r_s = M[PUSH];

Line 184: resolved aliases:  .into in 'data16 =  @PrintChr - $', line 184
L0184@0086.  data16 =  @PrintChr - $;

Line 187: resolved aliases:  XORI in 'r_p = M[IMM], r_a = XOR', line 187
L0187@0088.  r_p = M[IMM], r_a = XOR;

Line 188: resolved aliases:  CR, .data in 'data16 =  0xD', line 188
L0188@0089.  data16 =  0xD;

Line 190: resolved aliases:  .branchto in 'data16 =  @LeaveEdit - $', line 190
L0190@008B.  data16 =  @LeaveEdit - $;

Line 193: resolved aliases:  XORI in 'r_p = M[IMM], r_a = XOR', line 193
L0193@008D.  r_p = M[IMM], r_a = XOR;

Line 194: resolved aliases:  ETX, .data in 'data16 =  0x3', line 194
L0194@008E.  data16 =  0x3;

Line 196: resolved aliases:  .branchto in 'data16 =  @BrkEdit - $', line 196
L0196@0090.  data16 =  @BrkEdit - $;

Line 199: resolved aliases:  XORI in 'r_p = M[IMM], r_a = XOR', line 199
L0199@0092.  r_p = M[IMM], r_a = XOR;

Line 200: resolved aliases:  CLS, .data in 'data16 =  0x1', line 200
L0200@0093.  data16 =  0x1;

Line 202: resolved aliases:  .branchto in 'data16 =  @BrkEdit - $', line 202
L0202@0095.  data16 =  @BrkEdit - $;

Line 205: resolved aliases:  XORI in 'r_p = M[IMM], r_a = XOR', line 205
L0205@0097.  r_p = M[IMM], r_a = XOR;

Line 206: resolved aliases:  HOME, .data in 'data16 =  0x2', line 206
L0206@0098.  data16 =  0x2;

Line 208: resolved aliases:  .branchto in 'data16 =  @BrkEdit - $', line 208
L0208@009A.  data16 =  @BrkEdit - $;

Line 211: resolved aliases:  XORI in 'r_p = M[IMM], r_a = XOR', line 211
L0211@009C.  r_p = M[IMM], r_a = XOR;

Line 212: resolved aliases:  BS, .data in 'data16 =  0x8', line 212
L0212@009D.  data16 =  0x8;

Line 214: resolved aliases:  .branchto in 'data16 =  @BSEdit - $', line 214
L0214@009F.  data16 =  @BSEdit - $;

Line 217: resolved aliases:  POPA in 'r_a = LDA, r_s = M[POP]', line 217
L0217@00A0.  r_a = LDA, r_s = M[POP];

Line 218: resolved aliases:  M[Y+X] in 'STA, r_x = M[X], r_y = M[Y]', line 218
L0218@00A1.  STA, r_x = M[X], r_y = M[Y];

Line 219: resolved aliases:  CPXI in 'r_p = M[IMM], r_x = CPX', line 219
L0219@00A2.  r_p = M[IMM], r_x = CPX;

Line 220: resolved aliases:  TXTBUFLEN, .data in 'data16 =  0x0010', line 220
L0220@00A3.  data16 =  0x0010;

Line 222: resolved aliases:  .branchto in 'data16 =  @BumpEnd - $', line 222
L0222@00A5.  data16 =  @BumpEnd - $;

Line 223: resolved aliases:  LDAI in 'r_p = M[IMM], r_a = LDA', line 223
L0223@00A6.  r_p = M[IMM], r_a = LDA;

Line 224: resolved aliases:  .data in 'data16 =  0', line 224
L0224@00A7.  data16 =  0;

Line 225: resolved aliases:  M[Y+X] in 'STA, r_x = M[X], r_y = M[Y]', line 225
L0225@00A8.  STA, r_x = M[X], r_y = M[Y];

Line 227: resolved aliases:  .to in 'data16 =  @CmdEdit - $', line 227
L0227@00AA.  data16 =  @CmdEdit - $;

Line 230: resolved aliases:  POPA in 'r_a = LDA, r_s = M[POP]', line 230
L0230@00AB.BrkEdit:  r_a = LDA, r_s = M[POP];

Line 231: resolved aliases:  LDAI in 'r_p = M[IMM], r_a = LDA', line 231
L0231@00AC.  r_p = M[IMM], r_a = LDA;

Line 232: resolved aliases:  .data in 'data16 =  1', line 232
L0232@00AD.  data16 =  1;

Line 234: resolved aliases:  RTS in 'r_p = LDP, r_s = M[POP]', line 234
L0234@00AF.  r_p = LDP, r_s = M[POP];

Line 237: resolved aliases:  POPA in 'r_a = LDA, r_s = M[POP]', line 237
L0237@00B0.LeaveEdit:  r_a = LDA, r_s = M[POP];

Line 238: resolved aliases:  LDAI in 'r_p = M[IMM], r_a = LDA', line 238
L0238@00B1.  r_p = M[IMM], r_a = LDA;

Line 239: resolved aliases:  .data in 'data16 =  0', line 239
L0239@00B2.  data16 =  0;

Line 240: resolved aliases:  M[Y+X] in 'STA, r_x = M[X], r_y = M[Y]', line 240
L0240@00B3.  STA, r_x = M[X], r_y = M[Y];

Line 242: resolved aliases:  RTS in 'r_p = LDP, r_s = M[POP]', line 242
L0242@00B5.  r_p = LDP, r_s = M[POP];

Line 245: resolved aliases:  POPA in 'r_a = LDA, r_s = M[POP]', line 245
L0245@00B6.BSEdit:  r_a = LDA, r_s = M[POP];

Line 246: resolved aliases:  LDAI in 'r_p = M[IMM], r_a = LDA', line 246
L0246@00B7.  r_p = M[IMM], r_a = LDA;

Line 247: resolved aliases:  .data in 'data16 =  0', line 247
L0247@00B8.  data16 =  0;

Line 248: resolved aliases:  M[Y+X] in 'STA, r_x = M[X], r_y = M[Y]', line 248
L0248@00B9.  STA, r_x = M[X], r_y = M[Y];

Line 249: resolved aliases:  CPXI in 'r_p = M[IMM], r_x = CPX', line 249
L0249@00BA.  r_p = M[IMM], r_x = CPX;

Line 250: resolved aliases:  .data in 'data16 =  0', line 250
L0250@00BB.  data16 =  0;

Line 252: resolved aliases:  .branchto in 'data16 =  @BumpStart - $', line 252
L0252@00BD.  data16 =  @BumpStart - $;

Line 254: resolved aliases:  .to in 'data16 =  @CmdEdit - $', line 254
L0254@00BF.  data16 =  @CmdEdit - $;

Line 256: resolved aliases:  PUSHX in 'r_x = STX, r_s = M[PUSH]', line 256
L0256@00C0.BumpStart:  r_x = STX, r_s = M[PUSH];

Line 257: resolved aliases:  PUSHY in 'r_y = STY, r_s = M[PUSH]', line 257
L0257@00C1.  r_y = STY, r_s = M[PUSH];

Line 258: resolved aliases:  LDYI in 'r_p = M[IMM], r_y = LDY', line 258
L0258@00C2.  r_p = M[IMM], r_y = LDY;

Line 259: resolved aliases:  .data in 'data16 =  @StrBeep', line 259
L0259@00C3.  data16 =  @StrBeep;

Line 260: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 260
L0260@00C4.Bumped:  r_p = STP2, r_s = M[PUSH];

Line 262: resolved aliases:  .into in 'data16 =  @Print - $', line 262
L0262@00C6.  data16 =  @Print - $;

Line 263: resolved aliases:  POPY in 'r_y = LDY, r_s = M[POP]', line 263
L0263@00C7.  r_y = LDY, r_s = M[POP];

Line 264: resolved aliases:  POPX in 'r_x = LDX, r_s = M[POP]', line 264
L0264@00C8.  r_x = LDX, r_s = M[POP];

Line 266: resolved aliases:  .to in 'data16 =  @CmdEdit - $', line 266
L0266@00CA.  data16 =  @CmdEdit - $;

Line 268: resolved aliases:  PUSHX in 'r_x = STX, r_s = M[PUSH]', line 268
L0268@00CB.BumpEnd:  r_x = STX, r_s = M[PUSH];

Line 269: resolved aliases:  PUSHY in 'r_y = STY, r_s = M[PUSH]', line 269
L0269@00CC.  r_y = STY, r_s = M[PUSH];

Line 270: resolved aliases:  LDYI in 'r_p = M[IMM], r_y = LDY', line 270
L0270@00CD.  r_p = M[IMM], r_y = LDY;

Line 271: resolved aliases:  .data in 'data16 =  @StrBack', line 271
L0271@00CE.  data16 =  @StrBack;

Line 273: resolved aliases:  .to in 'data16 =  @Bumped - $', line 273
L0273@00D0.  data16 =  @Bumped - $;

Compiling utils.sif, pass 1 out of 2.
Warning: .org value changed from 209 (0x00D1) to 209 (0x00D1)
Line 3: resolved aliases:  PUSHA in 'r_a = STA, r_s = M[PUSH]', line 3
L0003@00D1.CLC:  r_a = STA, r_s = M[PUSH];

Line 4: resolved aliases:  LDAI in 'r_p = M[IMM], r_a = LDA', line 4
L0004@00D2.  r_p = M[IMM], r_a = LDA;

Line 5: resolved aliases:  .data in 'data16 =  0', line 5
L0005@00D3.  data16 =  0;

Line 7: resolved aliases:  POPA in 'r_a = LDA, r_s = M[POP]', line 7
L0007@00D5.  r_a = LDA, r_s = M[POP];

Line 8: resolved aliases:  RTS in 'r_p = LDP, r_s = M[POP]', line 8
L0008@00D6.ACDone:  r_p = LDP, r_s = M[POP];

Line 12: resolved aliases:  .branchto in 'data16 =  @ACDone - $', line 12
L0012@00D8.  data16 =  @ACDone - $;

Line 13: resolved aliases:  PUSHA in 'r_a = STA, r_s = M[PUSH]', line 13
L0013@00D9.CSet:  r_a = STA, r_s = M[PUSH];

Line 14: resolved aliases:  LDAI in 'r_p = M[IMM], r_a = LDA', line 14
L0014@00DA.  r_p = M[IMM], r_a = LDA;

Line 15: resolved aliases:  .data in 'data16 =  -1', line 15
L0015@00DB.  data16 =  -1;

Line 17: resolved aliases:  .to in 'data16 =  @ACSet - $', line 17
L0017@00DD.  data16 =  @ACSet - $;

Line 21: resolved aliases:  .branchto in 'data16 =  @PrintDone - $', line 21
L0021@00E0.  data16 =  @PrintDone - $;

Line 22: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 22
L0022@00E1.  r_p = STP2, r_s = M[PUSH];

Line 24: resolved aliases:  .into in 'data16 =  @PrintChr - $', line 24
L0024@00E3.  data16 =  @PrintChr - $;

Line 26: resolved aliases:  .to in 'data16 =  @Print - $', line 26
L0026@00E5.  data16 =  @Print - $;

Line 27: resolved aliases:  RTS in 'r_p = LDP, r_s = M[POP]', line 27
L0027@00E6.PrintDone:  r_p = LDP, r_s = M[POP];

Line 29: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 29
L0029@00E7.PrintChr:  r_p = STP2, r_s = M[PUSH];

Line 31: resolved aliases:  .into in 'data16 =  @VGA_OutChr - $', line 31
L0031@00E9.  data16 =  @VGA_OutChr - $;

Line 32: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 32
L0032@00EA.  r_p = STP2, r_s = M[PUSH];

Line 34: resolved aliases:  .into in 'data16 =  @UART_OutChr - $', line 34
L0034@00EC.  data16 =  @UART_OutChr - $;

Line 35: resolved aliases:  RTS in 'r_p = LDP, r_s = M[POP]', line 35
L0035@00ED.  r_p = LDP, r_s = M[POP];

Line 37: resolved aliases:  PUSHX in 'r_x = STX, r_s = M[PUSH]', line 37
L0037@00EE.PrintHexA:  r_x = STX, r_s = M[PUSH];

Line 38: resolved aliases:  PUSHA in 'r_a = STA, r_s = M[PUSH]', line 38
L0038@00EF.  r_a = STA, r_s = M[PUSH];

Line 40: resolved aliases:  LDXI in 'r_p = M[IMM], r_x = LDX', line 40
L0040@00F0.  r_p = M[IMM], r_x = LDX;

Line 41: resolved aliases:  .data in 'data16 =  12', line 41
L0041@00F1.  data16 =  12;

Line 42: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 42
L0042@00F2.  r_p = STP2, r_s = M[PUSH];

Line 44: resolved aliases:  .into in 'data16 =  @PrintHex - $', line 44
L0044@00F4.  data16 =  @PrintHex - $;

Line 47: resolved aliases:  LDXI in 'r_p = M[IMM], r_x = LDX', line 47
L0047@00F6.  r_p = M[IMM], r_x = LDX;

Line 48: resolved aliases:  .data in 'data16 =  8', line 48
L0048@00F7.  data16 =  8;

Line 49: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 49
L0049@00F8.  r_p = STP2, r_s = M[PUSH];

Line 51: resolved aliases:  .into in 'data16 =  @PrintHex - $', line 51
L0051@00FA.  data16 =  @PrintHex - $;

Line 54: resolved aliases:  LDXI in 'r_p = M[IMM], r_x = LDX', line 54
L0054@00FC.  r_p = M[IMM], r_x = LDX;

Line 55: resolved aliases:  .data in 'data16 =  4', line 55
L0055@00FD.  data16 =  4;

Line 56: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 56
L0056@00FE.  r_p = STP2, r_s = M[PUSH];

Line 58: resolved aliases:  .into in 'data16 =  @PrintHex - $', line 58
L0058@0100.  data16 =  @PrintHex - $;

Line 61: resolved aliases:  LDXI in 'r_p = M[IMM], r_x = LDX', line 61
L0061@0102.  r_p = M[IMM], r_x = LDX;

Line 62: resolved aliases:  .data in 'data16 =  0', line 62
L0062@0103.  data16 =  0;

Line 63: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 63
L0063@0104.  r_p = STP2, r_s = M[PUSH];

Line 65: resolved aliases:  .into in 'data16 =  @PrintHex - $', line 65
L0065@0106.  data16 =  @PrintHex - $;

Line 67: resolved aliases:  POPA in 'r_a = LDA, r_s = M[POP]', line 67
L0067@0107.  r_a = LDA, r_s = M[POP];

Line 68: resolved aliases:  POPX in 'r_x = LDX, r_s = M[POP]', line 68
L0068@0108.  r_x = LDX, r_s = M[POP];

Line 69: resolved aliases:  RTS in 'r_p = LDP, r_s = M[POP]', line 69
L0069@0109.  r_p = LDP, r_s = M[POP];

Line 71: resolved aliases:  CPXI in 'r_p = M[IMM], r_x = CPX', line 71
L0071@010A.PrintHex:  r_p = M[IMM], r_x = CPX;

Line 72: resolved aliases:  .data in 'data16 =  0', line 72
L0072@010B.  data16 =  0;

Line 74: resolved aliases:  .branchto in 'data16 =  @PrintHex1 - $', line 74
L0074@010D.  data16 =  @PrintHex1 - $;

Line 76: resolved aliases:  .to in 'data16 =  @PrintHex - $', line 76
L0076@010F.  data16 =  @PrintHex - $;

Line 77: resolved aliases:  ANDI in 'r_p = M[IMM], r_a = AND', line 77
L0077@0110.PrintHex1:  r_p = M[IMM], r_a = AND;

Line 78: resolved aliases:  .data in 'data16 =  0x000F', line 78
L0078@0111.  data16 =  0x000F;

Line 80: resolved aliases:  ADXI in 'r_p = M[IMM], r_x = ADX', line 80
L0080@0113.  r_p = M[IMM], r_x = ADX;

Line 81: resolved aliases:  .data in 'data16 =  '0'', line 81
L0081@0114.  data16 =  '0';

Line 82: resolved aliases:  CPXI in 'r_p = M[IMM], r_x = CPX', line 82
L0082@0115.  r_p = M[IMM], r_x = CPX;

Line 83: resolved aliases:  .data in 'data16 =  '0'', line 83
L0083@0116.  data16 =  '0';

Line 85: resolved aliases:  .branchto in 'data16 =  @ConvAtoF - $', line 85
L0085@0118.  data16 =  @ConvAtoF - $;

Line 87: resolved aliases:  .to in 'data16 =  @Conv0to9 - $', line 87
L0087@011A.  data16 =  @Conv0to9 - $;

Line 88: resolved aliases:  ADXI in 'r_p = M[IMM], r_x = ADX', line 88
L0088@011B.ConvAtoF:  r_p = M[IMM], r_x = ADX;

Line 89: resolved aliases:  .data in 'data16 =  '7'', line 89
L0089@011C.  data16 =  '7';

Line 91: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 91
L0091@011E.  r_p = STP2, r_s = M[PUSH];

Line 93: resolved aliases:  .into in 'data16 =  @VGA_OutChr - $', line 93
L0093@0120.  data16 =  @VGA_OutChr - $;

Line 94: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 94
L0094@0121.  r_p = STP2, r_s = M[PUSH];

Line 96: resolved aliases:  .into in 'data16 =  @UART_OutChr - $', line 96
L0096@0123.  data16 =  @UART_OutChr - $;

Line 97: resolved aliases:  RTS in 'r_p = LDP, r_s = M[POP]', line 97
L0097@0124.  r_p = LDP, r_s = M[POP];

Success: pass 0 on utils.sif - 97 line(s) read, 350 statement(s) parsed, code address range 0x00D1 - 0x0125.
Compiling uart.sif, pass 1 out of 2.
Warning: .org value changed from 293 (0x0125) to 293 (0x0125)
Line 2: resolved aliases:  LDYI in 'r_p = M[IMM], r_y = LDY', line 2
L0002@0125.UART_Init:  r_p = M[IMM], r_y = LDY;

Line 3: resolved aliases:  UART_CONTROL, .data in 'data16 =  0xE000', line 3
L0003@0126.  data16 =  0xE000;

Line 4: resolved aliases:  LDAI in 'r_p = M[IMM], r_a = LDA', line 4
L0004@0127.  r_p = M[IMM], r_a = LDA;

Line 5: resolved aliases:  .data in 'data16 =  3', line 5
L0005@0128.  data16 =  3;

Line 7: resolved aliases:  LDAI in 'r_p = M[IMM], r_a = LDA', line 7
L0007@012A.  r_p = M[IMM], r_a = LDA;

Line 8: resolved aliases:  .data in 'data16 =  0x10', line 8
L0008@012B.  data16 =  0x10;

Line 10: resolved aliases:  RTS in 'r_p = LDP, r_s = M[POP]', line 10
L0010@012D.  r_p = LDP, r_s = M[POP];

Line 12: resolved aliases:  PUSHY in 'r_y = STY, r_s = M[PUSH]', line 12
L0012@012E.UART_GetChr:  r_y = STY, r_s = M[PUSH];

Line 13: resolved aliases:  LDYI in 'r_p = M[IMM], r_y = LDY', line 13
L0013@012F.  r_p = M[IMM], r_y = LDY;

Line 14: resolved aliases:  UART_STATUS, .data in 'data16 =  0xE000', line 14
L0014@0130.  data16 =  0xE000;

Line 15: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 15
L0015@0131.RdStatus0:  r_p = STP2, r_s = M[PUSH];

Line 17: resolved aliases:  .into in 'data16 =  @GetStatus - $', line 17
L0017@0133.  data16 =  @GetStatus - $;

Line 18: resolved aliases:  ANDI in 'r_p = M[IMM], r_a = AND', line 18
L0018@0134.  r_p = M[IMM], r_a = AND;

Line 19: resolved aliases:  .data in 'data16 =  0x0001', line 19
L0019@0135.  data16 =  0x0001;

Line 21: resolved aliases:  .branchto in 'data16 =  @RdStatus0 - $', line 21
L0021@0137.  data16 =  @RdStatus0 - $;

Line 24: resolved aliases:  ANDI in 'r_p = M[IMM], r_a = AND', line 24
L0024@013A.  r_p = M[IMM], r_a = AND;

Line 25: resolved aliases:  .data in 'data16 =  0x00FF', line 25
L0025@013B.  data16 =  0x00FF;

Line 26: resolved aliases:  POPY in 'r_y = LDY, r_s = M[POP]', line 26
L0026@013C.  r_y = LDY, r_s = M[POP];

Line 27: resolved aliases:  RTS in 'r_p = LDP, r_s = M[POP]', line 27
L0027@013D.  r_p = LDP, r_s = M[POP];

Line 29: resolved aliases:  PUSHA in 'r_a = STA, r_s = M[PUSH]', line 29
L0029@013E.UART_IsBrk:  r_a = STA, r_s = M[PUSH];

Line 30: resolved aliases:  PUSHY in 'r_y = STY, r_s = M[PUSH]', line 30
L0030@013F.  r_y = STY, r_s = M[PUSH];

Line 31: resolved aliases:  LDYI in 'r_p = M[IMM], r_y = LDY', line 31
L0031@0140.  r_p = M[IMM], r_y = LDY;

Line 32: resolved aliases:  UART_STATUS, .data in 'data16 =  0xE000', line 32
L0032@0141.  data16 =  0xE000;

Line 33: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 33
L0033@0142.  r_p = STP2, r_s = M[PUSH];

Line 35: resolved aliases:  .into in 'data16 =  @GetStatus - $', line 35
L0035@0144.  data16 =  @GetStatus - $;

Line 36: resolved aliases:  ANDI in 'r_p = M[IMM], r_a = AND', line 36
L0036@0145.  r_p = M[IMM], r_a = AND;

Line 37: resolved aliases:  .data in 'data16 =  0x0001', line 37
L0037@0146.  data16 =  0x0001;

Line 39: resolved aliases:  .branchto in 'data16 =  @NoBrk - $', line 39
L0039@0148.  data16 =  @NoBrk - $;

Line 43: resolved aliases:  XORI in 'r_p = M[IMM], r_a = XOR', line 43
L0043@014B.  r_p = M[IMM], r_a = XOR;

Line 44: resolved aliases:  ETX, .data in 'data16 =  0x3', line 44
L0044@014C.  data16 =  0x3;

Line 46: resolved aliases:  .branchto in 'data16 =  @Brk - $', line 46
L0046@014E.  data16 =  @Brk - $;

Line 48: resolved aliases:  LDAI in 'r_p = M[IMM], r_a = LDA', line 48
L0048@014F.NoBrk:  r_p = M[IMM], r_a = LDA;

Line 49: resolved aliases:  .data in 'data16 =  0', line 49
L0049@0150.  data16 =  0;

Line 51: resolved aliases:  .to in 'data16 =  @BrkExit - $', line 51
L0051@0152.  data16 =  @BrkExit - $;

Line 52: resolved aliases:  LDAI in 'r_p = M[IMM], r_a = LDA', line 52
L0052@0153.Brk:  r_p = M[IMM], r_a = LDA;

Line 53: resolved aliases:  .data in 'data16 =  1', line 53
L0053@0154.  data16 =  1;

Line 55: resolved aliases:  POPY in 'r_y = LDY, r_s = M[POP]', line 55
L0055@0156.BrkExit:  r_y = LDY, r_s = M[POP];

Line 56: resolved aliases:  POPA in 'r_a = LDA, r_s = M[POP]', line 56
L0056@0157.  r_a = LDA, r_s = M[POP];

Line 57: resolved aliases:  RTS in 'r_p = LDP, r_s = M[POP]', line 57
L0057@0158.  r_p = LDP, r_s = M[POP];

Line 59: resolved aliases:  LDAI in 'r_p = M[IMM], r_a = LDA', line 59
L0059@0159.UART_Beep:  r_p = M[IMM], r_a = LDA;

Line 60: resolved aliases:  BEL, .data in 'data16 =  0x7', line 60
L0060@015A.  data16 =  0x7;

Line 61: resolved aliases:  PUSHY in 'r_y = STY, r_s = M[PUSH]', line 61
L0061@015B.UART_OutChr:  r_y = STY, r_s = M[PUSH];

Line 62: resolved aliases:  PUSHA in 'r_a = STA, r_s = M[PUSH]', line 62
L0062@015C.  r_a = STA, r_s = M[PUSH];

Line 63: resolved aliases:  LDYI in 'r_p = M[IMM], r_y = LDY', line 63
L0063@015D.  r_p = M[IMM], r_y = LDY;

Line 64: resolved aliases:  UART_STATUS, .data in 'data16 =  0xE000', line 64
L0064@015E.  data16 =  0xE000;

Line 65: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 65
L0065@015F.RdStatus1:  r_p = STP2, r_s = M[PUSH];

Line 67: resolved aliases:  .into in 'data16 =  @GetStatus - $', line 67
L0067@0161.  data16 =  @GetStatus - $;

Line 68: resolved aliases:  ANDI in 'r_p = M[IMM], r_a = AND', line 68
L0068@0162.  r_p = M[IMM], r_a = AND;

Line 69: resolved aliases:  .data in 'data16 =  0x0002', line 69
L0069@0163.  data16 =  0x0002;

Line 71: resolved aliases:  .branchto in 'data16 =  @RdStatus1 - $', line 71
L0071@0165.  data16 =  @RdStatus1 - $;

Line 74: resolved aliases:  POPY in 'r_y = LDY, r_s = M[POP]', line 74
L0074@0168.  r_y = LDY, r_s = M[POP];

Line 75: resolved aliases:  RTS in 'r_p = LDP, r_s = M[POP]', line 75
L0075@0169.  r_p = LDP, r_s = M[POP];

Line 78: resolved aliases:  PUSHA in 'r_a = STA, r_s = M[PUSH]', line 78
L0078@016B.  r_a = STA, r_s = M[PUSH];

Line 82: resolved aliases:  .branchto in 'data16 =  @StIsStable - $', line 82
L0082@016F.  data16 =  @StIsStable - $;

Line 83: resolved aliases:  POPA in 'r_a = LDA, r_s = M[POP]', line 83
L0083@0170.  r_a = LDA, r_s = M[POP];

Line 85: resolved aliases:  .to in 'data16 =  @GetStatus - $', line 85
L0085@0172.  data16 =  @GetStatus - $;

Line 86: resolved aliases:  POPA in 'r_a = LDA, r_s = M[POP]', line 86
L0086@0173.StIsStable:  r_a = LDA, r_s = M[POP];

Line 87: resolved aliases:  RTS in 'r_p = LDP, r_s = M[POP]', line 87
L0087@0174.  r_p = LDP, r_s = M[POP];

Line 91: resolved aliases:  .branchto in 'data16 =  @UART_Done - $', line 91
L0091@0177.  data16 =  @UART_Done - $;

Line 92: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 92
L0092@0178.  r_p = STP2, r_s = M[PUSH];

Line 94: resolved aliases:  .into in 'data16 =  @UART_OutChr - $', line 94
L0094@017A.  data16 =  @UART_OutChr - $;

Line 96: resolved aliases:  .data in 'data16 =  @UART_OutStr - $', line 96
L0096@017C.  data16 =  @UART_OutStr - $;

Line 97: resolved aliases:  RTS in 'r_p = LDP, r_s = M[POP]', line 97
L0097@017D.UART_Done:  r_p = LDP, r_s = M[POP];

Success: pass 0 on uart.sif - 97 line(s) read, 440 statement(s) parsed, code address range 0x0125 - 0x017E.
Compiling vga.sif, pass 1 out of 2.
Warning: .org value changed from 382 (0x017E) to 382 (0x017E)
Line 10: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 10
L0010@017E.VGA_Init:  r_p = STP2, r_s = M[PUSH];

Line 12: resolved aliases:  .into in 'data16 =  @CLC - $', line 12
L0012@0180.  data16 =  @CLC - $;

Line 13: resolved aliases:  LDAI in 'r_p = M[IMM], r_a = LDA', line 13
L0013@0181.  r_p = M[IMM], r_a = LDA;

Line 14: resolved aliases:  VGA_COLS, .data in 'data16 =  64', line 14
L0014@0182.  data16 =  64;

Line 15: resolved aliases:  PUSHA in 'r_a = STA, r_s = M[PUSH]', line 15
L0015@0183.  r_a = STA, r_s = M[PUSH];

Line 16: resolved aliases:  LDAI in 'r_p = M[IMM], r_a = LDA', line 16
L0016@0184.  r_p = M[IMM], r_a = LDA;

Line 17: resolved aliases:  VGA_BASE, .data in 'data16 =  0x1000', line 17
L0017@0185.  data16 =  0x1000;

Line 18: resolved aliases:  LDXI in 'r_p = M[IMM], r_x = LDX', line 18
L0018@0186.  r_p = M[IMM], r_x = LDX;

Line 19: resolved aliases:  VGA_ROWS, .data in 'data16 =  32', line 19
L0019@0187.  data16 =  32;

Line 20: resolved aliases:  LDYI in 'r_p = M[IMM], r_y = LDY', line 20
L0020@0188.  r_p = M[IMM], r_y = LDY;

Line 21: resolved aliases:  ROW_OFFSET, RAM_BASE, .data in 'data16 =  0xFF00 + 0', line 21
L0021@0189.  data16 =  0xFF00 + 0;

Line 27: resolved aliases:  .branchto in 'data16 =  @RowOffDone - $', line 27
L0027@018F.  data16 =  @RowOffDone - $;

Line 29: resolved aliases:  .to in 'data16 =  @RowOffLoop - $', line 29
L0029@0191.  data16 =  @RowOffLoop - $;

Line 30: resolved aliases:  POPA in 'r_a = LDA, r_s = M[POP]', line 30
L0030@0192.RowOffDone:  r_a = LDA, r_s = M[POP];

Line 32: resolved aliases:  .data in 'data16 =  0', line 32
L0032@0194.  data16 =  0;

Line 33: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 33
L0033@0195.  r_p = STP2, r_s = M[PUSH];

Line 35: resolved aliases:  .into in 'data16 =  @SetOldCrsXY - $', line 35
L0035@0197.  data16 =  @SetOldCrsXY - $;

Line 36: resolved aliases:  LDAI in 'r_p = M[IMM], r_a = LDA', line 36
L0036@0198.  r_p = M[IMM], r_a = LDA;

Line 37: resolved aliases:  CLS, .data in 'data16 =  0x1', line 37
L0037@0199.  data16 =  0x1;

Line 42: resolved aliases:  PUSHX in 'r_x = STX, r_s = M[PUSH]', line 42
L0042@019A.VGA_OutChr:  r_x = STX, r_s = M[PUSH];

Line 43: resolved aliases:  PUSHY in 'r_y = STY, r_s = M[PUSH]', line 43
L0043@019B.  r_y = STY, r_s = M[PUSH];

Line 44: resolved aliases:  PUSHA in 'r_a = STA, r_s = M[PUSH]', line 44
L0044@019C.  r_a = STA, r_s = M[PUSH];

Line 46: resolved aliases:  XORI in 'r_p = M[IMM], r_a = XOR', line 46
L0046@019D.  r_p = M[IMM], r_a = XOR;

Line 47: resolved aliases:  HOME, .data in 'data16 =  0x2', line 47
L0047@019E.  data16 =  0x2;

Line 49: resolved aliases:  .branchto in 'data16 =  @VGA_HOME - $', line 49
L0049@01A0.  data16 =  @VGA_HOME - $;

Line 52: resolved aliases:  XORI in 'r_p = M[IMM], r_a = XOR', line 52
L0052@01A2.  r_p = M[IMM], r_a = XOR;

Line 53: resolved aliases:  CLS, .data in 'data16 =  0x1', line 53
L0053@01A3.  data16 =  0x1;

Line 55: resolved aliases:  .branchto in 'data16 =  @VGA_CLS - $', line 55
L0055@01A5.  data16 =  @VGA_CLS - $;

Line 58: resolved aliases:  XORI in 'r_p = M[IMM], r_a = XOR', line 58
L0058@01A7.  r_p = M[IMM], r_a = XOR;

Line 59: resolved aliases:  BEL, .data in 'data16 =  0x7', line 59
L0059@01A8.  data16 =  0x7;

Line 61: resolved aliases:  .branchto in 'data16 =  @VGA_Ignore - $', line 61
L0061@01AA.  data16 =  @VGA_Ignore - $;

Line 63: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 63
L0063@01AB.  r_p = STP2, r_s = M[PUSH];

Line 65: resolved aliases:  .into in 'data16 =  @GetCursorXY - $', line 65
L0065@01AD.  data16 =  @GetCursorXY - $;

Line 68: resolved aliases:  XORI in 'r_p = M[IMM], r_a = XOR', line 68
L0068@01AF.  r_p = M[IMM], r_a = XOR;

Line 69: resolved aliases:  CR, .data in 'data16 =  0xD', line 69
L0069@01B0.  data16 =  0xD;

Line 71: resolved aliases:  .branchto in 'data16 =  @VGA_CR - $', line 71
L0071@01B2.  data16 =  @VGA_CR - $;

Line 74: resolved aliases:  XORI in 'r_p = M[IMM], r_a = XOR', line 74
L0074@01B4.  r_p = M[IMM], r_a = XOR;

Line 75: resolved aliases:  LF, .data in 'data16 =  0xA', line 75
L0075@01B5.  data16 =  0xA;

Line 77: resolved aliases:  .branchto in 'data16 =  @VGA_LF - $', line 77
L0077@01B7.  data16 =  @VGA_LF - $;

Line 80: resolved aliases:  XORI in 'r_p = M[IMM], r_a = XOR', line 80
L0080@01B9.  r_p = M[IMM], r_a = XOR;

Line 81: resolved aliases:  BS, .data in 'data16 =  0x8', line 81
L0081@01BA.  data16 =  0x8;

Line 83: resolved aliases:  .branchto in 'data16 =  @VGA_BS - $', line 83
L0083@01BC.  data16 =  @VGA_BS - $;

Line 86: resolved aliases:  POPA in 'r_a = LDA, r_s = M[POP]', line 86
L0086@01BD.  r_a = LDA, r_s = M[POP];

Line 89: resolved aliases:  PUSHY in 'r_y = STY, r_s = M[PUSH]', line 89
L0089@01BF.  r_y = STY, r_s = M[PUSH];

Line 90: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 90
L0090@01C0.  r_p = STP2, r_s = M[PUSH];

Line 92: resolved aliases:  .into in 'data16 =  @GetRowBase - $', line 92
L0092@01C2.  data16 =  @GetRowBase - $;

Line 93: resolved aliases:  M[Y+X] in 'STA, r_x = M[X], r_y = M[Y]', line 93
L0093@01C3.  STA, r_x = M[X], r_y = M[Y];

Line 94: resolved aliases:  POPY in 'INX, r_y = LDY, r_s = M[POP]', line 94
L0094@01C4.  INX, r_y = LDY, r_s = M[POP];

Line 95: resolved aliases:  CPXI in 'r_p = M[IMM], r_x = CPX', line 95
L0095@01C5.  r_p = M[IMM], r_x = CPX;

Line 96: resolved aliases:  VGA_COLS, .data in 'data16 =  64', line 96
L0096@01C6.  data16 =  64;

Line 98: resolved aliases:  .branchto in 'data16 =  @NextRow - $', line 98
L0098@01C8.  data16 =  @NextRow - $;

Line 99: resolved aliases:  PUSHY in 'r_y = STY, r_s = M[PUSH]', line 99
L0099@01C9.SetCursorXY:  r_y = STY, r_s = M[PUSH];

Line 100: resolved aliases:  LDYI in 'r_p = M[IMM], r_y = LDY', line 100
L0100@01CA.  r_p = M[IMM], r_y = LDY;

Line 101: resolved aliases:  CURSOR_X, RAM_BASE, .data in 'data16 =  0xFF00 + 62', line 101
L0101@01CB.  data16 =  0xFF00 + 62;

Line 103: resolved aliases:  LDXI in 'r_p = M[IMM], r_x = LDX', line 103
L0103@01CD.  r_p = M[IMM], r_x = LDX;

Line 104: resolved aliases:  CURSOR_Y, RAM_BASE, .data in 'data16 =  0xFF00 + 63', line 104
L0104@01CE.  data16 =  0xFF00 + 63;

Line 105: resolved aliases:  POPY in 'r_y = LDY, r_s = M[POP]', line 105
L0105@01CF.  r_y = LDY, r_s = M[POP];

Line 108: resolved aliases:  POPY in 'r_y = LDY, r_s = M[POP]', line 108
L0108@01D1.  r_y = LDY, r_s = M[POP];

Line 109: resolved aliases:  POPX in 'r_x = LDX, r_s = M[POP]', line 109
L0109@01D2.  r_x = LDX, r_s = M[POP];

Line 110: resolved aliases:  RTS in 'r_p = LDP, r_s = M[POP]', line 110
L0110@01D3.  r_p = LDP, r_s = M[POP];

Line 112: resolved aliases:  POPA in 'r_a = LDA, r_s = M[POP]', line 112
L0112@01D4.VGA_Ignore:  r_a = LDA, r_s = M[POP];

Line 113: resolved aliases:  POPY in 'r_y = LDY, r_s = M[POP]', line 113
L0113@01D5.  r_y = LDY, r_s = M[POP];

Line 114: resolved aliases:  POPX in 'r_x = LDX, r_s = M[POP]', line 114
L0114@01D6.  r_x = LDX, r_s = M[POP];

Line 115: resolved aliases:  RTS in 'r_p = LDP, r_s = M[POP]', line 115
L0115@01D7.  r_p = LDP, r_s = M[POP];

Line 117: resolved aliases:  PUSHY in 'r_y = STY, r_s = M[PUSH]', line 117
L0117@01D8.SetOldCrsXY:  r_y = STY, r_s = M[PUSH];

Line 118: resolved aliases:  LDYI in 'r_p = M[IMM], r_y = LDY', line 118
L0118@01D9.  r_p = M[IMM], r_y = LDY;

Line 119: resolved aliases:  CUR_OLDX, RAM_BASE, .data in 'data16 =  0xFF00 + 60', line 119
L0119@01DA.  data16 =  0xFF00 + 60;

Line 121: resolved aliases:  LDXI in 'r_p = M[IMM], r_x = LDX', line 121
L0121@01DC.  r_p = M[IMM], r_x = LDX;

Line 122: resolved aliases:  CUR_OLDY, RAM_BASE, .data in 'data16 =  0xFF00 + 61', line 122
L0122@01DD.  data16 =  0xFF00 + 61;

Line 123: resolved aliases:  POPY in 'r_y = LDY, r_s = M[POP]', line 123
L0123@01DE.  r_y = LDY, r_s = M[POP];

Line 125: resolved aliases:  RTS in 'r_p = LDP, r_s = M[POP]', line 125
L0125@01E0.  r_p = LDP, r_s = M[POP];

Line 127: resolved aliases:  LDXI in 'r_p = M[IMM], r_x = LDX', line 127
L0127@01E1.NextRow:  r_p = M[IMM], r_x = LDX;

Line 128: resolved aliases:  .data in 'data16 =  0', line 128
L0128@01E2.  data16 =  0;

Line 130: resolved aliases:  CPYI in 'r_p = M[IMM], r_y = CPY', line 130
L0130@01E4.  r_p = M[IMM], r_y = CPY;

Line 131: resolved aliases:  VGA_ROWS, .data in 'data16 =  32', line 131
L0131@01E5.  data16 =  32;

Line 133: resolved aliases:  .branchto in 'data16 =  @ScrollUp - $', line 133
L0133@01E7.  data16 =  @ScrollUp - $;

Line 135: resolved aliases:  .to in 'data16 =  @SetCursorXY - $', line 135
L0135@01E9.  data16 =  @SetCursorXY - $;

Line 137: resolved aliases:  LDYI in 'r_p = M[IMM], r_y = LDY', line 137
L0137@01EA.ScrollUp:  r_p = M[IMM], r_y = LDY;

Line 138: resolved aliases:  .data in 'data16 =  0', line 138
L0138@01EB.  data16 =  0;

Line 139: resolved aliases:  PUSHY in 'r_y = STY, r_s = M[PUSH]', line 139
L0139@01EC.NxtRow:  r_y = STY, r_s = M[PUSH];

Line 140: resolved aliases:  LDXI in 'r_p = M[IMM], r_x = LDX', line 140
L0140@01ED.  r_p = M[IMM], r_x = LDX;

Line 141: resolved aliases:  .data in 'data16 =  0', line 141
L0141@01EE.  data16 =  0;

Line 142: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 142
L0142@01EF.  r_p = STP2, r_s = M[PUSH];

Line 144: resolved aliases:  .into in 'data16 =  @GetRowBase - $', line 144
L0144@01F1.  data16 =  @GetRowBase - $;

Line 145: resolved aliases:  PUSHY in 'r_y = STY, r_s = M[PUSH]', line 145
L0145@01F2.NxtCol:  r_y = STY, r_s = M[PUSH];

Line 146: resolved aliases:  ADYI in 'r_p = M[IMM], r_y = ADY', line 146
L0146@01F3.  r_p = M[IMM], r_y = ADY;

Line 147: resolved aliases:  VGA_COLS, .data in 'data16 =  64', line 147
L0147@01F4.  data16 =  64;

Line 148: resolved aliases:  M[Y+X] in 'LDA, r_x = M[X], r_y = M[Y]', line 148
L0148@01F5.  LDA, r_x = M[X], r_y = M[Y];

Line 149: resolved aliases:  POPY in 'r_y = LDY, r_s = M[POP]', line 149
L0149@01F6.  r_y = LDY, r_s = M[POP];

Line 150: resolved aliases:  M[Y+X] in 'STA, r_x = M[X], r_y = M[Y]', line 150
L0150@01F7.  STA, r_x = M[X], r_y = M[Y];

Line 152: resolved aliases:  CPXI in 'r_p = M[IMM], r_x = CPX', line 152
L0152@01F9.  r_p = M[IMM], r_x = CPX;

Line 153: resolved aliases:  VGA_COLS, .data in 'data16 =  64', line 153
L0153@01FA.  data16 =  64;

Line 155: resolved aliases:  .branchto in 'data16 =  @ChkRow - $', line 155
L0155@01FC.  data16 =  @ChkRow - $;

Line 157: resolved aliases:  .to in 'data16 =  @NxtCol - $', line 157
L0157@01FE.  data16 =  @NxtCol - $;

Line 158: resolved aliases:  POPY in 'r_y = LDY, r_s = M[POP]', line 158
L0158@01FF.ChkRow:  r_y = LDY, r_s = M[POP];

Line 160: resolved aliases:  CPYI in 'r_p = M[IMM], r_y = CPY', line 160
L0160@0201.  r_p = M[IMM], r_y = CPY;

Line 161: resolved aliases:  VGA_ROWS, .data in 'data16 =  32 - 1', line 161
L0161@0202.  data16 =  32 - 1;

Line 163: resolved aliases:  .branchto in 'data16 =  @ClrLastRow - $', line 163
L0163@0204.  data16 =  @ClrLastRow - $;

Line 165: resolved aliases:  .to in 'data16 =  @NxtRow - $', line 165
L0165@0206.  data16 =  @NxtRow - $;

Line 168: resolved aliases:  LDYI in 'r_p = M[IMM], r_y = LDY', line 168
L0168@0208.  r_p = M[IMM], r_y = LDY;

Line 169: resolved aliases:  VGA_ROWS, .data in 'data16 =  32 - 1', line 169
L0169@0209.  data16 =  32 - 1;

Line 170: resolved aliases:  PUSHY in 'r_y = STY, r_s = M[PUSH]', line 170
L0170@020A.  r_y = STY, r_s = M[PUSH];

Line 171: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 171
L0171@020B.  r_p = STP2, r_s = M[PUSH];

Line 173: resolved aliases:  .into in 'data16 =  @ClearRow - $', line 173
L0173@020D.  data16 =  @ClearRow - $;

Line 174: resolved aliases:  POPY in 'r_y = LDY, r_s = M[POP]', line 174
L0174@020E.  r_y = LDY, r_s = M[POP];

Line 176: resolved aliases:  .to in 'data16 =  @SetX0 - $', line 176
L0176@0210.  data16 =  @SetX0 - $;

Line 178: resolved aliases:  POPA in 'r_a = LDA, r_s = M[POP]', line 178
L0178@0211.VGA_CR:  r_a = LDA, r_s = M[POP];

Line 179: resolved aliases:  LDXI in 'r_p = M[IMM], r_x = LDX', line 179
L0179@0212.SetX0:  r_p = M[IMM], r_x = LDX;

Line 180: resolved aliases:  .data in 'data16 =  0', line 180
L0180@0213.  data16 =  0;

Line 182: resolved aliases:  .to in 'data16 =  @SetCursorXY - $', line 182
L0182@0215.  data16 =  @SetCursorXY - $;

Line 184: resolved aliases:  POPA in 'r_a = LDA, r_s = M[POP]', line 184
L0184@0216.VGA_BS:  r_a = LDA, r_s = M[POP];

Line 185: resolved aliases:  CPXI in 'r_p = M[IMM], r_x = CPX', line 185
L0185@0217.  r_p = M[IMM], r_x = CPX;

Line 186: resolved aliases:  .data in 'data16 =  0', line 186
L0186@0218.  data16 =  0;

Line 188: resolved aliases:  .branchto in 'data16 =  @PrevRow - $', line 188
L0188@021A.  data16 =  @PrevRow - $;

Line 190: resolved aliases:  .to in 'data16 =  @SetCursorXY - $', line 190
L0190@021C.  data16 =  @SetCursorXY - $;

Line 191: resolved aliases:  CPYI in 'r_p = M[IMM], r_y = CPY', line 191
L0191@021D.PrevRow:  r_p = M[IMM], r_y = CPY;

Line 192: resolved aliases:  .data in 'data16 =  0', line 192
L0192@021E.  data16 =  0;

Line 194: resolved aliases:  .branchto in 'data16 =  @SetCursorXY - $', line 194
L0194@0220.  data16 =  @SetCursorXY - $;

Line 195: resolved aliases:  LDXI in 'r_p = M[IMM], r_x = LDX', line 195
L0195@0221.  r_p = M[IMM], r_x = LDX;

Line 196: resolved aliases:  VGA_COLS, .data in 'data16 =  64 - 1', line 196
L0196@0222.  data16 =  64 - 1;

Line 198: resolved aliases:  .to in 'data16 =  @SetCursorXY - $', line 198
L0198@0224.  data16 =  @SetCursorXY - $;

Line 200: resolved aliases:  POPA in 'r_a = LDA, r_s = M[POP]', line 200
L0200@0225.VGA_LF:  r_a = LDA, r_s = M[POP];

Line 202: resolved aliases:  .to in 'data16 =  @NextRow1 - $', line 202
L0202@0227.  data16 =  @NextRow1 - $;

Line 204: resolved aliases:  POPA in 'r_a = LDA, r_s = M[POP]', line 204
L0204@0228.VGA_CLS:  r_a = LDA, r_s = M[POP];

Line 205: resolved aliases:  LDAI in 'r_p = M[IMM], r_a = LDA', line 205
L0205@0229.  r_p = M[IMM], r_a = LDA;

Line 206: resolved aliases:  .data in 'data16 =  ' '', line 206
L0206@022A.  data16 =  ' ';

Line 207: resolved aliases:  LDYI in 'r_p = M[IMM], r_y = LDY', line 207
L0207@022B.  r_p = M[IMM], r_y = LDY;

Line 208: resolved aliases:  .data in 'data16 =  0', line 208
L0208@022C.  data16 =  0;

Line 209: resolved aliases:  PUSHY in 'r_y = STY, r_s = M[PUSH]', line 209
L0209@022D.ClrNextRow:  r_y = STY, r_s = M[PUSH];

Line 210: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 210
L0210@022E.  r_p = STP2, r_s = M[PUSH];

Line 212: resolved aliases:  .into in 'data16 =  @ClearRow - $', line 212
L0212@0230.  data16 =  @ClearRow - $;

Line 213: resolved aliases:  POPY in 'r_y = LDY, r_s = M[POP]', line 213
L0213@0231.  r_y = LDY, r_s = M[POP];

Line 215: resolved aliases:  CPYI in 'r_p = M[IMM], r_y = CPY', line 215
L0215@0233.  r_p = M[IMM], r_y = CPY;

Line 216: resolved aliases:  VGA_ROWS, .data in 'data16 =  32', line 216
L0216@0234.  data16 =  32;

Line 218: resolved aliases:  .branchto in 'data16 =  @vga_home1 - $', line 218
L0218@0236.  data16 =  @vga_home1 - $;

Line 220: resolved aliases:  .to in 'data16 =  @ClrNextRow - $', line 220
L0220@0238.  data16 =  @ClrNextRow - $;

Line 222: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 222
L0222@0239.ClearRow:  r_p = STP2, r_s = M[PUSH];

Line 224: resolved aliases:  .into in 'data16 =  @GetRowBase - $', line 224
L0224@023B.  data16 =  @GetRowBase - $;

Line 225: resolved aliases:  LDAI in 'r_p = M[IMM], r_a = LDA', line 225
L0225@023C.  r_p = M[IMM], r_a = LDA;

Line 226: resolved aliases:  .data in 'data16 =  ' '', line 226
L0226@023D.  data16 =  ' ';

Line 227: resolved aliases:  LDXI in 'r_p = M[IMM], r_x = LDX', line 227
L0227@023E.  r_p = M[IMM], r_x = LDX;

Line 228: resolved aliases:  VGA_COLS, .data in 'data16 =  64 / 8 - 1', line 228
L0228@023F.  data16 =  64 / 8 - 1;

Line 229: resolved aliases:  M[Y+X] in 'STA, r_x = M[X], r_y = M[Y]', line 229
L0229@0240.ClrRLoop:  STA, r_x = M[X], r_y = M[Y];

Line 231: resolved aliases:  .branchto in 'data16 =  @ClrDone - $', line 231
L0231@0242.  data16 =  @ClrDone - $;

Line 233: resolved aliases:  .to in 'data16 =  @ClrRLoop - $', line 233
L0233@0244.  data16 =  @ClrRLoop - $;

Line 234: resolved aliases:  RTS in 'r_p = LDP, r_s = M[POP]', line 234
L0234@0245.ClrDone:  r_p = LDP, r_s = M[POP];

Line 236: resolved aliases:  POPA in 'r_a = LDA, r_s = M[POP]', line 236
L0236@0246.VGA_HOME:  r_a = LDA, r_s = M[POP];

Line 238: resolved aliases:  .data in 'data16 =  0', line 238
L0238@0248.  data16 =  0;

Line 240: resolved aliases:  .to in 'data16 =  @SetCursorXY - $', line 240
L0240@024A.  data16 =  @SetCursorXY - $;

Line 242: resolved aliases:  LDYI in 'r_p = M[IMM], r_y = LDY', line 242
L0242@024B.GetOldCrsXY:  r_p = M[IMM], r_y = LDY;

Line 243: resolved aliases:  CUR_OLDX, RAM_BASE, .data in 'data16 =  0xFF00 + 60', line 243
L0243@024C.  data16 =  0xFF00 + 60;

Line 245: resolved aliases:  PUSHX in 'r_x = STX, r_s = M[PUSH]', line 245
L0245@024E.  r_x = STX, r_s = M[PUSH];

Line 246: resolved aliases:  LDXI in 'r_p = M[IMM], r_x = LDX', line 246
L0246@024F.  r_p = M[IMM], r_x = LDX;

Line 247: resolved aliases:  CUR_OLDY, RAM_BASE, .data in 'data16 =  0xFF00 + 61', line 247
L0247@0250.  data16 =  0xFF00 + 61;

Line 249: resolved aliases:  .to in 'data16 =  @GetCursorY - $', line 249
L0249@0252.  data16 =  @GetCursorY - $;

Line 251: resolved aliases:  LDYI in 'r_p = M[IMM], r_y = LDY', line 251
L0251@0253.GetCursorXY:  r_p = M[IMM], r_y = LDY;

Line 252: resolved aliases:  CURSOR_X, RAM_BASE, .data in 'data16 =  0xFF00 + 62', line 252
L0252@0254.  data16 =  0xFF00 + 62;

Line 254: resolved aliases:  PUSHX in 'r_x = STX, r_s = M[PUSH]', line 254
L0254@0256.  r_x = STX, r_s = M[PUSH];

Line 255: resolved aliases:  LDXI in 'r_p = M[IMM], r_x = LDX', line 255
L0255@0257.  r_p = M[IMM], r_x = LDX;

Line 256: resolved aliases:  CURSOR_Y, RAM_BASE, .data in 'data16 =  0xFF00 + 63', line 256
L0256@0258.  data16 =  0xFF00 + 63;

Line 258: resolved aliases:  POPX in 'r_x = LDX, r_s = M[POP]', line 258
L0258@025A.  r_x = LDX, r_s = M[POP];

Line 259: resolved aliases:  RTS in 'r_p = LDP, r_s = M[POP]', line 259
L0259@025B.  r_p = LDP, r_s = M[POP];

Line 261: resolved aliases:  PUSHA in 'r_a = STA, r_s = M[PUSH]', line 261
L0261@025C.GetRowBase:  r_a = STA, r_s = M[PUSH];

Line 262: resolved aliases:  ADYI in 'r_p = M[IMM], r_y = ADY', line 262
L0262@025D.  r_p = M[IMM], r_y = ADY;

Line 263: resolved aliases:  ROW_OFFSET, RAM_BASE, .data in 'data16 =  0xFF00 + 0', line 263
L0263@025E.  data16 =  0xFF00 + 0;

Line 266: resolved aliases:  POPA in 'r_a = LDA, r_s = M[POP]', line 266
L0266@0261.  r_a = LDA, r_s = M[POP];

Line 267: resolved aliases:  RTS in 'r_p = LDP, r_s = M[POP]', line 267
L0267@0262.  r_p = LDP, r_s = M[POP];

Line 271: resolved aliases:  .branchto in 'data16 =  @OutStrDone - $', line 271
L0271@0265.  data16 =  @OutStrDone - $;

Line 272: resolved aliases:  MARK2 in 'r_p = STP2, r_s = M[PUSH]', line 272
L0272@0266.  r_p = STP2, r_s = M[PUSH];

Line 274: resolved aliases:  .into in 'data16 =  @VGA_OutChr - $', line 274
L0274@0268.  data16 =  @VGA_OutChr - $;

Line 276: resolved aliases:  .to in 'data16 =  @VGA_OutStr - $', line 276
L0276@026A.  data16 =  @VGA_OutStr - $;

Line 277: resolved aliases:  RTS in 'r_p = LDP, r_s = M[POP]', line 277
L0277@026B.OutStrDone:  r_p = LDP, r_s = M[POP];

Success: pass 0 on vga.sif - 277 line(s) read, 684 statement(s) parsed, code address range 0x017E - 0x026C.
Compiling strings.sif, pass 1 out of 2.
Warning: .org value changed from 620 (0x026C) to 620 (0x026C)
Line 3: resolved aliases:  CR, .data in 'data16 =  0xD', line 3
L0003@026C.StrBreak:  data16 =  0xD;

Line 4: resolved aliases:  LF, .data in 'data16 =  0xA', line 4
L0004@026D.  data16 =  0xA;

Line 5: resolved aliases:  .data in 'data16 =  '*'', line 5
L0005@026E.  data16 =  '*';

Line 6: resolved aliases:  .data in 'data16 =  'B'', line 6
L0006@026F.  data16 =  'B';

Line 7: resolved aliases:  .data in 'data16 =  'R'', line 7
L0007@0270.  data16 =  'R';

Line 8: resolved aliases:  .data in 'data16 =  'E'', line 8
L0008@0271.  data16 =  'E';

Line 9: resolved aliases:  .data in 'data16 =  'A'', line 9
L0009@0272.  data16 =  'A';

Line 10: resolved aliases:  .data in 'data16 =  'K'', line 10
L0010@0273.  data16 =  'K';

Line 12: resolved aliases:  .data in 'data16 =  0', line 12
L0012@0274.  data16 =  0;

Line 14: resolved aliases:  CR, .data in 'data16 =  0xD', line 14
L0014@0275.StrError:  data16 =  0xD;

Line 15: resolved aliases:  LF, .data in 'data16 =  0xA', line 15
L0015@0276.  data16 =  0xA;

Line 16: resolved aliases:  .data in 'data16 =  '*'', line 16
L0016@0277.  data16 =  '*';

Line 17: resolved aliases:  .data in 'data16 =  'E'', line 17
L0017@0278.  data16 =  'E';

Line 18: resolved aliases:  .data in 'data16 =  'R'', line 18
L0018@0279.  data16 =  'R';

Line 19: resolved aliases:  .data in 'data16 =  'R'', line 19
L0019@027A.  data16 =  'R';

Line 20: resolved aliases:  .data in 'data16 =  'O'', line 20
L0020@027B.  data16 =  'O';

Line 21: resolved aliases:  .data in 'data16 =  'R'', line 21
L0021@027C.  data16 =  'R';

Line 22: resolved aliases:  .data in 'data16 =  ' '', line 22
L0022@027D.  data16 =  ' ';

Line 23: resolved aliases:  BEL, .data in 'data16 =  0x7', line 23
L0023@027E.StrBeep:  data16 =  0x7;

Line 24: resolved aliases:  .data in 'data16 =  0', line 24
L0024@027F.  data16 =  0;

Line 26: resolved aliases:  BS, .data in 'data16 =  0x8', line 26
L0026@0280.StrBack:  data16 =  0x8;

Line 27: resolved aliases:  BEL, .data in 'data16 =  0x7', line 27
L0027@0281.  data16 =  0x7;

Line 28: resolved aliases:  .data in 'data16 =  0', line 28
L0028@0282.  data16 =  0;

Line 30: resolved aliases:  CLS, .data in 'data16 =  0x1', line 30
L0030@0283.StrClear:  data16 =  0x1;

Line 31: resolved aliases:  .data in 'data16 =  0', line 31
L0031@0284.  data16 =  0;

Line 33: resolved aliases:  .data in 'data16 =  'R'', line 33
L0033@0285.StrReady:  data16 =  'R';

Line 34: resolved aliases:  .data in 'data16 =  'e'', line 34
L0034@0286.  data16 =  'e';

Line 35: resolved aliases:  .data in 'data16 =  'a'', line 35
L0035@0287.  data16 =  'a';

Line 36: resolved aliases:  .data in 'data16 =  'd'', line 36
L0036@0288.  data16 =  'd';

Line 37: resolved aliases:  .data in 'data16 =  'y'', line 37
L0037@0289.  data16 =  'y';

Line 38: resolved aliases:  .data in 'data16 =  '.'', line 38
L0038@028A.  data16 =  '.';

Line 39: resolved aliases:  CR, .data in 'data16 =  0xD', line 39
L0039@028B.StrEnd:  data16 =  0xD;

Line 40: resolved aliases:  LF, .data in 'data16 =  0xA', line 40
L0040@028C.  data16 =  0xA;

Line 41: resolved aliases:  .data in 'data16 =  0', line 41
L0041@028D.  data16 =  0;

Success: pass 0 on strings.sif - 42 line(s) read, 719 statement(s) parsed, code address range 0x026C - 0x028E.
Success: pass 0 on helloworld.sif - 280 line(s) read, 719 statement(s) parsed, code address range 0xFFFFFFFF - 0x028E.
Compiling helloworld.sif, pass 2 out of 2.
Info: line -1 - symbol[0000] <= 'System.Byte[]'
Info: line -1 - symbol[0001] <= 'System.Byte[]'
Info: line -1 - symbol[0002] <= 'System.Byte[]'
Info: line -1 - symbol[0003] <= 'System.Byte[]'
Info: line -1 - symbol[0004] <= 'System.Byte[]'
Info: line -1 - symbol[0005] <= 'System.Byte[]'
Info: line -1 - symbol[0006] <= 'System.Byte[]'
Info: line -1 - symbol[0007] <= 'System.Byte[]'
Info: line -1 - symbol[0008] <= 'System.Byte[]'
Info: line -1 - symbol[0009] <= 'System.Byte[]'
Info: line -1 - symbol[000A] <= 'System.Byte[]'
Info: line -1 - symbol[000B] <= 'System.Byte[]'
Info: line -1 - symbol[000C] <= 'System.Byte[]'
Info: line -1 - symbol[000D] <= 'System.Byte[]'
Info: line -1 - symbol[000E] <= 'System.Byte[]'
Info: line -1 - symbol[000F] <= 'System.Byte[]'
Info: line -1 - symbol[0010] <= 'System.Byte[]'
Info: line -1 - symbol[0011] <= 'System.Byte[]'
Info: line -1 - symbol[0012] <= 'System.Byte[]'
Info: line -1 - symbol[0013] <= 'System.Byte[]'
Info: line -1 - symbol[0014] <= 'System.Byte[]'
Info: line -1 - symbol[0015] <= 'System.Byte[]'
Info: line -1 - symbol[0016] <= 'System.Byte[]'
Info: line -1 - symbol[0017] <= 'System.Byte[]'
Info: line -1 - symbol[0018] <= 'System.Byte[]'
Info: line -1 - symbol[0019] <= 'System.Byte[]'
Info: line -1 - symbol[001A] <= 'System.Byte[]'
Info: line -1 - symbol[001B] <= 'System.Byte[]'
Info: line -1 - symbol[001C] <= 'System.Byte[]'
Info: line -1 - symbol[001D] <= 'System.Byte[]'
Info: line -1 - symbol[001E] <= 'System.Byte[]'
Info: line -1 - symbol[001F] <= 'System.Byte[]'
Info: line -1 - symbol[0020] <= 'System.Byte[]'
Info: line -1 - symbol[0021] <= 'System.Byte[]'
Info: line -1 - symbol[0022] <= 'System.Byte[]'
Info: line -1 - symbol[0023] <= 'System.Byte[]'
Info: line -1 - symbol[0024] <= 'System.Byte[]'
Info: line -1 - symbol[0025] <= 'System.Byte[]'
Info: line -1 - symbol[0026] <= 'System.Byte[]'
Info: line -1 - symbol[0027] <= 'System.Byte[]'
Info: line -1 - symbol[0028] <= 'System.Byte[]'
Info: line -1 - symbol[0029] <= 'System.Byte[]'
Info: line -1 - symbol[002A] <= 'System.Byte[]'
Info: line -1 - symbol[002B] <= 'System.Byte[]'
Info: line -1 - symbol[002C] <= 'System.Byte[]'
Info: line -1 - symbol[002D] <= 'System.Byte[]'
Info: line -1 - symbol[002E] <= 'System.Byte[]'
Info: line -1 - symbol[002F] <= 'System.Byte[]'
Info: line -1 - symbol[0030] <= 'System.Byte[]'
Info: line -1 - symbol[0031] <= 'System.Byte[]'
Info: line -1 - symbol[0032] <= 'System.Byte[]'
Info: line -1 - symbol[0033] <= 'System.Byte[]'
Info: line -1 - symbol[0034] <= 'System.Byte[]'
Info: line -1 - symbol[0035] <= 'System.Byte[]'
Info: line -1 - symbol[0036] <= 'System.Byte[]'
Info: line -1 - symbol[0037] <= 'System.Byte[]'
Info: line -1 - symbol[0038] <= 'System.Byte[]'
Info: line -1 - symbol[0039] <= 'System.Byte[]'
Info: line -1 - symbol[003A] <= 'System.Byte[]'
Info: line -1 - symbol[003B] <= 'System.Byte[]'
Info: line -1 - symbol[003C] <= 'System.Byte[]'
Info: line -1 - symbol[003D] <= 'System.Byte[]'
Info: line -1 - symbol[003E] <= 'System.Byte[]'
Info: line -1 - symbol[003F] <= 'System.Byte[]'
Info: line -1 - symbol[0040] <= 'System.Byte[]'
Info: line -1 - symbol[0041] <= 'System.Byte[]'
Info: line -1 - symbol[0042] <= 'System.Byte[]'
Info: line -1 - symbol[0043] <= 'System.Byte[]'
Info: line -1 - symbol[0044] <= 'System.Byte[]'
Info: line -1 - symbol[0045] <= 'System.Byte[]'
Info: line -1 - symbol[0046] <= 'System.Byte[]'
Info: line -1 - symbol[0047] <= 'System.Byte[]'
Info: line -1 - symbol[0048] <= 'System.Byte[]'
Info: line -1 - symbol[0049] <= 'System.Byte[]'
Info: line -1 - symbol[004A] <= 'System.Byte[]'
Info: line -1 - symbol[004B] <= 'System.Byte[]'
Info: line -1 - symbol[004C] <= 'System.Byte[]'
Info: line -1 - symbol[004D] <= 'System.Byte[]'
Info: line -1 - symbol[004E] <= 'System.Byte[]'
Info: line -1 - symbol[004F] <= 'System.Byte[]'
Info: line -1 - symbol[0050] <= 'System.Byte[]'
Info: line -1 - symbol[0051] <= 'System.Byte[]'
Info: line -1 - symbol[0052] <= 'System.Byte[]'
Info: line -1 - symbol[0053] <= 'System.Byte[]'
Info: line -1 - symbol[0054] <= 'System.Byte[]'
Info: line -1 - symbol[0055] <= 'System.Byte[]'
Info: line -1 - symbol[0056] <= 'System.Byte[]'
Info: line -1 - symbol[0057] <= 'System.Byte[]'
Info: line -1 - symbol[0058] <= 'System.Byte[]'
Info: line -1 - symbol[0059] <= 'System.Byte[]'
Info: line -1 - symbol[005A] <= 'System.Byte[]'
Info: line -1 - symbol[005B] <= 'System.Byte[]'
Info: line -1 - symbol[005C] <= 'System.Byte[]'
Info: line -1 - symbol[005D] <= 'System.Byte[]'
Info: line -1 - symbol[005E] <= 'System.Byte[]'
Info: line -1 - symbol[005F] <= 'System.Byte[]'
Info: line -1 - symbol[0060] <= 'System.Byte[]'
Info: line -1 - symbol[0061] <= 'System.Byte[]'
Info: line -1 - symbol[0062] <= 'System.Byte[]'
Info: line -1 - symbol[0063] <= 'System.Byte[]'
Info: line -1 - symbol[0064] <= 'System.Byte[]'
Info: line -1 - symbol[0065] <= 'System.Byte[]'
Info: line -1 - symbol[0066] <= 'System.Byte[]'
Info: line -1 - symbol[0067] <= 'System.Byte[]'
Info: line -1 - symbol[0068] <= 'System.Byte[]'
Info: line -1 - symbol[0069] <= 'System.Byte[]'
Info: line -1 - symbol[006A] <= 'System.Byte[]'
Info: line -1 - symbol[006B] <= 'System.Byte[]'
Info: line -1 - symbol[006C] <= 'System.Byte[]'
Info: line -1 - symbol[006D] <= 'System.Byte[]'
Info: line -1 - symbol[006E] <= 'System.Byte[]'
Info: line -1 - symbol[006F] <= 'System.Byte[]'
Info: line -1 - symbol[0070] <= 'System.Byte[]'
Info: line -1 - symbol[0071] <= 'System.Byte[]'
Info: line -1 - symbol[0072] <= 'System.Byte[]'
Info: line -1 - symbol[0073] <= 'System.Byte[]'
Info: line -1 - symbol[0074] <= 'System.Byte[]'
Info: line -1 - symbol[0075] <= 'System.Byte[]'
Info: line -1 - symbol[0076] <= 'System.Byte[]'
Info: line -1 - symbol[0077] <= 'System.Byte[]'
Info: line -1 - symbol[0078] <= 'System.Byte[]'
Info: line -1 - symbol[0079] <= 'System.Byte[]'
Info: line -1 - symbol[007A] <= 'System.Byte[]'
Info: line -1 - symbol[007B] <= 'System.Byte[]'
Info: line -1 - symbol[007C] <= 'System.Byte[]'
Info: line -1 - symbol[007D] <= 'System.Byte[]'
Info: line -1 - symbol[007E] <= 'System.Byte[]'
Info: line -1 - symbol[007F] <= 'System.Byte[]'
Info: line -1 - symbol[0080] <= 'System.Byte[]'
Info: line -1 - symbol[0081] <= 'System.Byte[]'
Info: line -1 - symbol[0082] <= 'System.Byte[]'
Info: line -1 - symbol[0083] <= 'System.Byte[]'
Info: line -1 - symbol[0084] <= 'System.Byte[]'
Info: line -1 - symbol[0085] <= 'System.Byte[]'
Info: line -1 - symbol[0086] <= 'System.Byte[]'
Info: line -1 - symbol[0087] <= 'System.Byte[]'
Info: line -1 - symbol[0088] <= 'System.Byte[]'
Info: line -1 - symbol[0089] <= 'System.Byte[]'
Info: line -1 - symbol[008A] <= 'System.Byte[]'
Info: line -1 - symbol[008B] <= 'System.Byte[]'
Info: line -1 - symbol[008C] <= 'System.Byte[]'
Info: line -1 - symbol[008D] <= 'System.Byte[]'
Info: line -1 - symbol[008E] <= 'System.Byte[]'
Info: line -1 - symbol[008F] <= 'System.Byte[]'
Info: line -1 - symbol[0090] <= 'System.Byte[]'
Info: line -1 - symbol[0091] <= 'System.Byte[]'
Info: line -1 - symbol[0092] <= 'System.Byte[]'
Info: line -1 - symbol[0093] <= 'System.Byte[]'
Info: line -1 - symbol[0094] <= 'System.Byte[]'
Info: line -1 - symbol[0095] <= 'System.Byte[]'
Info: line -1 - symbol[0096] <= 'System.Byte[]'
Info: line -1 - symbol[0097] <= 'System.Byte[]'
Info: line -1 - symbol[0098] <= 'System.Byte[]'
Info: line -1 - symbol[0099] <= 'System.Byte[]'
Info: line -1 - symbol[009A] <= 'System.Byte[]'
Info: line -1 - symbol[009B] <= 'System.Byte[]'
Info: line -1 - symbol[009C] <= 'System.Byte[]'
Info: line -1 - symbol[009D] <= 'System.Byte[]'
Info: line -1 - symbol[009E] <= 'System.Byte[]'
Info: line -1 - symbol[009F] <= 'System.Byte[]'
Info: line -1 - symbol[00A0] <= 'System.Byte[]'
Info: line -1 - symbol[00A1] <= 'System.Byte[]'
Info: line -1 - symbol[00A2] <= 'System.Byte[]'
Info: line -1 - symbol[00A3] <= 'System.Byte[]'
Info: line -1 - symbol[00A4] <= 'System.Byte[]'
Info: line -1 - symbol[00A5] <= 'System.Byte[]'
Info: line -1 - symbol[00A6] <= 'System.Byte[]'
Info: line -1 - symbol[00A7] <= 'System.Byte[]'
Info: line -1 - symbol[00A8] <= 'System.Byte[]'
Info: line -1 - symbol[00A9] <= 'System.Byte[]'
Info: line -1 - symbol[00AA] <= 'System.Byte[]'
Info: line -1 - symbol[00AB] <= 'System.Byte[]'
Info: line -1 - symbol[00AC] <= 'System.Byte[]'
Info: line -1 - symbol[00AD] <= 'System.Byte[]'
Info: line -1 - symbol[00AE] <= 'System.Byte[]'
Info: line -1 - symbol[00AF] <= 'System.Byte[]'
Info: line -1 - symbol[00B0] <= 'System.Byte[]'
Info: line -1 - symbol[00B1] <= 'System.Byte[]'
Info: line -1 - symbol[00B2] <= 'System.Byte[]'
Info: line -1 - symbol[00B3] <= 'System.Byte[]'
Info: line -1 - symbol[00B4] <= 'System.Byte[]'
Info: line -1 - symbol[00B5] <= 'System.Byte[]'
Info: line -1 - symbol[00B6] <= 'System.Byte[]'
Info: line -1 - symbol[00B7] <= 'System.Byte[]'
Info: line -1 - symbol[00B8] <= 'System.Byte[]'
Info: line -1 - symbol[00B9] <= 'System.Byte[]'
Info: line -1 - symbol[00BA] <= 'System.Byte[]'
Info: line -1 - symbol[00BB] <= 'System.Byte[]'
Info: line -1 - symbol[00BC] <= 'System.Byte[]'
Info: line -1 - symbol[00BD] <= 'System.Byte[]'
Info: line -1 - symbol[00BE] <= 'System.Byte[]'
Info: line -1 - symbol[00BF] <= 'System.Byte[]'
Info: line -1 - symbol[00C0] <= 'System.Byte[]'
Info: line -1 - symbol[00C1] <= 'System.Byte[]'
Info: line -1 - symbol[00C2] <= 'System.Byte[]'
Info: line -1 - symbol[00C3] <= 'System.Byte[]'
Info: line -1 - symbol[00C4] <= 'System.Byte[]'
Info: line -1 - symbol[00C5] <= 'System.Byte[]'
Info: line -1 - symbol[00C6] <= 'System.Byte[]'
Info: line -1 - symbol[00C7] <= 'System.Byte[]'
Info: line -1 - symbol[00C8] <= 'System.Byte[]'
Info: line -1 - symbol[00C9] <= 'System.Byte[]'
Info: line -1 - symbol[00CA] <= 'System.Byte[]'
Info: line -1 - symbol[00CB] <= 'System.Byte[]'
Info: line -1 - symbol[00CC] <= 'System.Byte[]'
Info: line -1 - symbol[00CD] <= 'System.Byte[]'
Info: line -1 - symbol[00CE] <= 'System.Byte[]'
Info: line -1 - symbol[00CF] <= 'System.Byte[]'
Info: line -1 - symbol[00D0] <= 'System.Byte[]'
Info: line -1 - symbol[00D1] <= 'System.Byte[]'
Info: line -1 - symbol[00D2] <= 'System.Byte[]'
Info: line -1 - symbol[00D3] <= 'System.Byte[]'
Info: line -1 - symbol[00D4] <= 'System.Byte[]'
Info: line -1 - symbol[00D5] <= 'System.Byte[]'
Info: line -1 - symbol[00D6] <= 'System.Byte[]'
Info: line -1 - symbol[00D7] <= 'System.Byte[]'
Info: line -1 - symbol[00D8] <= 'System.Byte[]'
Info: line -1 - symbol[00D9] <= 'System.Byte[]'
Info: line -1 - symbol[00DA] <= 'System.Byte[]'
Info: line -1 - symbol[00DB] <= 'System.Byte[]'
Info: line -1 - symbol[00DC] <= 'System.Byte[]'
Info: line -1 - symbol[00DD] <= 'System.Byte[]'
Info: line -1 - symbol[00DE] <= 'System.Byte[]'
Info: line -1 - symbol[00DF] <= 'System.Byte[]'
Info: line -1 - symbol[00E0] <= 'System.Byte[]'
Info: line -1 - symbol[00E1] <= 'System.Byte[]'
Info: line -1 - symbol[00E2] <= 'System.Byte[]'
Info: line -1 - symbol[00E3] <= 'System.Byte[]'
Info: line -1 - symbol[00E4] <= 'System.Byte[]'
Info: line -1 - symbol[00E5] <= 'System.Byte[]'
Info: line -1 - symbol[00E6] <= 'System.Byte[]'
Info: line -1 - symbol[00E7] <= 'System.Byte[]'
Info: line -1 - symbol[00E8] <= 'System.Byte[]'
Info: line -1 - symbol[00E9] <= 'System.Byte[]'
Info: line -1 - symbol[00EA] <= 'System.Byte[]'
Info: line -1 - symbol[00EB] <= 'System.Byte[]'
Info: line -1 - symbol[00EC] <= 'System.Byte[]'
Info: line -1 - symbol[00ED] <= 'System.Byte[]'
Info: line -1 - symbol[00EE] <= 'System.Byte[]'
Info: line -1 - symbol[00EF] <= 'System.Byte[]'
Info: line -1 - symbol[00F0] <= 'System.Byte[]'
Info: line -1 - symbol[00F1] <= 'System.Byte[]'
Info: line -1 - symbol[00F2] <= 'System.Byte[]'
Info: line -1 - symbol[00F3] <= 'System.Byte[]'
Info: line -1 - symbol[00F4] <= 'System.Byte[]'
Info: line -1 - symbol[00F5] <= 'System.Byte[]'
Info: line -1 - symbol[00F6] <= 'System.Byte[]'
Info: line -1 - symbol[00F7] <= 'System.Byte[]'
Info: line -1 - symbol[00F8] <= 'System.Byte[]'
Info: line -1 - symbol[00F9] <= 'System.Byte[]'
Info: line -1 - symbol[00FA] <= 'System.Byte[]'
Info: line -1 - symbol[00FB] <= 'System.Byte[]'
Info: line -1 - symbol[00FC] <= 'System.Byte[]'
Info: line -1 - symbol[00FD] <= 'System.Byte[]'
Info: line -1 - symbol[00FE] <= 'System.Byte[]'
Info: line -1 - symbol[00FF] <= 'System.Byte[]'
Info: line -1 - symbol[0100] <= 'System.Byte[]'
Info: line -1 - symbol[0101] <= 'System.Byte[]'
Info: line -1 - symbol[0102] <= 'System.Byte[]'
Info: line -1 - symbol[0103] <= 'System.Byte[]'
Info: line -1 - symbol[0104] <= 'System.Byte[]'
Info: line -1 - symbol[0105] <= 'System.Byte[]'
Info: line -1 - symbol[0106] <= 'System.Byte[]'
Info: line -1 - symbol[0107] <= 'System.Byte[]'
Info: line -1 - symbol[0108] <= 'System.Byte[]'
Info: line -1 - symbol[0109] <= 'System.Byte[]'
Info: line -1 - symbol[010A] <= 'System.Byte[]'
Info: line -1 - symbol[010B] <= 'System.Byte[]'
Info: line -1 - symbol[010C] <= 'System.Byte[]'
Info: line -1 - symbol[010D] <= 'System.Byte[]'
Info: line -1 - symbol[010E] <= 'System.Byte[]'
Info: line -1 - symbol[010F] <= 'System.Byte[]'
Info: line -1 - symbol[0110] <= 'System.Byte[]'
Info: line -1 - symbol[0111] <= 'System.Byte[]'
Info: line -1 - symbol[0112] <= 'System.Byte[]'
Info: line -1 - symbol[0113] <= 'System.Byte[]'
Info: line -1 - symbol[0114] <= 'System.Byte[]'
Info: line -1 - symbol[0115] <= 'System.Byte[]'
Info: line -1 - symbol[0116] <= 'System.Byte[]'
Info: line -1 - symbol[0117] <= 'System.Byte[]'
Info: line -1 - symbol[0118] <= 'System.Byte[]'
Info: line -1 - symbol[0119] <= 'System.Byte[]'
Info: line -1 - symbol[011A] <= 'System.Byte[]'
Info: line -1 - symbol[011B] <= 'System.Byte[]'
Info: line -1 - symbol[011C] <= 'System.Byte[]'
Info: line -1 - symbol[011D] <= 'System.Byte[]'
Info: line -1 - symbol[011E] <= 'System.Byte[]'
Info: line -1 - symbol[011F] <= 'System.Byte[]'
Info: line -1 - symbol[0120] <= 'System.Byte[]'
Info: line -1 - symbol[0121] <= 'System.Byte[]'
Info: line -1 - symbol[0122] <= 'System.Byte[]'
Info: line -1 - symbol[0123] <= 'System.Byte[]'
Info: line -1 - symbol[0124] <= 'System.Byte[]'
Info: line -1 - symbol[0125] <= 'System.Byte[]'
Info: line -1 - symbol[0126] <= 'System.Byte[]'
Info: line -1 - symbol[0127] <= 'System.Byte[]'
Info: line -1 - symbol[0128] <= 'System.Byte[]'
Info: line -1 - symbol[0129] <= 'System.Byte[]'
Info: line -1 - symbol[012A] <= 'System.Byte[]'
Info: line -1 - symbol[012B] <= 'System.Byte[]'
Info: line -1 - symbol[012C] <= 'System.Byte[]'
Info: line -1 - symbol[012D] <= 'System.Byte[]'
Info: line -1 - symbol[012E] <= 'System.Byte[]'
Info: line -1 - symbol[012F] <= 'System.Byte[]'
Info: line -1 - symbol[0130] <= 'System.Byte[]'
Info: line -1 - symbol[0131] <= 'System.Byte[]'
Info: line -1 - symbol[0132] <= 'System.Byte[]'
Info: line -1 - symbol[0133] <= 'System.Byte[]'
Info: line -1 - symbol[0134] <= 'System.Byte[]'
Info: line -1 - symbol[0135] <= 'System.Byte[]'
Info: line -1 - symbol[0136] <= 'System.Byte[]'
Info: line -1 - symbol[0137] <= 'System.Byte[]'
Info: line -1 - symbol[0138] <= 'System.Byte[]'
Info: line -1 - symbol[0139] <= 'System.Byte[]'
Info: line -1 - symbol[013A] <= 'System.Byte[]'
Info: line -1 - symbol[013B] <= 'System.Byte[]'
Info: line -1 - symbol[013C] <= 'System.Byte[]'
Info: line -1 - symbol[013D] <= 'System.Byte[]'
Info: line -1 - symbol[013E] <= 'System.Byte[]'
Info: line -1 - symbol[013F] <= 'System.Byte[]'
Info: line -1 - symbol[0140] <= 'System.Byte[]'
Info: line -1 - symbol[0141] <= 'System.Byte[]'
Info: line -1 - symbol[0142] <= 'System.Byte[]'
Info: line -1 - symbol[0143] <= 'System.Byte[]'
Info: line -1 - symbol[0144] <= 'System.Byte[]'
Info: line -1 - symbol[0145] <= 'System.Byte[]'
Info: line -1 - symbol[0146] <= 'System.Byte[]'
Info: line -1 - symbol[0147] <= 'System.Byte[]'
Info: line -1 - symbol[0148] <= 'System.Byte[]'
Info: line -1 - symbol[0149] <= 'System.Byte[]'
Info: line -1 - symbol[014A] <= 'System.Byte[]'
Info: line -1 - symbol[014B] <= 'System.Byte[]'
Info: line -1 - symbol[014C] <= 'System.Byte[]'
Info: line -1 - symbol[014D] <= 'System.Byte[]'
Info: line -1 - symbol[014E] <= 'System.Byte[]'
Info: line -1 - symbol[014F] <= 'System.Byte[]'
Info: line -1 - symbol[0150] <= 'System.Byte[]'
Info: line -1 - symbol[0151] <= 'System.Byte[]'
Info: line -1 - symbol[0152] <= 'System.Byte[]'
Info: line -1 - symbol[0153] <= 'System.Byte[]'
Info: line -1 - symbol[0154] <= 'System.Byte[]'
Info: line -1 - symbol[0155] <= 'System.Byte[]'
Info: line -1 - symbol[0156] <= 'System.Byte[]'
Info: line -1 - symbol[0157] <= 'System.Byte[]'
Info: line -1 - symbol[0158] <= 'System.Byte[]'
Info: line -1 - symbol[0159] <= 'System.Byte[]'
Info: line -1 - symbol[015A] <= 'System.Byte[]'
Info: line -1 - symbol[015B] <= 'System.Byte[]'
Info: line -1 - symbol[015C] <= 'System.Byte[]'
Info: line -1 - symbol[015D] <= 'System.Byte[]'
Info: line -1 - symbol[015E] <= 'System.Byte[]'
Info: line -1 - symbol[015F] <= 'System.Byte[]'
Info: line -1 - symbol[0160] <= 'System.Byte[]'
Info: line -1 - symbol[0161] <= 'System.Byte[]'
Info: line -1 - symbol[0162] <= 'System.Byte[]'
Info: line -1 - symbol[0163] <= 'System.Byte[]'
Info: line -1 - symbol[0164] <= 'System.Byte[]'
Info: line -1 - symbol[0165] <= 'System.Byte[]'
Info: line -1 - symbol[0166] <= 'System.Byte[]'
Info: line -1 - symbol[0167] <= 'System.Byte[]'
Info: line -1 - symbol[0168] <= 'System.Byte[]'
Info: line -1 - symbol[0169] <= 'System.Byte[]'
Info: line -1 - symbol[016A] <= 'System.Byte[]'
Info: line -1 - symbol[016B] <= 'System.Byte[]'
Info: line -1 - symbol[016C] <= 'System.Byte[]'
Info: line -1 - symbol[016D] <= 'System.Byte[]'
Info: line -1 - symbol[016E] <= 'System.Byte[]'
Info: line -1 - symbol[016F] <= 'System.Byte[]'
Info: line -1 - symbol[0170] <= 'System.Byte[]'
Info: line -1 - symbol[0171] <= 'System.Byte[]'
Info: line -1 - symbol[0172] <= 'System.Byte[]'
Info: line -1 - symbol[0173] <= 'System.Byte[]'
Info: line -1 - symbol[0174] <= 'System.Byte[]'
Info: line -1 - symbol[0175] <= 'System.Byte[]'
Info: line -1 - symbol[0176] <= 'System.Byte[]'
Info: line -1 - symbol[0177] <= 'System.Byte[]'
Info: line -1 - symbol[0178] <= 'System.Byte[]'
Info: line -1 - symbol[0179] <= 'System.Byte[]'
Info: line -1 - symbol[017A] <= 'System.Byte[]'
Info: line -1 - symbol[017B] <= 'System.Byte[]'
Info: line -1 - symbol[017C] <= 'System.Byte[]'
Info: line -1 - symbol[017D] <= 'System.Byte[]'
Info: line -1 - symbol[017E] <= 'System.Byte[]'
Info: line -1 - symbol[017F] <= 'System.Byte[]'
Info: line -1 - symbol[0180] <= 'System.Byte[]'
Info: line -1 - symbol[0181] <= 'System.Byte[]'
Info: line -1 - symbol[0182] <= 'System.Byte[]'
Info: line -1 - symbol[0183] <= 'System.Byte[]'
Info: line -1 - symbol[0184] <= 'System.Byte[]'
Info: line -1 - symbol[0185] <= 'System.Byte[]'
Info: line -1 - symbol[0186] <= 'System.Byte[]'
Info: line -1 - symbol[0187] <= 'System.Byte[]'
Info: line -1 - symbol[0188] <= 'System.Byte[]'
Info: line -1 - symbol[0189] <= 'System.Byte[]'
Info: line -1 - symbol[018A] <= 'System.Byte[]'
Info: line -1 - symbol[018B] <= 'System.Byte[]'
Info: line -1 - symbol[018C] <= 'System.Byte[]'
Info: line -1 - symbol[018D] <= 'System.Byte[]'
Info: line -1 - symbol[018E] <= 'System.Byte[]'
Info: line -1 - symbol[018F] <= 'System.Byte[]'
Info: line -1 - symbol[0190] <= 'System.Byte[]'
Info: line -1 - symbol[0191] <= 'System.Byte[]'
Info: line -1 - symbol[0192] <= 'System.Byte[]'
Info: line -1 - symbol[0193] <= 'System.Byte[]'
Info: line -1 - symbol[0194] <= 'System.Byte[]'
Info: line -1 - symbol[0195] <= 'System.Byte[]'
Info: line -1 - symbol[0196] <= 'System.Byte[]'
Info: line -1 - symbol[0197] <= 'System.Byte[]'
Info: line -1 - symbol[0198] <= 'System.Byte[]'
Info: line -1 - symbol[0199] <= 'System.Byte[]'
Info: line -1 - symbol[019A] <= 'System.Byte[]'
Info: line -1 - symbol[019B] <= 'System.Byte[]'
Info: line -1 - symbol[019C] <= 'System.Byte[]'
Info: line -1 - symbol[019D] <= 'System.Byte[]'
Info: line -1 - symbol[019E] <= 'System.Byte[]'
Info: line -1 - symbol[019F] <= 'System.Byte[]'
Info: line -1 - symbol[01A0] <= 'System.Byte[]'
Info: line -1 - symbol[01A1] <= 'System.Byte[]'
Info: line -1 - symbol[01A2] <= 'System.Byte[]'
Info: line -1 - symbol[01A3] <= 'System.Byte[]'
Info: line -1 - symbol[01A4] <= 'System.Byte[]'
Info: line -1 - symbol[01A5] <= 'System.Byte[]'
Info: line -1 - symbol[01A6] <= 'System.Byte[]'
Info: line -1 - symbol[01A7] <= 'System.Byte[]'
Info: line -1 - symbol[01A8] <= 'System.Byte[]'
Info: line -1 - symbol[01A9] <= 'System.Byte[]'
Info: line -1 - symbol[01AA] <= 'System.Byte[]'
Info: line -1 - symbol[01AB] <= 'System.Byte[]'
Info: line -1 - symbol[01AC] <= 'System.Byte[]'
Info: line -1 - symbol[01AD] <= 'System.Byte[]'
Info: line -1 - symbol[01AE] <= 'System.Byte[]'
Info: line -1 - symbol[01AF] <= 'System.Byte[]'
Info: line -1 - symbol[01B0] <= 'System.Byte[]'
Info: line -1 - symbol[01B1] <= 'System.Byte[]'
Info: line -1 - symbol[01B2] <= 'System.Byte[]'
Info: line -1 - symbol[01B3] <= 'System.Byte[]'
Info: line -1 - symbol[01B4] <= 'System.Byte[]'
Info: line -1 - symbol[01B5] <= 'System.Byte[]'
Info: line -1 - symbol[01B6] <= 'System.Byte[]'
Info: line -1 - symbol[01B7] <= 'System.Byte[]'
Info: line -1 - symbol[01B8] <= 'System.Byte[]'
Info: line -1 - symbol[01B9] <= 'System.Byte[]'
Info: line -1 - symbol[01BA] <= 'System.Byte[]'
Info: line -1 - symbol[01BB] <= 'System.Byte[]'
Info: line -1 - symbol[01BC] <= 'System.Byte[]'
Info: line -1 - symbol[01BD] <= 'System.Byte[]'
Info: line -1 - symbol[01BE] <= 'System.Byte[]'
Info: line -1 - symbol[01BF] <= 'System.Byte[]'
Info: line -1 - symbol[01C0] <= 'System.Byte[]'
Info: line -1 - symbol[01C1] <= 'System.Byte[]'
Info: line -1 - symbol[01C2] <= 'System.Byte[]'
Info: line -1 - symbol[01C3] <= 'System.Byte[]'
Info: line -1 - symbol[01C4] <= 'System.Byte[]'
Info: line -1 - symbol[01C5] <= 'System.Byte[]'
Info: line -1 - symbol[01C6] <= 'System.Byte[]'
Info: line -1 - symbol[01C7] <= 'System.Byte[]'
Info: line -1 - symbol[01C8] <= 'System.Byte[]'
Info: line -1 - symbol[01C9] <= 'System.Byte[]'
Info: line -1 - symbol[01CA] <= 'System.Byte[]'
Info: line -1 - symbol[01CB] <= 'System.Byte[]'
Info: line -1 - symbol[01CC] <= 'System.Byte[]'
Info: line -1 - symbol[01CD] <= 'System.Byte[]'
Info: line -1 - symbol[01CE] <= 'System.Byte[]'
Info: line -1 - symbol[01CF] <= 'System.Byte[]'
Info: line -1 - symbol[01D0] <= 'System.Byte[]'
Info: line -1 - symbol[01D1] <= 'System.Byte[]'
Info: line -1 - symbol[01D2] <= 'System.Byte[]'
Info: line -1 - symbol[01D3] <= 'System.Byte[]'
Info: line -1 - symbol[01D4] <= 'System.Byte[]'
Info: line -1 - symbol[01D5] <= 'System.Byte[]'
Info: line -1 - symbol[01D6] <= 'System.Byte[]'
Info: line -1 - symbol[01D7] <= 'System.Byte[]'
Info: line -1 - symbol[01D8] <= 'System.Byte[]'
Info: line -1 - symbol[01D9] <= 'System.Byte[]'
Info: line -1 - symbol[01DA] <= 'System.Byte[]'
Info: line -1 - symbol[01DB] <= 'System.Byte[]'
Info: line -1 - symbol[01DC] <= 'System.Byte[]'
Info: line -1 - symbol[01DD] <= 'System.Byte[]'
Info: line -1 - symbol[01DE] <= 'System.Byte[]'
Info: line -1 - symbol[01DF] <= 'System.Byte[]'
Info: line -1 - symbol[01E0] <= 'System.Byte[]'
Info: line -1 - symbol[01E1] <= 'System.Byte[]'
Info: line -1 - symbol[01E2] <= 'System.Byte[]'
Info: line -1 - symbol[01E3] <= 'System.Byte[]'
Info: line -1 - symbol[01E4] <= 'System.Byte[]'
Info: line -1 - symbol[01E5] <= 'System.Byte[]'
Info: line -1 - symbol[01E6] <= 'System.Byte[]'
Info: line -1 - symbol[01E7] <= 'System.Byte[]'
Info: line -1 - symbol[01E8] <= 'System.Byte[]'
Info: line -1 - symbol[01E9] <= 'System.Byte[]'
Info: line -1 - symbol[01EA] <= 'System.Byte[]'
Info: line -1 - symbol[01EB] <= 'System.Byte[]'
Info: line -1 - symbol[01EC] <= 'System.Byte[]'
Info: line -1 - symbol[01ED] <= 'System.Byte[]'
Info: line -1 - symbol[01EE] <= 'System.Byte[]'
Info: line -1 - symbol[01EF] <= 'System.Byte[]'
Info: line -1 - symbol[01F0] <= 'System.Byte[]'
Info: line -1 - symbol[01F1] <= 'System.Byte[]'
Info: line -1 - symbol[01F2] <= 'System.Byte[]'
Info: line -1 - symbol[01F3] <= 'System.Byte[]'
Info: line -1 - symbol[01F4] <= 'System.Byte[]'
Info: line -1 - symbol[01F5] <= 'System.Byte[]'
Info: line -1 - symbol[01F6] <= 'System.Byte[]'
Info: line -1 - symbol[01F7] <= 'System.Byte[]'
Info: line -1 - symbol[01F8] <= 'System.Byte[]'
Info: line -1 - symbol[01F9] <= 'System.Byte[]'
Info: line -1 - symbol[01FA] <= 'System.Byte[]'
Info: line -1 - symbol[01FB] <= 'System.Byte[]'
Info: line -1 - symbol[01FC] <= 'System.Byte[]'
Info: line -1 - symbol[01FD] <= 'System.Byte[]'
Info: line -1 - symbol[01FE] <= 'System.Byte[]'
Info: line -1 - symbol[01FF] <= 'System.Byte[]'
Info: line -1 - symbol[0200] <= 'System.Byte[]'
Info: line -1 - symbol[0201] <= 'System.Byte[]'
Info: line -1 - symbol[0202] <= 'System.Byte[]'
Info: line -1 - symbol[0203] <= 'System.Byte[]'
Info: line -1 - symbol[0204] <= 'System.Byte[]'
Info: line -1 - symbol[0205] <= 'System.Byte[]'
Info: line -1 - symbol[0206] <= 'System.Byte[]'
Info: line -1 - symbol[0207] <= 'System.Byte[]'
Info: line -1 - symbol[0208] <= 'System.Byte[]'
Info: line -1 - symbol[0209] <= 'System.Byte[]'
Info: line -1 - symbol[020A] <= 'System.Byte[]'
Info: line -1 - symbol[020B] <= 'System.Byte[]'
Info: line -1 - symbol[020C] <= 'System.Byte[]'
Info: line -1 - symbol[020D] <= 'System.Byte[]'
Info: line -1 - symbol[020E] <= 'System.Byte[]'
Info: line -1 - symbol[020F] <= 'System.Byte[]'
Info: line -1 - symbol[0210] <= 'System.Byte[]'
Info: line -1 - symbol[0211] <= 'System.Byte[]'
Info: line -1 - symbol[0212] <= 'System.Byte[]'
Info: line -1 - symbol[0213] <= 'System.Byte[]'
Info: line -1 - symbol[0214] <= 'System.Byte[]'
Info: line -1 - symbol[0215] <= 'System.Byte[]'
Info: line -1 - symbol[0216] <= 'System.Byte[]'
Info: line -1 - symbol[0217] <= 'System.Byte[]'
Info: line -1 - symbol[0218] <= 'System.Byte[]'
Info: line -1 - symbol[0219] <= 'System.Byte[]'
Info: line -1 - symbol[021A] <= 'System.Byte[]'
Info: line -1 - symbol[021B] <= 'System.Byte[]'
Info: line -1 - symbol[021C] <= 'System.Byte[]'
Info: line -1 - symbol[021D] <= 'System.Byte[]'
Info: line -1 - symbol[021E] <= 'System.Byte[]'
Info: line -1 - symbol[021F] <= 'System.Byte[]'
Info: line -1 - symbol[0220] <= 'System.Byte[]'
Info: line -1 - symbol[0221] <= 'System.Byte[]'
Info: line -1 - symbol[0222] <= 'System.Byte[]'
Info: line -1 - symbol[0223] <= 'System.Byte[]'
Info: line -1 - symbol[0224] <= 'System.Byte[]'
Info: line -1 - symbol[0225] <= 'System.Byte[]'
Info: line -1 - symbol[0226] <= 'System.Byte[]'
Info: line -1 - symbol[0227] <= 'System.Byte[]'
Info: line -1 - symbol[0228] <= 'System.Byte[]'
Info: line -1 - symbol[0229] <= 'System.Byte[]'
Info: line -1 - symbol[022A] <= 'System.Byte[]'
Info: line -1 - symbol[022B] <= 'System.Byte[]'
Info: line -1 - symbol[022C] <= 'System.Byte[]'
Info: line -1 - symbol[022D] <= 'System.Byte[]'
Info: line -1 - symbol[022E] <= 'System.Byte[]'
Info: line -1 - symbol[022F] <= 'System.Byte[]'
Info: line -1 - symbol[0230] <= 'System.Byte[]'
Info: line -1 - symbol[0231] <= 'System.Byte[]'
Info: line -1 - symbol[0232] <= 'System.Byte[]'
Info: line -1 - symbol[0233] <= 'System.Byte[]'
Info: line -1 - symbol[0234] <= 'System.Byte[]'
Info: line -1 - symbol[0235] <= 'System.Byte[]'
Info: line -1 - symbol[0236] <= 'System.Byte[]'
Info: line -1 - symbol[0237] <= 'System.Byte[]'
Info: line -1 - symbol[0238] <= 'System.Byte[]'
Info: line -1 - symbol[0239] <= 'System.Byte[]'
Info: line -1 - symbol[023A] <= 'System.Byte[]'
Info: line -1 - symbol[023B] <= 'System.Byte[]'
Info: line -1 - symbol[023C] <= 'System.Byte[]'
Info: line -1 - symbol[023D] <= 'System.Byte[]'
Info: line -1 - symbol[023E] <= 'System.Byte[]'
Info: line -1 - symbol[023F] <= 'System.Byte[]'
Info: line -1 - symbol[0240] <= 'System.Byte[]'
Info: line -1 - symbol[0241] <= 'System.Byte[]'
Info: line -1 - symbol[0242] <= 'System.Byte[]'
Info: line -1 - symbol[0243] <= 'System.Byte[]'
Info: line -1 - symbol[0244] <= 'System.Byte[]'
Info: line -1 - symbol[0245] <= 'System.Byte[]'
Info: line -1 - symbol[0246] <= 'System.Byte[]'
Info: line -1 - symbol[0247] <= 'System.Byte[]'
Info: line -1 - symbol[0248] <= 'System.Byte[]'
Info: line -1 - symbol[0249] <= 'System.Byte[]'
Info: line -1 - symbol[024A] <= 'System.Byte[]'
Info: line -1 - symbol[024B] <= 'System.Byte[]'
Info: line -1 - symbol[024C] <= 'System.Byte[]'
Info: line -1 - symbol[024D] <= 'System.Byte[]'
Info: line -1 - symbol[024E] <= 'System.Byte[]'
Info: line -1 - symbol[024F] <= 'System.Byte[]'
Info: line -1 - symbol[0250] <= 'System.Byte[]'
Info: line -1 - symbol[0251] <= 'System.Byte[]'
Info: line -1 - symbol[0252] <= 'System.Byte[]'
Info: line -1 - symbol[0253] <= 'System.Byte[]'
Info: line -1 - symbol[0254] <= 'System.Byte[]'
Info: line -1 - symbol[0255] <= 'System.Byte[]'
Info: line -1 - symbol[0256] <= 'System.Byte[]'
Info: line -1 - symbol[0257] <= 'System.Byte[]'
Info: line -1 - symbol[0258] <= 'System.Byte[]'
Info: line -1 - symbol[0259] <= 'System.Byte[]'
Info: line -1 - symbol[025A] <= 'System.Byte[]'
Info: line -1 - symbol[025B] <= 'System.Byte[]'
Info: line -1 - symbol[025C] <= 'System.Byte[]'
Info: line -1 - symbol[025D] <= 'System.Byte[]'
Info: line -1 - symbol[025E] <= 'System.Byte[]'
Info: line -1 - symbol[025F] <= 'System.Byte[]'
Info: line -1 - symbol[0260] <= 'System.Byte[]'
Info: line -1 - symbol[0261] <= 'System.Byte[]'
Info: line -1 - symbol[0262] <= 'System.Byte[]'
Info: line -1 - symbol[0263] <= 'System.Byte[]'
Info: line -1 - symbol[0264] <= 'System.Byte[]'
Info: line -1 - symbol[0265] <= 'System.Byte[]'
Info: line -1 - symbol[0266] <= 'System.Byte[]'
Info: line -1 - symbol[0267] <= 'System.Byte[]'
Info: line -1 - symbol[0268] <= 'System.Byte[]'
Info: line -1 - symbol[0269] <= 'System.Byte[]'
Info: line -1 - symbol[026A] <= 'System.Byte[]'
Info: line -1 - symbol[026B] <= 'System.Byte[]'
Info: line -1 - symbol[026C] <= 'System.Byte[]'
Info: line -1 - symbol[026D] <= 'System.Byte[]'
Info: line -1 - symbol[026E] <= 'System.Byte[]'
Info: line -1 - symbol[026F] <= 'System.Byte[]'
Info: line -1 - symbol[0270] <= 'System.Byte[]'
Info: line -1 - symbol[0271] <= 'System.Byte[]'
Info: line -1 - symbol[0272] <= 'System.Byte[]'
Info: line -1 - symbol[0273] <= 'System.Byte[]'
Info: line -1 - symbol[0274] <= 'System.Byte[]'
Info: line -1 - symbol[0275] <= 'System.Byte[]'
Info: line -1 - symbol[0276] <= 'System.Byte[]'
Info: line -1 - symbol[0277] <= 'System.Byte[]'
Info: line -1 - symbol[0278] <= 'System.Byte[]'
Info: line -1 - symbol[0279] <= 'System.Byte[]'
Info: line -1 - symbol[027A] <= 'System.Byte[]'
Info: line -1 - symbol[027B] <= 'System.Byte[]'
Info: line -1 - symbol[027C] <= 'System.Byte[]'
Info: line -1 - symbol[027D] <= 'System.Byte[]'
Info: line -1 - symbol[027E] <= 'System.Byte[]'
Info: line -1 - symbol[027F] <= 'System.Byte[]'
Info: line -1 - symbol[0280] <= 'System.Byte[]'
Info: line -1 - symbol[0281] <= 'System.Byte[]'
Info: line -1 - symbol[0282] <= 'System.Byte[]'
Info: line -1 - symbol[0283] <= 'System.Byte[]'
Info: line -1 - symbol[0284] <= 'System.Byte[]'
Info: line -1 - symbol[0285] <= 'System.Byte[]'
Info: line -1 - symbol[0286] <= 'System.Byte[]'
Info: line -1 - symbol[0287] <= 'System.Byte[]'
Info: line -1 - symbol[0288] <= 'System.Byte[]'
Info: line -1 - symbol[0289] <= 'System.Byte[]'
Info: line -1 - symbol[028A] <= 'System.Byte[]'
Info: line -1 - symbol[028B] <= 'System.Byte[]'
Info: line -1 - symbol[028C] <= 'System.Byte[]'
Info: line -1 - symbol[028D] <= 'System.Byte[]'
Info: line -1 - symbol[028E] <= 'System.Byte[]'
Info: line -1 - symbol[028F] <= 'System.Byte[]'
Info: line -1 - symbol[0290] <= 'System.Byte[]'
Info: line -1 - symbol[0291] <= 'System.Byte[]'
Info: line -1 - symbol[0292] <= 'System.Byte[]'
Info: line -1 - symbol[0293] <= 'System.Byte[]'
Info: line -1 - symbol[0294] <= 'System.Byte[]'
Info: line -1 - symbol[0295] <= 'System.Byte[]'
Info: line -1 - symbol[0296] <= 'System.Byte[]'
Info: line -1 - symbol[0297] <= 'System.Byte[]'
Info: line -1 - symbol[0298] <= 'System.Byte[]'
Info: line -1 - symbol[0299] <= 'System.Byte[]'
Info: line -1 - symbol[029A] <= 'System.Byte[]'
Info: line -1 - symbol[029B] <= 'System.Byte[]'
Info: line -1 - symbol[029C] <= 'System.Byte[]'
Info: line -1 - symbol[029D] <= 'System.Byte[]'
Info: line -1 - symbol[029E] <= 'System.Byte[]'
Info: line -1 - symbol[029F] <= 'System.Byte[]'
Info: line -1 - symbol[02A0] <= 'System.Byte[]'
Info: line -1 - symbol[02A1] <= 'System.Byte[]'
Info: line -1 - symbol[02A2] <= 'System.Byte[]'
Info: line -1 - symbol[02A3] <= 'System.Byte[]'
Info: line -1 - symbol[02A4] <= 'System.Byte[]'
Info: line -1 - symbol[02A5] <= 'System.Byte[]'
Info: line -1 - symbol[02A6] <= 'System.Byte[]'
Info: line -1 - symbol[02A7] <= 'System.Byte[]'
Info: line -1 - symbol[02A8] <= 'System.Byte[]'
Info: line -1 - symbol[02A9] <= 'System.Byte[]'
Info: line -1 - symbol[02AA] <= 'System.Byte[]'
Info: line -1 - symbol[02AB] <= 'System.Byte[]'
Info: line -1 - symbol[02AC] <= 'System.Byte[]'
Info: line -1 - symbol[02AD] <= 'System.Byte[]'
Info: line -1 - symbol[02AE] <= 'System.Byte[]'
Info: line -1 - symbol[02AF] <= 'System.Byte[]'
Info: line -1 - symbol[02B0] <= 'System.Byte[]'
Info: line -1 - symbol[02B1] <= 'System.Byte[]'
Info: line -1 - symbol[02B2] <= 'System.Byte[]'
Info: line -1 - symbol[02B3] <= 'System.Byte[]'
Info: line -1 - symbol[02B4] <= 'System.Byte[]'
Info: line -1 - symbol[02B5] <= 'System.Byte[]'
Info: line -1 - symbol[02B6] <= 'System.Byte[]'
Info: line -1 - symbol[02B7] <= 'System.Byte[]'
Info: line -1 - symbol[02B8] <= 'System.Byte[]'
Info: line -1 - symbol[02B9] <= 'System.Byte[]'
Info: line -1 - symbol[02BA] <= 'System.Byte[]'
Info: line -1 - symbol[02BB] <= 'System.Byte[]'
Info: line -1 - symbol[02BC] <= 'System.Byte[]'
Info: line -1 - symbol[02BD] <= 'System.Byte[]'
Info: line -1 - symbol[02BE] <= 'System.Byte[]'
Info: line -1 - symbol[02BF] <= 'System.Byte[]'
Info: line -1 - symbol[02C0] <= 'System.Byte[]'
Info: line -1 - symbol[02C1] <= 'System.Byte[]'
Info: line -1 - symbol[02C2] <= 'System.Byte[]'
Info: line -1 - symbol[02C3] <= 'System.Byte[]'
Info: line -1 - symbol[02C4] <= 'System.Byte[]'
Info: line -1 - symbol[02C5] <= 'System.Byte[]'
Info: line -1 - symbol[02C6] <= 'System.Byte[]'
Info: line -1 - symbol[02C7] <= 'System.Byte[]'
Info: line -1 - symbol[02C8] <= 'System.Byte[]'
Info: line -1 - symbol[02C9] <= 'System.Byte[]'
Info: line -1 - symbol[02CA] <= 'System.Byte[]'
Info: line -1 - symbol[02CB] <= 'System.Byte[]'
Info: line -1 - symbol[02CC] <= 'System.Byte[]'
Info: line -1 - symbol[02CD] <= 'System.Byte[]'
Info: line -1 - symbol[02CE] <= 'System.Byte[]'
Info: line -1 - symbol[02CF] <= 'System.Byte[]'
Info: line -1 - symbol[02D0] <= 'System.Byte[]'
Info: line -1 - symbol[02D1] <= 'System.Byte[]'
Info: line -1 - symbol[02D2] <= 'System.Byte[]'
Info: line -1 - symbol[02D3] <= 'System.Byte[]'
Info: line -1 - symbol[02D4] <= 'System.Byte[]'
Info: line -1 - symbol[02D5] <= 'System.Byte[]'
Info: line -1 - symbol[02D6] <= 'System.Byte[]'
Info: line -1 - symbol[02D7] <= 'System.Byte[]'
Info: line -1 - symbol[02D8] <= 'System.Byte[]'
Info: line -1 - symbol[02D9] <= 'System.Byte[]'
Info: line -1 - symbol[02DA] <= 'System.Byte[]'
Info: line -1 - symbol[02DB] <= 'System.Byte[]'
Info: line -1 - symbol[02DC] <= 'System.Byte[]'
Info: line -1 - symbol[02DD] <= 'System.Byte[]'
Info: line -1 - symbol[02DE] <= 'System.Byte[]'
Info: line -1 - symbol[02DF] <= 'System.Byte[]'
Info: line -1 - symbol[02E0] <= 'System.Byte[]'
Info: line -1 - symbol[02E1] <= 'System.Byte[]'
Info: line -1 - symbol[02E2] <= 'System.Byte[]'
Info: line -1 - symbol[02E3] <= 'System.Byte[]'
Info: line -1 - symbol[02E4] <= 'System.Byte[]'
Info: line -1 - symbol[02E5] <= 'System.Byte[]'
Info: line -1 - symbol[02E6] <= 'System.Byte[]'
Info: line -1 - symbol[02E7] <= 'System.Byte[]'
Info: line -1 - symbol[02E8] <= 'System.Byte[]'
Info: line -1 - symbol[02E9] <= 'System.Byte[]'
Info: line -1 - symbol[02EA] <= 'System.Byte[]'
Info: line -1 - symbol[02EB] <= 'System.Byte[]'
Info: line -1 - symbol[02EC] <= 'System.Byte[]'
Info: line -1 - symbol[02ED] <= 'System.Byte[]'
Info: line -1 - symbol[02EE] <= 'System.Byte[]'
Info: line -1 - symbol[02EF] <= 'System.Byte[]'
Info: line -1 - symbol[02F0] <= 'System.Byte[]'
Info: line -1 - symbol[02F1] <= 'System.Byte[]'
Info: line -1 - symbol[02F2] <= 'System.Byte[]'
Info: line -1 - symbol[02F3] <= 'System.Byte[]'
Info: line -1 - symbol[02F4] <= 'System.Byte[]'
Info: line -1 - symbol[02F5] <= 'System.Byte[]'
Info: line -1 - symbol[02F6] <= 'System.Byte[]'
Info: line -1 - symbol[02F7] <= 'System.Byte[]'
Info: line -1 - symbol[02F8] <= 'System.Byte[]'
Info: line -1 - symbol[02F9] <= 'System.Byte[]'
Info: line -1 - symbol[02FA] <= 'System.Byte[]'
Info: line -1 - symbol[02FB] <= 'System.Byte[]'
Info: line -1 - symbol[02FC] <= 'System.Byte[]'
Info: line -1 - symbol[02FD] <= 'System.Byte[]'
Info: line -1 - symbol[02FE] <= 'System.Byte[]'
Info: line -1 - symbol[02FF] <= 'System.Byte[]'
Info: line -1 - symbol[0300] <= 'System.Byte[]'
Info: line -1 - symbol[0301] <= 'System.Byte[]'
Info: line -1 - symbol[0302] <= 'System.Byte[]'
Info: line -1 - symbol[0303] <= 'System.Byte[]'
Info: line -1 - symbol[0304] <= 'System.Byte[]'
Info: line -1 - symbol[0305] <= 'System.Byte[]'
Info: line -1 - symbol[0306] <= 'System.Byte[]'
Info: line -1 - symbol[0307] <= 'System.Byte[]'
Info: line -1 - symbol[0308] <= 'System.Byte[]'
Info: line -1 - symbol[0309] <= 'System.Byte[]'
Info: line -1 - symbol[030A] <= 'System.Byte[]'
Info: line -1 - symbol[030B] <= 'System.Byte[]'
Info: line -1 - symbol[030C] <= 'System.Byte[]'
Info: line -1 - symbol[030D] <= 'System.Byte[]'
Info: line -1 - symbol[030E] <= 'System.Byte[]'
Info: line -1 - symbol[030F] <= 'System.Byte[]'
Info: line -1 - symbol[0310] <= 'System.Byte[]'
Info: line -1 - symbol[0311] <= 'System.Byte[]'
Info: line -1 - symbol[0312] <= 'System.Byte[]'
Info: line -1 - symbol[0313] <= 'System.Byte[]'
Info: line -1 - symbol[0314] <= 'System.Byte[]'
Info: line -1 - symbol[0315] <= 'System.Byte[]'
Info: line -1 - symbol[0316] <= 'System.Byte[]'
Info: line -1 - symbol[0317] <= 'System.Byte[]'
Info: line -1 - symbol[0318] <= 'System.Byte[]'
Info: line -1 - symbol[0319] <= 'System.Byte[]'
Info: line -1 - symbol[031A] <= 'System.Byte[]'
Info: line -1 - symbol[031B] <= 'System.Byte[]'
Info: line -1 - symbol[031C] <= 'System.Byte[]'
Info: line -1 - symbol[031D] <= 'System.Byte[]'
Info: line -1 - symbol[031E] <= 'System.Byte[]'
Info: line -1 - symbol[031F] <= 'System.Byte[]'
Info: line -1 - symbol[0320] <= 'System.Byte[]'
Info: line -1 - symbol[0321] <= 'System.Byte[]'
Info: line -1 - symbol[0322] <= 'System.Byte[]'
Info: line -1 - symbol[0323] <= 'System.Byte[]'
Info: line -1 - symbol[0324] <= 'System.Byte[]'
Info: line -1 - symbol[0325] <= 'System.Byte[]'
Info: line -1 - symbol[0326] <= 'System.Byte[]'
Info: line -1 - symbol[0327] <= 'System.Byte[]'
Info: line -1 - symbol[0328] <= 'System.Byte[]'
Info: line -1 - symbol[0329] <= 'System.Byte[]'
Info: line -1 - symbol[032A] <= 'System.Byte[]'
Info: line -1 - symbol[032B] <= 'System.Byte[]'
Info: line -1 - symbol[032C] <= 'System.Byte[]'
Info: line -1 - symbol[032D] <= 'System.Byte[]'
Info: line -1 - symbol[032E] <= 'System.Byte[]'
Info: line -1 - symbol[032F] <= 'System.Byte[]'
Info: line -1 - symbol[0330] <= 'System.Byte[]'
Info: line -1 - symbol[0331] <= 'System.Byte[]'
Info: line -1 - symbol[0332] <= 'System.Byte[]'
Info: line -1 - symbol[0333] <= 'System.Byte[]'
Info: line -1 - symbol[0334] <= 'System.Byte[]'
Info: line -1 - symbol[0335] <= 'System.Byte[]'
Info: line -1 - symbol[0336] <= 'System.Byte[]'
Info: line -1 - symbol[0337] <= 'System.Byte[]'
Info: line -1 - symbol[0338] <= 'System.Byte[]'
Info: line -1 - symbol[0339] <= 'System.Byte[]'
Info: line -1 - symbol[033A] <= 'System.Byte[]'
Info: line -1 - symbol[033B] <= 'System.Byte[]'
Info: line -1 - symbol[033C] <= 'System.Byte[]'
Info: line -1 - symbol[033D] <= 'System.Byte[]'
Info: line -1 - symbol[033E] <= 'System.Byte[]'
Info: line -1 - symbol[033F] <= 'System.Byte[]'
Info: line -1 - symbol[0340] <= 'System.Byte[]'
Info: line -1 - symbol[0341] <= 'System.Byte[]'
Info: line -1 - symbol[0342] <= 'System.Byte[]'
Info: line -1 - symbol[0343] <= 'System.Byte[]'
Info: line -1 - symbol[0344] <= 'System.Byte[]'
Info: line -1 - symbol[0345] <= 'System.Byte[]'
Info: line -1 - symbol[0346] <= 'System.Byte[]'
Info: line -1 - symbol[0347] <= 'System.Byte[]'
Info: line -1 - symbol[0348] <= 'System.Byte[]'
Info: line -1 - symbol[0349] <= 'System.Byte[]'
Info: line -1 - symbol[034A] <= 'System.Byte[]'
Info: line -1 - symbol[034B] <= 'System.Byte[]'
Info: line -1 - symbol[034C] <= 'System.Byte[]'
Info: line -1 - symbol[034D] <= 'System.Byte[]'
Info: line -1 - symbol[034E] <= 'System.Byte[]'
Info: line -1 - symbol[034F] <= 'System.Byte[]'
Info: line -1 - symbol[0350] <= 'System.Byte[]'
Info: line -1 - symbol[0351] <= 'System.Byte[]'
Info: line -1 - symbol[0352] <= 'System.Byte[]'
Info: line -1 - symbol[0353] <= 'System.Byte[]'
Info: line -1 - symbol[0354] <= 'System.Byte[]'
Info: line -1 - symbol[0355] <= 'System.Byte[]'
Info: line -1 - symbol[0356] <= 'System.Byte[]'
Info: line -1 - symbol[0357] <= 'System.Byte[]'
Info: line -1 - symbol[0358] <= 'System.Byte[]'
Info: line -1 - symbol[0359] <= 'System.Byte[]'
Info: line -1 - symbol[035A] <= 'System.Byte[]'
Info: line -1 - symbol[035B] <= 'System.Byte[]'
Info: line -1 - symbol[035C] <= 'System.Byte[]'
Info: line -1 - symbol[035D] <= 'System.Byte[]'
Info: line -1 - symbol[035E] <= 'System.Byte[]'
Info: line -1 - symbol[035F] <= 'System.Byte[]'
Info: line -1 - symbol[0360] <= 'System.Byte[]'
Info: line -1 - symbol[0361] <= 'System.Byte[]'
Info: line -1 - symbol[0362] <= 'System.Byte[]'
Info: line -1 - symbol[0363] <= 'System.Byte[]'
Info: line -1 - symbol[0364] <= 'System.Byte[]'
Info: line -1 - symbol[0365] <= 'System.Byte[]'
Info: line -1 - symbol[0366] <= 'System.Byte[]'
Info: line -1 - symbol[0367] <= 'System.Byte[]'
Info: line -1 - symbol[0368] <= 'System.Byte[]'
Info: line -1 - symbol[0369] <= 'System.Byte[]'
Info: line -1 - symbol[036A] <= 'System.Byte[]'
Info: line -1 - symbol[036B] <= 'System.Byte[]'
Info: line -1 - symbol[036C] <= 'System.Byte[]'
Info: line -1 - symbol[036D] <= 'System.Byte[]'
Info: line -1 - symbol[036E] <= 'System.Byte[]'
Info: line -1 - symbol[036F] <= 'System.Byte[]'
Info: line -1 - symbol[0370] <= 'System.Byte[]'
Info: line -1 - symbol[0371] <= 'System.Byte[]'
Info: line -1 - symbol[0372] <= 'System.Byte[]'
Info: line -1 - symbol[0373] <= 'System.Byte[]'
Info: line -1 - symbol[0374] <= 'System.Byte[]'
Info: line -1 - symbol[0375] <= 'System.Byte[]'
Info: line -1 - symbol[0376] <= 'System.Byte[]'
Info: line -1 - symbol[0377] <= 'System.Byte[]'
Info: line -1 - symbol[0378] <= 'System.Byte[]'
Info: line -1 - symbol[0379] <= 'System.Byte[]'
Info: line -1 - symbol[037A] <= 'System.Byte[]'
Info: line -1 - symbol[037B] <= 'System.Byte[]'
Info: line -1 - symbol[037C] <= 'System.Byte[]'
Info: line -1 - symbol[037D] <= 'System.Byte[]'
Info: line -1 - symbol[037E] <= 'System.Byte[]'
Info: line -1 - symbol[037F] <= 'System.Byte[]'
Info: line -1 - symbol[0380] <= 'System.Byte[]'
Info: line -1 - symbol[0381] <= 'System.Byte[]'
Info: line -1 - symbol[0382] <= 'System.Byte[]'
Info: line -1 - symbol[0383] <= 'System.Byte[]'
Info: line -1 - symbol[0384] <= 'System.Byte[]'
Info: line -1 - symbol[0385] <= 'System.Byte[]'
Info: line -1 - symbol[0386] <= 'System.Byte[]'
Info: line -1 - symbol[0387] <= 'System.Byte[]'
Info: line -1 - symbol[0388] <= 'System.Byte[]'
Info: line -1 - symbol[0389] <= 'System.Byte[]'
Info: line -1 - symbol[038A] <= 'System.Byte[]'
Info: line -1 - symbol[038B] <= 'System.Byte[]'
Info: line -1 - symbol[038C] <= 'System.Byte[]'
Info: line -1 - symbol[038D] <= 'System.Byte[]'
Info: line -1 - symbol[038E] <= 'System.Byte[]'
Info: line -1 - symbol[038F] <= 'System.Byte[]'
Info: line -1 - symbol[0390] <= 'System.Byte[]'
Info: line -1 - symbol[0391] <= 'System.Byte[]'
Info: line -1 - symbol[0392] <= 'System.Byte[]'
Info: line -1 - symbol[0393] <= 'System.Byte[]'
Info: line -1 - symbol[0394] <= 'System.Byte[]'
Info: line -1 - symbol[0395] <= 'System.Byte[]'
Info: line -1 - symbol[0396] <= 'System.Byte[]'
Info: line -1 - symbol[0397] <= 'System.Byte[]'
Info: line -1 - symbol[0398] <= 'System.Byte[]'
Info: line -1 - symbol[0399] <= 'System.Byte[]'
Info: line -1 - symbol[039A] <= 'System.Byte[]'
Info: line -1 - symbol[039B] <= 'System.Byte[]'
Info: line -1 - symbol[039C] <= 'System.Byte[]'
Info: line -1 - symbol[039D] <= 'System.Byte[]'
Info: line -1 - symbol[039E] <= 'System.Byte[]'
Info: line -1 - symbol[039F] <= 'System.Byte[]'
Info: line -1 - symbol[03A0] <= 'System.Byte[]'
Info: line -1 - symbol[03A1] <= 'System.Byte[]'
Info: line -1 - symbol[03A2] <= 'System.Byte[]'
Info: line -1 - symbol[03A3] <= 'System.Byte[]'
Info: line -1 - symbol[03A4] <= 'System.Byte[]'
Info: line -1 - symbol[03A5] <= 'System.Byte[]'
Info: line -1 - symbol[03A6] <= 'System.Byte[]'
Info: line -1 - symbol[03A7] <= 'System.Byte[]'
Info: line -1 - symbol[03A8] <= 'System.Byte[]'
Info: line -1 - symbol[03A9] <= 'System.Byte[]'
Info: line -1 - symbol[03AA] <= 'System.Byte[]'
Info: line -1 - symbol[03AB] <= 'System.Byte[]'
Info: line -1 - symbol[03AC] <= 'System.Byte[]'
Info: line -1 - symbol[03AD] <= 'System.Byte[]'
Info: line -1 - symbol[03AE] <= 'System.Byte[]'
Info: line -1 - symbol[03AF] <= 'System.Byte[]'
Info: line -1 - symbol[03B0] <= 'System.Byte[]'
Info: line -1 - symbol[03B1] <= 'System.Byte[]'
Info: line -1 - symbol[03B2] <= 'System.Byte[]'
Info: line -1 - symbol[03B3] <= 'System.Byte[]'
Info: line -1 - symbol[03B4] <= 'System.Byte[]'
Info: line -1 - symbol[03B5] <= 'System.Byte[]'
Info: line -1 - symbol[03B6] <= 'System.Byte[]'
Info: line -1 - symbol[03B7] <= 'System.Byte[]'
Info: line -1 - symbol[03B8] <= 'System.Byte[]'
Info: line -1 - symbol[03B9] <= 'System.Byte[]'
Info: line -1 - symbol[03BA] <= 'System.Byte[]'
Info: line -1 - symbol[03BB] <= 'System.Byte[]'
Info: line -1 - symbol[03BC] <= 'System.Byte[]'
Info: line -1 - symbol[03BD] <= 'System.Byte[]'
Info: line -1 - symbol[03BE] <= 'System.Byte[]'
Info: line -1 - symbol[03BF] <= 'System.Byte[]'
Info: line -1 - symbol[03C0] <= 'System.Byte[]'
Info: line -1 - symbol[03C1] <= 'System.Byte[]'
Info: line -1 - symbol[03C2] <= 'System.Byte[]'
Info: line -1 - symbol[03C3] <= 'System.Byte[]'
Info: line -1 - symbol[03C4] <= 'System.Byte[]'
Info: line -1 - symbol[03C5] <= 'System.Byte[]'
Info: line -1 - symbol[03C6] <= 'System.Byte[]'
Info: line -1 - symbol[03C7] <= 'System.Byte[]'
Info: line -1 - symbol[03C8] <= 'System.Byte[]'
Info: line -1 - symbol[03C9] <= 'System.Byte[]'
Info: line -1 - symbol[03CA] <= 'System.Byte[]'
Info: line -1 - symbol[03CB] <= 'System.Byte[]'
Info: line -1 - symbol[03CC] <= 'System.Byte[]'
Info: line -1 - symbol[03CD] <= 'System.Byte[]'
Info: line -1 - symbol[03CE] <= 'System.Byte[]'
Info: line -1 - symbol[03CF] <= 'System.Byte[]'
Info: line -1 - symbol[03D0] <= 'System.Byte[]'
Info: line -1 - symbol[03D1] <= 'System.Byte[]'
Info: line -1 - symbol[03D2] <= 'System.Byte[]'
Info: line -1 - symbol[03D3] <= 'System.Byte[]'
Info: line -1 - symbol[03D4] <= 'System.Byte[]'
Info: line -1 - symbol[03D5] <= 'System.Byte[]'
Info: line -1 - symbol[03D6] <= 'System.Byte[]'
Info: line -1 - symbol[03D7] <= 'System.Byte[]'
Info: line -1 - symbol[03D8] <= 'System.Byte[]'
Info: line -1 - symbol[03D9] <= 'System.Byte[]'
Info: line -1 - symbol[03DA] <= 'System.Byte[]'
Info: line -1 - symbol[03DB] <= 'System.Byte[]'
Info: line -1 - symbol[03DC] <= 'System.Byte[]'
Info: line -1 - symbol[03DD] <= 'System.Byte[]'
Info: line -1 - symbol[03DE] <= 'System.Byte[]'
Info: line -1 - symbol[03DF] <= 'System.Byte[]'
Info: line -1 - symbol[03E0] <= 'System.Byte[]'
Info: line -1 - symbol[03E1] <= 'System.Byte[]'
Info: line -1 - symbol[03E2] <= 'System.Byte[]'
Info: line -1 - symbol[03E3] <= 'System.Byte[]'
Info: line -1 - symbol[03E4] <= 'System.Byte[]'
Info: line -1 - symbol[03E5] <= 'System.Byte[]'
Info: line -1 - symbol[03E6] <= 'System.Byte[]'
Info: line -1 - symbol[03E7] <= 'System.Byte[]'
Info: line -1 - symbol[03E8] <= 'System.Byte[]'
Info: line -1 - symbol[03E9] <= 'System.Byte[]'
Info: line -1 - symbol[03EA] <= 'System.Byte[]'
Info: line -1 - symbol[03EB] <= 'System.Byte[]'
Info: line -1 - symbol[03EC] <= 'System.Byte[]'
Info: line -1 - symbol[03ED] <= 'System.Byte[]'
Info: line -1 - symbol[03EE] <= 'System.Byte[]'
Info: line -1 - symbol[03EF] <= 'System.Byte[]'
Info: line -1 - symbol[03F0] <= 'System.Byte[]'
Info: line -1 - symbol[03F1] <= 'System.Byte[]'
Info: line -1 - symbol[03F2] <= 'System.Byte[]'
Info: line -1 - symbol[03F3] <= 'System.Byte[]'
Info: line -1 - symbol[03F4] <= 'System.Byte[]'
Info: line -1 - symbol[03F5] <= 'System.Byte[]'
Info: line -1 - symbol[03F6] <= 'System.Byte[]'
Info: line -1 - symbol[03F7] <= 'System.Byte[]'
Info: line -1 - symbol[03F8] <= 'System.Byte[]'
Info: line -1 - symbol[03F9] <= 'System.Byte[]'
Info: line -1 - symbol[03FA] <= 'System.Byte[]'
Info: line -1 - symbol[03FB] <= 'System.Byte[]'
Info: line -1 - symbol[03FC] <= 'System.Byte[]'
Info: line -1 - symbol[03FD] <= 'System.Byte[]'
Info: line -1 - symbol[03FE] <= 'System.Byte[]'
Info: line -1 - symbol[03FF] <= 'System.Byte[]'
Field 'r_p' 15 .. 12
Field 'r_a' 11 .. 9
Field 'r_x' 8 .. 6
Field 'r_y' 5 .. 3
Field 'r_s' 2 .. 0
Field 'data16' 15 .. 0 overlaps with: r_p, r_a, r_x, r_y, r_s
Info: line 9 - code[0000] <= '0000_000_000_000_000'
Info: line -1 - symbol[0000] <= 'System.Byte[]'
Info: line 9 - code[0001] <= '0011_000_000_000_000'
Info: line -1 - symbol[0001] <= 'System.Byte[]'
Info: line 9 - code[0002] <= '0000000000110110'
Info: line -1 - symbol[0002] <= 'System.Byte[]'
Info: line 9 - code[0008] <= '0000_111_000_000_011'
Info: line -1 - symbol[0008] <= 'System.Byte[]'
Info: line 9 - code[0009] <= '0000_000_111_000_011'
Info: line -1 - symbol[0009] <= 'System.Byte[]'
Info: line 9 - code[000A] <= '0000_000_000_111_011'
Info: line -1 - symbol[000A] <= 'System.Byte[]'
Info: line 9 - code[000B] <= '0110_000_000_000_011'
Info: line -1 - symbol[000B] <= 'System.Byte[]'
Info: line 9 - code[000C] <= '0010_000_000_000_000'
Info: line -1 - symbol[000C] <= 'System.Byte[]'
Info: line 9 - code[000D] <= '0000001000111110'
Info: line -1 - symbol[000D] <= 'System.Byte[]'
Info: line 9 - code[000E] <= '0000_000_000_111_011'
Info: line -1 - symbol[000E] <= 'System.Byte[]'
Info: line 9 - code[000F] <= '0000_000_111_000_011'
Info: line -1 - symbol[000F] <= 'System.Byte[]'
Info: line 9 - code[0010] <= '0110_000_000_000_011'
Info: line -1 - symbol[0010] <= 'System.Byte[]'
Info: line 9 - code[0011] <= '0010_000_000_000_000'
Info: line -1 - symbol[0011] <= 'System.Byte[]'
Info: line 9 - code[0012] <= '0000001001001010'
Info: line -1 - symbol[0012] <= 'System.Byte[]'
Info: line 9 - code[0013] <= '0000_100_110_110_000'
Info: line -1 - symbol[0013] <= 'System.Byte[]'
Info: line 9 - code[0014] <= '0001_110_000_000_000'
Info: line -1 - symbol[0014] <= 'System.Byte[]'
Info: line 9 - code[0015] <= '1111111101111111'
Info: line -1 - symbol[0015] <= 'System.Byte[]'
Info: line 9 - code[0016] <= '0000_111_110_110_000'
Info: line -1 - symbol[0016] <= 'System.Byte[]'
Info: line 9 - code[0017] <= '0110_000_000_000_011'
Info: line -1 - symbol[0017] <= 'System.Byte[]'
Info: line 9 - code[0018] <= '0010_000_000_000_000'
Info: line -1 - symbol[0018] <= 'System.Byte[]'
Info: line 9 - code[0019] <= '0000001000111010'
Info: line -1 - symbol[0019] <= 'System.Byte[]'
Info: line 9 - code[001A] <= '0000_000_001_000_010'
Info: line -1 - symbol[001A] <= 'System.Byte[]'
Info: line 9 - code[001B] <= '0000_000_000_001_010'
Info: line -1 - symbol[001B] <= 'System.Byte[]'
Info: line 9 - code[001C] <= '1011_000_000_000_000'
Info: line -1 - symbol[001C] <= 'System.Byte[]'
Info: line 9 - code[001D] <= '0000000000000011'
Info: line -1 - symbol[001D] <= 'System.Byte[]'
Info: line 9 - code[001E] <= '0010_000_000_000_000'
Info: line -1 - symbol[001E] <= 'System.Byte[]'
Info: line 9 - code[001F] <= '0000000000000011'
Info: line -1 - symbol[001F] <= 'System.Byte[]'
Info: line 9 - code[0020] <= '1101_000_000_000_000'
Info: line -1 - symbol[0020] <= 'System.Byte[]'
Info: line 9 - code[0021] <= '0000000000000110'
Info: line -1 - symbol[0021] <= 'System.Byte[]'
Info: line 9 - code[0022] <= '0110_000_000_000_011'
Info: line -1 - symbol[0022] <= 'System.Byte[]'
Info: line 9 - code[0023] <= '0010_000_000_000_000'
Info: line -1 - symbol[0023] <= 'System.Byte[]'
Info: line 9 - code[0024] <= '0000000110110100'
Info: line -1 - symbol[0024] <= 'System.Byte[]'
Info: line 9 - code[0025] <= '0010_000_000_000_000'
Info: line -1 - symbol[0025] <= 'System.Byte[]'
Info: line 9 - code[0026] <= '0000000000001011'
Info: line -1 - symbol[0026] <= 'System.Byte[]'
Info: line 9 - code[0027] <= '0110_000_000_000_011'
Info: line -1 - symbol[0027] <= 'System.Byte[]'
Info: line 9 - code[0028] <= '0010_000_000_000_000'
Info: line -1 - symbol[0028] <= 'System.Byte[]'
Info: line 9 - code[0029] <= '0000001000101010'
Info: line -1 - symbol[0029] <= 'System.Byte[]'
Info: line 9 - code[002A] <= '0110_000_000_000_011'
Info: line -1 - symbol[002A] <= 'System.Byte[]'
Info: line 9 - code[002B] <= '0010_000_000_000_000'
Info: line -1 - symbol[002B] <= 'System.Byte[]'
Info: line 9 - code[002C] <= '0000001000110000'
Info: line -1 - symbol[002C] <= 'System.Byte[]'
Info: line 9 - code[002D] <= '0000_100_110_110_000'
Info: line -1 - symbol[002D] <= 'System.Byte[]'
Info: line 9 - code[002E] <= '0001_001_000_000_000'
Info: line -1 - symbol[002E] <= 'System.Byte[]'
Info: line 9 - code[002F] <= '0000000010000000'
Info: line -1 - symbol[002F] <= 'System.Byte[]'
Info: line 9 - code[0030] <= '0000_111_110_110_000'
Info: line -1 - symbol[0030] <= 'System.Byte[]'
Info: line 9 - code[0031] <= '0000_000_000_100_010'
Info: line -1 - symbol[0031] <= 'System.Byte[]'
Info: line 9 - code[0032] <= '0000_000_100_000_010'
Info: line -1 - symbol[0032] <= 'System.Byte[]'
Info: line 9 - code[0033] <= '0000_100_000_000_010'
Info: line -1 - symbol[0033] <= 'System.Byte[]'
Info: line 9 - code[0034] <= '0000_000_000_000_010'
Info: line -1 - symbol[0034] <= 'System.Byte[]'
Info: line 9 - code[0035] <= '0100_000_000_000_010'
Info: line -1 - symbol[0035] <= 'System.Byte[]'
Info: line 9 - code[0036] <= '0110_000_000_000_011'
Info: line -1 - symbol[0036] <= 'System.Byte[]'
Info: line 9 - code[0037] <= '0010_000_000_000_000'
Info: line -1 - symbol[0037] <= 'System.Byte[]'
Info: line 9 - code[0038] <= '0000000101000110'
Info: line -1 - symbol[0038] <= 'System.Byte[]'
Info: line 9 - code[0039] <= '0001_000_100_000_000'
Info: line -1 - symbol[0039] <= 'System.Byte[]'
Info: line 9 - code[003A] <= '0000001010000101'
Info: line -1 - symbol[003A] <= 'System.Byte[]'
Info: line 9 - code[003B] <= '0110_000_000_000_011'
Info: line -1 - symbol[003B] <= 'System.Byte[]'
Info: line 9 - code[003C] <= '0010_000_000_000_000'
Info: line -1 - symbol[003C] <= 'System.Byte[]'
Info: line 9 - code[003D] <= '0000001000100110'
Info: line -1 - symbol[003D] <= 'System.Byte[]'
Info: line 9 - code[003E] <= '0110_111_111_111_111'
Info: line -1 - symbol[003E] <= 'System.Byte[]'
Info: line 9 - code[003F] <= '0110_000_000_000_011'
Info: line -1 - symbol[003F] <= 'System.Byte[]'
Info: line 9 - code[0040] <= '0010_000_000_000_000'
Info: line -1 - symbol[0040] <= 'System.Byte[]'
Info: line 9 - code[0041] <= '0000000011100100'
Info: line -1 - symbol[0041] <= 'System.Byte[]'
Info: line 9 - code[0042] <= '0001_000_100_000_000'
Info: line -1 - symbol[0042] <= 'System.Byte[]'
Info: line 9 - code[0043] <= '0000001010000101'
Info: line -1 - symbol[0043] <= 'System.Byte[]'
Info: line 9 - code[0044] <= '0110_000_000_000_011'
Info: line -1 - symbol[0044] <= 'System.Byte[]'
Info: line 9 - code[0045] <= '0010_000_000_000_000'
Info: line -1 - symbol[0045] <= 'System.Byte[]'
Info: line 9 - code[0046] <= '0000000100101111'
Info: line -1 - symbol[0046] <= 'System.Byte[]'
Info: line 9 - code[0047] <= '0000_111_111_111_111'
Info: line -1 - symbol[0047] <= 'System.Byte[]'
Info: line 9 - code[0048] <= '0001_000_000_100_000'
Info: line -1 - symbol[0048] <= 'System.Byte[]'
Info: line 9 - code[0049] <= '1111111101000000'
Info: line -1 - symbol[0049] <= 'System.Byte[]'
Info: line 9 - code[004A] <= '0001_100_100_000_000'
Info: line -1 - symbol[004A] <= 'System.Byte[]'
Info: line 9 - code[004B] <= '0000000000000000'
Info: line -1 - symbol[004B] <= 'System.Byte[]'
Info: line 9 - code[004C] <= '0000_111_110_110_000'
Info: line -1 - symbol[004C] <= 'System.Byte[]'
Info: line 9 - code[004D] <= '0001_000_001_000_000'
Info: line -1 - symbol[004D] <= 'System.Byte[]'
Info: line 9 - code[004E] <= '0000000000010000'
Info: line -1 - symbol[004E] <= 'System.Byte[]'
Info: line 9 - code[004F] <= '1010_000_000_000_000'
Info: line -1 - symbol[004F] <= 'System.Byte[]'
Info: line 9 - code[0050] <= '0000000000000011'
Info: line -1 - symbol[0050] <= 'System.Byte[]'
Info: line 9 - code[0051] <= '0010_000_010_000_000'
Info: line -1 - symbol[0051] <= 'System.Byte[]'
Warning: value 11111111111111111111111111111010 truncated to value 1111111111111010 in line 116.
Info: line 9 - code[0052] <= '1111111111111010'
Info: line -1 - symbol[0052] <= 'System.Byte[]'
Info: line 9 - code[0053] <= '0110_111_111_111_111'
Info: line -1 - symbol[0053] <= 'System.Byte[]'
Info: line 9 - code[0054] <= '0110_000_000_000_011'
Info: line -1 - symbol[0054] <= 'System.Byte[]'
Info: line 9 - code[0055] <= '0010_000_000_000_000'
Info: line -1 - symbol[0055] <= 'System.Byte[]'
Info: line 9 - code[0056] <= '0000000000101010'
Info: line -1 - symbol[0056] <= 'System.Byte[]'
Info: line 9 - code[0057] <= '1000_000_000_000_000'
Info: line -1 - symbol[0057] <= 'System.Byte[]'
Info: line 9 - code[0058] <= '0000000000010100'
Info: line -1 - symbol[0058] <= 'System.Byte[]'
Info: line 9 - code[0059] <= '0110_000_000_000_011'
Info: line -1 - symbol[0059] <= 'System.Byte[]'
Info: line 9 - code[005A] <= '0010_000_000_000_000'
Info: line -1 - symbol[005A] <= 'System.Byte[]'
Info: line 9 - code[005B] <= '0000000010000011'
Info: line -1 - symbol[005B] <= 'System.Byte[]'
Info: line 9 - code[005C] <= '0110_000_000_000_011'
Info: line -1 - symbol[005C] <= 'System.Byte[]'
Info: line 9 - code[005D] <= '0010_000_000_000_000'
Info: line -1 - symbol[005D] <= 'System.Byte[]'
Info: line 9 - code[005E] <= '0000000000000101'
Info: line -1 - symbol[005E] <= 'System.Byte[]'
Info: line 9 - code[005F] <= '1000_000_000_000_000'
Info: line -1 - symbol[005F] <= 'System.Byte[]'
Info: line 9 - code[0060] <= '0000000000001100'
Info: line -1 - symbol[0060] <= 'System.Byte[]'
Info: line 9 - code[0061] <= '0010_000_000_000_000'
Info: line -1 - symbol[0061] <= 'System.Byte[]'
Warning: value 11111111111111111111111111100110 truncated to value 1111111111100110 in line 141.
Info: line 9 - code[0062] <= '1111111111100110'
Info: line -1 - symbol[0062] <= 'System.Byte[]'
Info: line 9 - code[0063] <= '0110_000_000_000_011'
Info: line -1 - symbol[0063] <= 'System.Byte[]'
Info: line 9 - code[0064] <= '0010_000_000_000_000'
Info: line -1 - symbol[0064] <= 'System.Byte[]'
Info: line 9 - code[0065] <= '0000000011011001'
Info: line -1 - symbol[0065] <= 'System.Byte[]'
Info: line 9 - code[0066] <= '1000_000_000_000_000'
Info: line -1 - symbol[0066] <= 'System.Byte[]'
Info: line 9 - code[0067] <= '0000000000000100'
Info: line -1 - symbol[0067] <= 'System.Byte[]'
Info: line 9 - code[0068] <= '0001_100_000_000_000'
Info: line -1 - symbol[0068] <= 'System.Byte[]'
Info: line 9 - code[0069] <= '1111111111111111'
Info: line -1 - symbol[0069] <= 'System.Byte[]'
Info: line 9 - code[006A] <= '0000_011_000_000_000'
Info: line -1 - symbol[006A] <= 'System.Byte[]'
Info: line 9 - code[006B] <= '0100_000_000_000_010'
Info: line -1 - symbol[006B] <= 'System.Byte[]'
Info: line 9 - code[006C] <= '0001_000_000_100_000'
Info: line -1 - symbol[006C] <= 'System.Byte[]'
Info: line 9 - code[006D] <= '0000001001101100'
Info: line -1 - symbol[006D] <= 'System.Byte[]'
Info: line 9 - code[006E] <= '0001_110_000_000_000'
Info: line -1 - symbol[006E] <= 'System.Byte[]'
Info: line 9 - code[006F] <= '1111111111111111'
Info: line -1 - symbol[006F] <= 'System.Byte[]'
Info: line 9 - code[0070] <= '1001_000_000_000_000'
Info: line -1 - symbol[0070] <= 'System.Byte[]'
Info: line 9 - code[0071] <= '0000000001101101'
Info: line -1 - symbol[0071] <= 'System.Byte[]'
Info: line 9 - code[0072] <= '0000_111_000_000_011'
Info: line -1 - symbol[0072] <= 'System.Byte[]'
Info: line 9 - code[0073] <= '0001_000_000_100_000'
Info: line -1 - symbol[0073] <= 'System.Byte[]'
Info: line 9 - code[0074] <= '0000001001110101'
Info: line -1 - symbol[0074] <= 'System.Byte[]'
Info: line 9 - code[0075] <= '0110_000_000_000_011'
Info: line -1 - symbol[0075] <= 'System.Byte[]'
Info: line 9 - code[0076] <= '0010_000_000_000_000'
Info: line -1 - symbol[0076] <= 'System.Byte[]'
Info: line 9 - code[0077] <= '0000000001100111'
Info: line -1 - symbol[0077] <= 'System.Byte[]'
Info: line 9 - code[0078] <= '0000_100_000_000_010'
Info: line -1 - symbol[0078] <= 'System.Byte[]'
Info: line 9 - code[0079] <= '0110_000_000_000_011'
Info: line -1 - symbol[0079] <= 'System.Byte[]'
Info: line 9 - code[007A] <= '0010_000_000_000_000'
Info: line -1 - symbol[007A] <= 'System.Byte[]'
Info: line 9 - code[007B] <= '0000000001110011'
Info: line -1 - symbol[007B] <= 'System.Byte[]'
Info: line 9 - code[007C] <= '0001_000_000_100_000'
Info: line -1 - symbol[007C] <= 'System.Byte[]'
Info: line 9 - code[007D] <= '0000001010001011'
Info: line -1 - symbol[007D] <= 'System.Byte[]'
Info: line 9 - code[007E] <= '0010_000_000_000_000'
Info: line -1 - symbol[007E] <= 'System.Byte[]'
Info: line 9 - code[007F] <= '0000000001011111'
Info: line -1 - symbol[007F] <= 'System.Byte[]'
Info: line 9 - code[0080] <= '0110_000_000_000_011'
Info: line -1 - symbol[0080] <= 'System.Byte[]'
Info: line 9 - code[0081] <= '0010_000_000_000_000'
Info: line -1 - symbol[0081] <= 'System.Byte[]'
Info: line 9 - code[0082] <= '0000000010101100'
Info: line -1 - symbol[0082] <= 'System.Byte[]'
Info: line 9 - code[0083] <= '0000_111_000_000_011'
Info: line -1 - symbol[0083] <= 'System.Byte[]'
Info: line 9 - code[0084] <= '0110_000_000_000_011'
Info: line -1 - symbol[0084] <= 'System.Byte[]'
Info: line 9 - code[0085] <= '0010_000_000_000_000'
Info: line -1 - symbol[0085] <= 'System.Byte[]'
Info: line 9 - code[0086] <= '0000000001100001'
Info: line -1 - symbol[0086] <= 'System.Byte[]'
Info: line 9 - code[0087] <= '0000_100_000_000_110'
Info: line -1 - symbol[0087] <= 'System.Byte[]'
Info: line 9 - code[0088] <= '0001_001_000_000_000'
Info: line -1 - symbol[0088] <= 'System.Byte[]'
Info: line 9 - code[0089] <= '0000000000001101'
Info: line -1 - symbol[0089] <= 'System.Byte[]'
Info: line 9 - code[008A] <= '1001_000_000_000_000'
Info: line -1 - symbol[008A] <= 'System.Byte[]'
Info: line 9 - code[008B] <= '0000000000100101'
Info: line -1 - symbol[008B] <= 'System.Byte[]'
Info: line 9 - code[008C] <= '0000_100_000_000_110'
Info: line -1 - symbol[008C] <= 'System.Byte[]'
Info: line 9 - code[008D] <= '0001_001_000_000_000'
Info: line -1 - symbol[008D] <= 'System.Byte[]'
Info: line 9 - code[008E] <= '0000000000000011'
Info: line -1 - symbol[008E] <= 'System.Byte[]'
Info: line 9 - code[008F] <= '1001_000_000_000_000'
Info: line -1 - symbol[008F] <= 'System.Byte[]'
Info: line 9 - code[0090] <= '0000000000011011'
Info: line -1 - symbol[0090] <= 'System.Byte[]'
Info: line 9 - code[0091] <= '0000_100_000_000_110'
Info: line -1 - symbol[0091] <= 'System.Byte[]'
Info: line 9 - code[0092] <= '0001_001_000_000_000'
Info: line -1 - symbol[0092] <= 'System.Byte[]'
Info: line 9 - code[0093] <= '0000000000000001'
Info: line -1 - symbol[0093] <= 'System.Byte[]'
Info: line 9 - code[0094] <= '1001_000_000_000_000'
Info: line -1 - symbol[0094] <= 'System.Byte[]'
Info: line 9 - code[0095] <= '0000000000010110'
Info: line -1 - symbol[0095] <= 'System.Byte[]'
Info: line 9 - code[0096] <= '0000_100_000_000_110'
Info: line -1 - symbol[0096] <= 'System.Byte[]'
Info: line 9 - code[0097] <= '0001_001_000_000_000'
Info: line -1 - symbol[0097] <= 'System.Byte[]'
Info: line 9 - code[0098] <= '0000000000000010'
Info: line -1 - symbol[0098] <= 'System.Byte[]'
Info: line 9 - code[0099] <= '1001_000_000_000_000'
Info: line -1 - symbol[0099] <= 'System.Byte[]'
Info: line 9 - code[009A] <= '0000000000010001'
Info: line -1 - symbol[009A] <= 'System.Byte[]'
Info: line 9 - code[009B] <= '0000_100_000_000_110'
Info: line -1 - symbol[009B] <= 'System.Byte[]'
Info: line 9 - code[009C] <= '0001_001_000_000_000'
Info: line -1 - symbol[009C] <= 'System.Byte[]'
Info: line 9 - code[009D] <= '0000000000001000'
Info: line -1 - symbol[009D] <= 'System.Byte[]'
Info: line 9 - code[009E] <= '1001_000_000_000_000'
Info: line -1 - symbol[009E] <= 'System.Byte[]'
Info: line 9 - code[009F] <= '0000000000010111'
Info: line -1 - symbol[009F] <= 'System.Byte[]'
Info: line 9 - code[00A0] <= '0000_100_000_000_010'
Info: line -1 - symbol[00A0] <= 'System.Byte[]'
Info: line 9 - code[00A1] <= '0000_111_110_110_000'
Info: line -1 - symbol[00A1] <= 'System.Byte[]'
Info: line 9 - code[00A2] <= '0001_000_001_000_000'
Info: line -1 - symbol[00A2] <= 'System.Byte[]'
Info: line 9 - code[00A3] <= '0000000000010000'
Info: line -1 - symbol[00A3] <= 'System.Byte[]'
Info: line 9 - code[00A4] <= '1011_000_000_000_000'
Info: line -1 - symbol[00A4] <= 'System.Byte[]'
Info: line 9 - code[00A5] <= '0000000000100110'
Info: line -1 - symbol[00A5] <= 'System.Byte[]'
Info: line 9 - code[00A6] <= '0001_100_000_000_000'
Info: line -1 - symbol[00A6] <= 'System.Byte[]'
Info: line 9 - code[00A7] <= '0000000000000000'
Info: line -1 - symbol[00A7] <= 'System.Byte[]'
Info: line 9 - code[00A8] <= '0000_111_110_110_000'
Info: line -1 - symbol[00A8] <= 'System.Byte[]'
Info: line 9 - code[00A9] <= '0010_000_010_000_000'
Info: line -1 - symbol[00A9] <= 'System.Byte[]'
Warning: value 11111111111111111111111111010110 truncated to value 1111111111010110 in line 227.
Info: line 9 - code[00AA] <= '1111111111010110'
Info: line -1 - symbol[00AA] <= 'System.Byte[]'
Info: line 9 - code[00AB] <= '0000_100_000_000_010'
Info: line -1 - symbol[00AB] <= 'System.Byte[]'
Info: line 9 - code[00AC] <= '0001_100_000_000_000'
Info: line -1 - symbol[00AC] <= 'System.Byte[]'
Info: line 9 - code[00AD] <= '0000000000000001'
Info: line -1 - symbol[00AD] <= 'System.Byte[]'
Info: line 9 - code[00AE] <= '0000_011_000_000_000'
Info: line -1 - symbol[00AE] <= 'System.Byte[]'
Info: line 9 - code[00AF] <= '0100_000_000_000_010'
Info: line -1 - symbol[00AF] <= 'System.Byte[]'
Info: line 9 - code[00B0] <= '0000_100_000_000_010'
Info: line -1 - symbol[00B0] <= 'System.Byte[]'
Info: line 9 - code[00B1] <= '0001_100_000_000_000'
Info: line -1 - symbol[00B1] <= 'System.Byte[]'
Info: line 9 - code[00B2] <= '0000000000000000'
Info: line -1 - symbol[00B2] <= 'System.Byte[]'
Info: line 9 - code[00B3] <= '0000_111_110_110_000'
Info: line -1 - symbol[00B3] <= 'System.Byte[]'
Info: line 9 - code[00B4] <= '0000_011_000_000_000'
Info: line -1 - symbol[00B4] <= 'System.Byte[]'
Info: line 9 - code[00B5] <= '0100_000_000_000_010'
Info: line -1 - symbol[00B5] <= 'System.Byte[]'
Info: line 9 - code[00B6] <= '0000_100_000_000_010'
Info: line -1 - symbol[00B6] <= 'System.Byte[]'
Info: line 9 - code[00B7] <= '0001_100_000_000_000'
Info: line -1 - symbol[00B7] <= 'System.Byte[]'
Info: line 9 - code[00B8] <= '0000000000000000'
Info: line -1 - symbol[00B8] <= 'System.Byte[]'
Info: line 9 - code[00B9] <= '0000_111_110_110_000'
Info: line -1 - symbol[00B9] <= 'System.Byte[]'
Info: line 9 - code[00BA] <= '0001_000_001_000_000'
Info: line -1 - symbol[00BA] <= 'System.Byte[]'
Info: line 9 - code[00BB] <= '0000000000000000'
Info: line -1 - symbol[00BB] <= 'System.Byte[]'
Info: line 9 - code[00BC] <= '1011_000_000_000_000'
Info: line -1 - symbol[00BC] <= 'System.Byte[]'
Info: line 9 - code[00BD] <= '0000000000000011'
Info: line -1 - symbol[00BD] <= 'System.Byte[]'
Info: line 9 - code[00BE] <= '0010_000_011_000_000'
Info: line -1 - symbol[00BE] <= 'System.Byte[]'
Warning: value 11111111111111111111111111000001 truncated to value 1111111111000001 in line 254.
Info: line 9 - code[00BF] <= '1111111111000001'
Info: line -1 - symbol[00BF] <= 'System.Byte[]'
Info: line 9 - code[00C0] <= '0000_000_111_000_011'
Info: line -1 - symbol[00C0] <= 'System.Byte[]'
Info: line 9 - code[00C1] <= '0000_000_000_111_011'
Info: line -1 - symbol[00C1] <= 'System.Byte[]'
Info: line 9 - code[00C2] <= '0001_000_000_100_000'
Info: line -1 - symbol[00C2] <= 'System.Byte[]'
Info: line 9 - code[00C3] <= '0000001001111110'
Info: line -1 - symbol[00C3] <= 'System.Byte[]'
Info: line 9 - code[00C4] <= '0110_000_000_000_011'
Info: line -1 - symbol[00C4] <= 'System.Byte[]'
Info: line 9 - code[00C5] <= '0010_000_000_000_000'
Info: line -1 - symbol[00C5] <= 'System.Byte[]'
Info: line 9 - code[00C6] <= '0000000000011000'
Info: line -1 - symbol[00C6] <= 'System.Byte[]'
Info: line 9 - code[00C7] <= '0000_000_000_100_010'
Info: line -1 - symbol[00C7] <= 'System.Byte[]'
Info: line 9 - code[00C8] <= '0000_000_100_000_010'
Info: line -1 - symbol[00C8] <= 'System.Byte[]'
Info: line 9 - code[00C9] <= '0010_000_000_000_000'
Info: line -1 - symbol[00C9] <= 'System.Byte[]'
Warning: value 11111111111111111111111110110110 truncated to value 1111111110110110 in line 266.
Info: line 9 - code[00CA] <= '1111111110110110'
Info: line -1 - symbol[00CA] <= 'System.Byte[]'
Info: line 9 - code[00CB] <= '0000_000_111_000_011'
Info: line -1 - symbol[00CB] <= 'System.Byte[]'
Info: line 9 - code[00CC] <= '0000_000_000_111_011'
Info: line -1 - symbol[00CC] <= 'System.Byte[]'
Info: line 9 - code[00CD] <= '0001_000_000_100_000'
Info: line -1 - symbol[00CD] <= 'System.Byte[]'
Info: line 9 - code[00CE] <= '0000001010000000'
Info: line -1 - symbol[00CE] <= 'System.Byte[]'
Info: line 9 - code[00CF] <= '0010_000_000_000_000'
Info: line -1 - symbol[00CF] <= 'System.Byte[]'
Warning: value 11111111111111111111111111110100 truncated to value 1111111111110100 in line 273.
Info: line 9 - code[00D0] <= '1111111111110100'
Info: line -1 - symbol[00D0] <= 'System.Byte[]'
Info: line 9 - code[00D1] <= '0000_111_000_000_011'
Info: line -1 - symbol[00D1] <= 'System.Byte[]'
Info: line 9 - code[00D2] <= '0001_100_000_000_000'
Info: line -1 - symbol[00D2] <= 'System.Byte[]'
Info: line 9 - code[00D3] <= '0000000000000000'
Info: line -1 - symbol[00D3] <= 'System.Byte[]'
Info: line 9 - code[00D4] <= '0000_010_000_000_000'
Info: line -1 - symbol[00D4] <= 'System.Byte[]'
Info: line 9 - code[00D5] <= '0000_100_000_000_010'
Info: line -1 - symbol[00D5] <= 'System.Byte[]'
Info: line 9 - code[00D6] <= '0100_000_000_000_010'
Info: line -1 - symbol[00D6] <= 'System.Byte[]'
Info: line 9 - code[00D7] <= '1000_000_000_000_000'
Info: line -1 - symbol[00D7] <= 'System.Byte[]'
Warning: value 11111111111111111111111111111110 truncated to value 1111111111111110 in line 12.
Info: line 9 - code[00D8] <= '1111111111111110'
Info: line -1 - symbol[00D8] <= 'System.Byte[]'
Info: line 9 - code[00D9] <= '0000_111_000_000_011'
Info: line -1 - symbol[00D9] <= 'System.Byte[]'
Info: line 9 - code[00DA] <= '0001_100_000_000_000'
Info: line -1 - symbol[00DA] <= 'System.Byte[]'
Warning: value 11111111111111111111111111111111 truncated to value 1111111111111111 in line 15.
Info: line 9 - code[00DB] <= '1111111111111111'
Info: line -1 - symbol[00DB] <= 'System.Byte[]'
Info: line 9 - code[00DC] <= '0010_000_000_000_000'
Info: line -1 - symbol[00DC] <= 'System.Byte[]'
Warning: value 11111111111111111111111111110111 truncated to value 1111111111110111 in line 17.
Info: line 9 - code[00DD] <= '1111111111110111'
Info: line -1 - symbol[00DD] <= 'System.Byte[]'
Info: line 9 - code[00DE] <= '0000_100_000_110_000'
Info: line -1 - symbol[00DE] <= 'System.Byte[]'
Info: line 9 - code[00DF] <= '1001_000_000_000_000'
Info: line -1 - symbol[00DF] <= 'System.Byte[]'
Info: line 9 - code[00E0] <= '0000000000000110'
Info: line -1 - symbol[00E0] <= 'System.Byte[]'
Info: line 9 - code[00E1] <= '0110_000_000_000_011'
Info: line -1 - symbol[00E1] <= 'System.Byte[]'
Info: line 9 - code[00E2] <= '0010_000_000_000_000'
Info: line -1 - symbol[00E2] <= 'System.Byte[]'
Info: line 9 - code[00E3] <= '0000000000000100'
Info: line -1 - symbol[00E3] <= 'System.Byte[]'
Info: line 9 - code[00E4] <= '0010_000_000_010_000'
Info: line -1 - symbol[00E4] <= 'System.Byte[]'
Warning: value 11111111111111111111111111111001 truncated to value 1111111111111001 in line 26.
Info: line 9 - code[00E5] <= '1111111111111001'
Info: line -1 - symbol[00E5] <= 'System.Byte[]'
Info: line 9 - code[00E6] <= '0100_000_000_000_010'
Info: line -1 - symbol[00E6] <= 'System.Byte[]'
Info: line 9 - code[00E7] <= '0110_000_000_000_011'
Info: line -1 - symbol[00E7] <= 'System.Byte[]'
Info: line 9 - code[00E8] <= '0010_000_000_000_000'
Info: line -1 - symbol[00E8] <= 'System.Byte[]'
Info: line 9 - code[00E9] <= '0000000010110001'
Info: line -1 - symbol[00E9] <= 'System.Byte[]'
Info: line 9 - code[00EA] <= '0110_000_000_000_011'
Info: line -1 - symbol[00EA] <= 'System.Byte[]'
Info: line 9 - code[00EB] <= '0010_000_000_000_000'
Info: line -1 - symbol[00EB] <= 'System.Byte[]'
Info: line 9 - code[00EC] <= '0000000001101111'
Info: line -1 - symbol[00EC] <= 'System.Byte[]'
Info: line 9 - code[00ED] <= '0100_000_000_000_010'
Info: line -1 - symbol[00ED] <= 'System.Byte[]'
Info: line 9 - code[00EE] <= '0000_000_111_000_011'
Info: line -1 - symbol[00EE] <= 'System.Byte[]'
Info: line 9 - code[00EF] <= '0000_111_000_000_011'
Info: line -1 - symbol[00EF] <= 'System.Byte[]'
Info: line 9 - code[00F0] <= '0001_000_100_000_000'
Info: line -1 - symbol[00F0] <= 'System.Byte[]'
Info: line 9 - code[00F1] <= '0000000000001100'
Info: line -1 - symbol[00F1] <= 'System.Byte[]'
Info: line 9 - code[00F2] <= '0110_000_000_000_011'
Info: line -1 - symbol[00F2] <= 'System.Byte[]'
Info: line 9 - code[00F3] <= '0010_000_000_000_000'
Info: line -1 - symbol[00F3] <= 'System.Byte[]'
Info: line 9 - code[00F4] <= '0000000000010110'
Info: line -1 - symbol[00F4] <= 'System.Byte[]'
Info: line 9 - code[00F5] <= '0000_100_000_000_110'
Info: line -1 - symbol[00F5] <= 'System.Byte[]'
Info: line 9 - code[00F6] <= '0001_000_100_000_000'
Info: line -1 - symbol[00F6] <= 'System.Byte[]'
Info: line 9 - code[00F7] <= '0000000000001000'
Info: line -1 - symbol[00F7] <= 'System.Byte[]'
Info: line 9 - code[00F8] <= '0110_000_000_000_011'
Info: line -1 - symbol[00F8] <= 'System.Byte[]'
Info: line 9 - code[00F9] <= '0010_000_000_000_000'
Info: line -1 - symbol[00F9] <= 'System.Byte[]'
Info: line 9 - code[00FA] <= '0000000000010000'
Info: line -1 - symbol[00FA] <= 'System.Byte[]'
Info: line 9 - code[00FB] <= '0000_100_000_000_110'
Info: line -1 - symbol[00FB] <= 'System.Byte[]'
Info: line 9 - code[00FC] <= '0001_000_100_000_000'
Info: line -1 - symbol[00FC] <= 'System.Byte[]'
Info: line 9 - code[00FD] <= '0000000000000100'
Info: line -1 - symbol[00FD] <= 'System.Byte[]'
Info: line 9 - code[00FE] <= '0110_000_000_000_011'
Info: line -1 - symbol[00FE] <= 'System.Byte[]'
Info: line 9 - code[00FF] <= '0010_000_000_000_000'
Info: line -1 - symbol[00FF] <= 'System.Byte[]'
Info: line 9 - code[0100] <= '0000000000001010'
Info: line -1 - symbol[0100] <= 'System.Byte[]'
Info: line 9 - code[0101] <= '0000_100_000_000_110'
Info: line -1 - symbol[0101] <= 'System.Byte[]'
Info: line 9 - code[0102] <= '0001_000_100_000_000'
Info: line -1 - symbol[0102] <= 'System.Byte[]'
Info: line 9 - code[0103] <= '0000000000000000'
Info: line -1 - symbol[0103] <= 'System.Byte[]'
Info: line 9 - code[0104] <= '0110_000_000_000_011'
Info: line -1 - symbol[0104] <= 'System.Byte[]'
Info: line 9 - code[0105] <= '0010_000_000_000_000'
Info: line -1 - symbol[0105] <= 'System.Byte[]'
Info: line 9 - code[0106] <= '0000000000000100'
Info: line -1 - symbol[0106] <= 'System.Byte[]'
Info: line 9 - code[0107] <= '0000_100_000_000_010'
Info: line -1 - symbol[0107] <= 'System.Byte[]'
Info: line 9 - code[0108] <= '0000_000_100_000_010'
Info: line -1 - symbol[0108] <= 'System.Byte[]'
Info: line 9 - code[0109] <= '0100_000_000_000_010'
Info: line -1 - symbol[0109] <= 'System.Byte[]'
Info: line 9 - code[010A] <= '0001_000_001_000_000'
Info: line -1 - symbol[010A] <= 'System.Byte[]'
Info: line 9 - code[010B] <= '0000000000000000'
Info: line -1 - symbol[010B] <= 'System.Byte[]'
Info: line 9 - code[010C] <= '1011_000_000_000_000'
Info: line -1 - symbol[010C] <= 'System.Byte[]'
Info: line 9 - code[010D] <= '0000000000000011'
Info: line -1 - symbol[010D] <= 'System.Byte[]'
Info: line 9 - code[010E] <= '0010_011_011_000_000'
Info: line -1 - symbol[010E] <= 'System.Byte[]'
Warning: value 11111111111111111111111111111011 truncated to value 1111111111111011 in line 76.
Info: line 9 - code[010F] <= '1111111111111011'
Info: line -1 - symbol[010F] <= 'System.Byte[]'
Info: line 9 - code[0110] <= '0001_110_000_000_000'
Info: line -1 - symbol[0110] <= 'System.Byte[]'
Info: line 9 - code[0111] <= '0000000000001111'
Info: line -1 - symbol[0111] <= 'System.Byte[]'
Info: line 9 - code[0112] <= '0000_111_100_000_000'
Info: line -1 - symbol[0112] <= 'System.Byte[]'
Info: line 9 - code[0113] <= '0001_000_101_000_000'
Info: line -1 - symbol[0113] <= 'System.Byte[]'
Info: line 9 - code[0114] <= '0000000000110000'
Info: line -1 - symbol[0114] <= 'System.Byte[]'
Info: line 9 - code[0115] <= '0001_000_001_000_000'
Info: line -1 - symbol[0115] <= 'System.Byte[]'
Info: line 9 - code[0116] <= '0000000000110000'
Info: line -1 - symbol[0116] <= 'System.Byte[]'
Info: line 9 - code[0117] <= '1010_000_000_000_000'
Info: line -1 - symbol[0117] <= 'System.Byte[]'
Info: line 9 - code[0118] <= '0000000000000011'
Info: line -1 - symbol[0118] <= 'System.Byte[]'
Info: line 9 - code[0119] <= '0010_000_000_000_000'
Info: line -1 - symbol[0119] <= 'System.Byte[]'
Info: line 9 - code[011A] <= '0000000000000011'
Info: line -1 - symbol[011A] <= 'System.Byte[]'
Info: line 9 - code[011B] <= '0001_000_101_000_000'
Info: line -1 - symbol[011B] <= 'System.Byte[]'
Info: line 9 - code[011C] <= '0000000000110111'
Info: line -1 - symbol[011C] <= 'System.Byte[]'
Info: line 9 - code[011D] <= '0000_100_111_000_000'
Info: line -1 - symbol[011D] <= 'System.Byte[]'
Info: line 9 - code[011E] <= '0110_000_000_000_011'
Info: line -1 - symbol[011E] <= 'System.Byte[]'
Info: line 9 - code[011F] <= '0010_000_000_000_000'
Info: line -1 - symbol[011F] <= 'System.Byte[]'
Info: line 9 - code[0120] <= '0000000001111010'
Info: line -1 - symbol[0120] <= 'System.Byte[]'
Info: line 9 - code[0121] <= '0110_000_000_000_011'
Info: line -1 - symbol[0121] <= 'System.Byte[]'
Info: line 9 - code[0122] <= '0010_000_000_000_000'
Info: line -1 - symbol[0122] <= 'System.Byte[]'
Info: line 9 - code[0123] <= '0000000000111000'
Info: line -1 - symbol[0123] <= 'System.Byte[]'
Info: line 9 - code[0124] <= '0100_000_000_000_010'
Info: line -1 - symbol[0124] <= 'System.Byte[]'
Info: line 9 - code[0125] <= '0001_000_000_100_000'
Info: line -1 - symbol[0125] <= 'System.Byte[]'
Info: line 9 - code[0126] <= '1110000000000000'
Info: line -1 - symbol[0126] <= 'System.Byte[]'
Info: line 9 - code[0127] <= '0001_100_000_000_000'
Info: line -1 - symbol[0127] <= 'System.Byte[]'
Info: line 9 - code[0128] <= '0000000000000011'
Info: line -1 - symbol[0128] <= 'System.Byte[]'
Info: line 9 - code[0129] <= '0000_111_000_110_000'
Info: line -1 - symbol[0129] <= 'System.Byte[]'
Info: line 9 - code[012A] <= '0001_100_000_000_000'
Info: line -1 - symbol[012A] <= 'System.Byte[]'
Info: line 9 - code[012B] <= '0000000000010000'
Info: line -1 - symbol[012B] <= 'System.Byte[]'
Info: line 9 - code[012C] <= '0000_111_000_110_000'
Info: line -1 - symbol[012C] <= 'System.Byte[]'
Info: line 9 - code[012D] <= '0100_000_000_000_010'
Info: line -1 - symbol[012D] <= 'System.Byte[]'
Info: line 9 - code[012E] <= '0000_000_000_111_011'
Info: line -1 - symbol[012E] <= 'System.Byte[]'
Info: line 9 - code[012F] <= '0001_000_000_100_000'
Info: line -1 - symbol[012F] <= 'System.Byte[]'
Info: line 9 - code[0130] <= '1110000000000000'
Info: line -1 - symbol[0130] <= 'System.Byte[]'
Info: line 9 - code[0131] <= '0110_000_000_000_011'
Info: line -1 - symbol[0131] <= 'System.Byte[]'
Info: line 9 - code[0132] <= '0010_000_000_000_000'
Info: line -1 - symbol[0132] <= 'System.Byte[]'
Info: line 9 - code[0133] <= '0000000000110111'
Info: line -1 - symbol[0133] <= 'System.Byte[]'
Info: line 9 - code[0134] <= '0001_110_000_000_000'
Info: line -1 - symbol[0134] <= 'System.Byte[]'
Info: line 9 - code[0135] <= '0000000000000001'
Info: line -1 - symbol[0135] <= 'System.Byte[]'
Info: line 9 - code[0136] <= '1001_000_000_000_000'
Info: line -1 - symbol[0136] <= 'System.Byte[]'
Warning: value 11111111111111111111111111111010 truncated to value 1111111111111010 in line 21.
Info: line 9 - code[0137] <= '1111111111111010'
Info: line -1 - symbol[0137] <= 'System.Byte[]'
Info: line 9 - code[0138] <= '0000_000_000_010_000'
Info: line -1 - symbol[0138] <= 'System.Byte[]'
Info: line 9 - code[0139] <= '0000_100_000_110_000'
Info: line -1 - symbol[0139] <= 'System.Byte[]'
Info: line 9 - code[013A] <= '0001_110_000_000_000'
Info: line -1 - symbol[013A] <= 'System.Byte[]'
Info: line 9 - code[013B] <= '0000000011111111'
Info: line -1 - symbol[013B] <= 'System.Byte[]'
Info: line 9 - code[013C] <= '0000_000_000_100_010'
Info: line -1 - symbol[013C] <= 'System.Byte[]'
Info: line 9 - code[013D] <= '0100_000_000_000_010'
Info: line -1 - symbol[013D] <= 'System.Byte[]'
Info: line 9 - code[013E] <= '0000_111_000_000_011'
Info: line -1 - symbol[013E] <= 'System.Byte[]'
Info: line 9 - code[013F] <= '0000_000_000_111_011'
Info: line -1 - symbol[013F] <= 'System.Byte[]'
Info: line 9 - code[0140] <= '0001_000_000_100_000'
Info: line -1 - symbol[0140] <= 'System.Byte[]'
Info: line 9 - code[0141] <= '1110000000000000'
Info: line -1 - symbol[0141] <= 'System.Byte[]'
Info: line 9 - code[0142] <= '0110_000_000_000_011'
Info: line -1 - symbol[0142] <= 'System.Byte[]'
Info: line 9 - code[0143] <= '0010_000_000_000_000'
Info: line -1 - symbol[0143] <= 'System.Byte[]'
Info: line 9 - code[0144] <= '0000000000100110'
Info: line -1 - symbol[0144] <= 'System.Byte[]'
Info: line 9 - code[0145] <= '0001_110_000_000_000'
Info: line -1 - symbol[0145] <= 'System.Byte[]'
Info: line 9 - code[0146] <= '0000000000000001'
Info: line -1 - symbol[0146] <= 'System.Byte[]'
Info: line 9 - code[0147] <= '1001_000_000_000_000'
Info: line -1 - symbol[0147] <= 'System.Byte[]'
Info: line 9 - code[0148] <= '0000000000000111'
Info: line -1 - symbol[0148] <= 'System.Byte[]'
Info: line 9 - code[0149] <= '0000_000_000_010_000'
Info: line -1 - symbol[0149] <= 'System.Byte[]'
Info: line 9 - code[014A] <= '0000_100_000_110_000'
Info: line -1 - symbol[014A] <= 'System.Byte[]'
Info: line 9 - code[014B] <= '0001_001_000_000_000'
Info: line -1 - symbol[014B] <= 'System.Byte[]'
Info: line 9 - code[014C] <= '0000000000000011'
Info: line -1 - symbol[014C] <= 'System.Byte[]'
Info: line 9 - code[014D] <= '1001_000_000_000_000'
Info: line -1 - symbol[014D] <= 'System.Byte[]'
Info: line 9 - code[014E] <= '0000000000000101'
Info: line -1 - symbol[014E] <= 'System.Byte[]'
Info: line 9 - code[014F] <= '0001_100_000_000_000'
Info: line -1 - symbol[014F] <= 'System.Byte[]'
Info: line 9 - code[0150] <= '0000000000000000'
Info: line -1 - symbol[0150] <= 'System.Byte[]'
Info: line 9 - code[0151] <= '0010_000_000_000_000'
Info: line -1 - symbol[0151] <= 'System.Byte[]'
Info: line 9 - code[0152] <= '0000000000000100'
Info: line -1 - symbol[0152] <= 'System.Byte[]'
Info: line 9 - code[0153] <= '0001_100_000_000_000'
Info: line -1 - symbol[0153] <= 'System.Byte[]'
Info: line 9 - code[0154] <= '0000000000000001'
Info: line -1 - symbol[0154] <= 'System.Byte[]'
Info: line 9 - code[0155] <= '0000_011_000_000_000'
Info: line -1 - symbol[0155] <= 'System.Byte[]'
Info: line 9 - code[0156] <= '0000_000_000_100_010'
Info: line -1 - symbol[0156] <= 'System.Byte[]'
Info: line 9 - code[0157] <= '0000_100_000_000_010'
Info: line -1 - symbol[0157] <= 'System.Byte[]'
Info: line 9 - code[0158] <= '0100_000_000_000_010'
Info: line -1 - symbol[0158] <= 'System.Byte[]'
Info: line 9 - code[0159] <= '0001_100_000_000_000'
Info: line -1 - symbol[0159] <= 'System.Byte[]'
Info: line 9 - code[015A] <= '0000000000000111'
Info: line -1 - symbol[015A] <= 'System.Byte[]'
Info: line 9 - code[015B] <= '0000_000_000_111_011'
Info: line -1 - symbol[015B] <= 'System.Byte[]'
Info: line 9 - code[015C] <= '0000_111_000_000_011'
Info: line -1 - symbol[015C] <= 'System.Byte[]'
Info: line 9 - code[015D] <= '0001_000_000_100_000'
Info: line -1 - symbol[015D] <= 'System.Byte[]'
Info: line 9 - code[015E] <= '1110000000000000'
Info: line -1 - symbol[015E] <= 'System.Byte[]'
Info: line 9 - code[015F] <= '0110_000_000_000_011'
Info: line -1 - symbol[015F] <= 'System.Byte[]'
Info: line 9 - code[0160] <= '0010_000_000_000_000'
Info: line -1 - symbol[0160] <= 'System.Byte[]'
Info: line 9 - code[0161] <= '0000000000001001'
Info: line -1 - symbol[0161] <= 'System.Byte[]'
Info: line 9 - code[0162] <= '0001_110_000_000_000'
Info: line -1 - symbol[0162] <= 'System.Byte[]'
Info: line 9 - code[0163] <= '0000000000000010'
Info: line -1 - symbol[0163] <= 'System.Byte[]'
Info: line 9 - code[0164] <= '1001_000_000_000_000'
Info: line -1 - symbol[0164] <= 'System.Byte[]'
Warning: value 11111111111111111111111111111010 truncated to value 1111111111111010 in line 71.
Info: line 9 - code[0165] <= '1111111111111010'
Info: line -1 - symbol[0165] <= 'System.Byte[]'
Info: line 9 - code[0166] <= '0000_100_000_010_010'
Info: line -1 - symbol[0166] <= 'System.Byte[]'
Info: line 9 - code[0167] <= '0000_111_000_110_000'
Info: line -1 - symbol[0167] <= 'System.Byte[]'
Info: line 9 - code[0168] <= '0000_000_000_100_010'
Info: line -1 - symbol[0168] <= 'System.Byte[]'
Info: line 9 - code[0169] <= '0100_000_000_000_010'
Info: line -1 - symbol[0169] <= 'System.Byte[]'
Info: line 9 - code[016A] <= '0000_100_000_110_000'
Info: line -1 - symbol[016A] <= 'System.Byte[]'
Info: line 9 - code[016B] <= '0000_111_000_000_011'
Info: line -1 - symbol[016B] <= 'System.Byte[]'
Info: line 9 - code[016C] <= '0000_100_000_110_000'
Info: line -1 - symbol[016C] <= 'System.Byte[]'
Info: line 9 - code[016D] <= '0000_001_000_000_110'
Info: line -1 - symbol[016D] <= 'System.Byte[]'
Info: line 9 - code[016E] <= '1001_000_000_000_000'
Info: line -1 - symbol[016E] <= 'System.Byte[]'
Info: line 9 - code[016F] <= '0000000000000100'
Info: line -1 - symbol[016F] <= 'System.Byte[]'
Info: line 9 - code[0170] <= '0000_100_000_000_010'
Info: line -1 - symbol[0170] <= 'System.Byte[]'
Info: line 9 - code[0171] <= '0010_000_000_000_000'
Info: line -1 - symbol[0171] <= 'System.Byte[]'
Warning: value 11111111111111111111111111111000 truncated to value 1111111111111000 in line 85.
Info: line 9 - code[0172] <= '1111111111111000'
Info: line -1 - symbol[0172] <= 'System.Byte[]'
Info: line 9 - code[0173] <= '0000_100_000_000_010'
Info: line -1 - symbol[0173] <= 'System.Byte[]'
Info: line 9 - code[0174] <= '0100_000_000_000_010'
Info: line -1 - symbol[0174] <= 'System.Byte[]'
Info: line 9 - code[0175] <= '0000_100_110_000_000'
Info: line -1 - symbol[0175] <= 'System.Byte[]'
Info: line 9 - code[0176] <= '1001_000_000_000_000'
Info: line -1 - symbol[0176] <= 'System.Byte[]'
Info: line 9 - code[0177] <= '0000000000000110'
Info: line -1 - symbol[0177] <= 'System.Byte[]'
Info: line 9 - code[0178] <= '0110_000_000_000_011'
Info: line -1 - symbol[0178] <= 'System.Byte[]'
Info: line 9 - code[0179] <= '0010_000_000_000_000'
Info: line -1 - symbol[0179] <= 'System.Byte[]'
Warning: value 11111111111111111111111111100001 truncated to value 1111111111100001 in line 94.
Info: line 9 - code[017A] <= '1111111111100001'
Info: line -1 - symbol[017A] <= 'System.Byte[]'
Info: line 9 - code[017B] <= '0010_000_010_000_000'
Info: line -1 - symbol[017B] <= 'System.Byte[]'
Warning: value 11111111111111111111111111111001 truncated to value 1111111111111001 in line 96.
Info: line 9 - code[017C] <= '1111111111111001'
Info: line -1 - symbol[017C] <= 'System.Byte[]'
Info: line 9 - code[017D] <= '0100_000_000_000_010'
Info: line -1 - symbol[017D] <= 'System.Byte[]'
Info: line 9 - code[017E] <= '0110_000_000_000_011'
Info: line -1 - symbol[017E] <= 'System.Byte[]'
Info: line 9 - code[017F] <= '0010_000_000_000_000'
Info: line -1 - symbol[017F] <= 'System.Byte[]'
Warning: value 11111111111111111111111101010001 truncated to value 1111111101010001 in line 12.
Info: line 9 - code[0180] <= '1111111101010001'
Info: line -1 - symbol[0180] <= 'System.Byte[]'
Info: line 9 - code[0181] <= '0001_100_000_000_000'
Info: line -1 - symbol[0181] <= 'System.Byte[]'
Info: line 9 - code[0182] <= '0000000001000000'
Info: line -1 - symbol[0182] <= 'System.Byte[]'
Info: line 9 - code[0183] <= '0000_111_000_000_011'
Info: line -1 - symbol[0183] <= 'System.Byte[]'
Info: line 9 - code[0184] <= '0001_100_000_000_000'
Info: line -1 - symbol[0184] <= 'System.Byte[]'
Info: line 9 - code[0185] <= '0001000000000000'
Info: line -1 - symbol[0185] <= 'System.Byte[]'
Info: line 9 - code[0186] <= '0001_000_100_000_000'
Info: line -1 - symbol[0186] <= 'System.Byte[]'
Info: line 9 - code[0187] <= '0000000000100000'
Info: line -1 - symbol[0187] <= 'System.Byte[]'
Info: line 9 - code[0188] <= '0001_000_000_100_000'
Info: line -1 - symbol[0188] <= 'System.Byte[]'
Info: line 9 - code[0189] <= '1111111100000000'
Info: line -1 - symbol[0189] <= 'System.Byte[]'
Info: line 9 - code[018A] <= '0000_111_000_110_000'
Info: line -1 - symbol[018A] <= 'System.Byte[]'
Info: line 9 - code[018B] <= '0000_100_000_110_000'
Info: line -1 - symbol[018B] <= 'System.Byte[]'
Info: line 9 - code[018C] <= '0000_101_000_010_110'
Info: line -1 - symbol[018C] <= 'System.Byte[]'
Info: line 9 - code[018D] <= '0000_111_011_110_000'
Info: line -1 - symbol[018D] <= 'System.Byte[]'
Info: line 9 - code[018E] <= '1011_000_000_000_000'
Info: line -1 - symbol[018E] <= 'System.Byte[]'
Info: line 9 - code[018F] <= '0000000000000011'
Info: line -1 - symbol[018F] <= 'System.Byte[]'
Info: line 9 - code[0190] <= '0010_000_000_000_000'
Info: line -1 - symbol[0190] <= 'System.Byte[]'
Warning: value 11111111111111111111111111111010 truncated to value 1111111111111010 in line 29.
Info: line 9 - code[0191] <= '1111111111111010'
Info: line -1 - symbol[0191] <= 'System.Byte[]'
Info: line 9 - code[0192] <= '0000_100_000_000_010'
Info: line -1 - symbol[0192] <= 'System.Byte[]'
Info: line 9 - code[0193] <= '0001_000_100_100_000'
Info: line -1 - symbol[0193] <= 'System.Byte[]'
Info: line 9 - code[0194] <= '0000000000000000'
Info: line -1 - symbol[0194] <= 'System.Byte[]'
Info: line 9 - code[0195] <= '0110_000_000_000_011'
Info: line -1 - symbol[0195] <= 'System.Byte[]'
Info: line 9 - code[0196] <= '0010_000_000_000_000'
Info: line -1 - symbol[0196] <= 'System.Byte[]'
Info: line 9 - code[0197] <= '0000000001000001'
Info: line -1 - symbol[0197] <= 'System.Byte[]'
Info: line 9 - code[0198] <= '0001_100_000_000_000'
Info: line -1 - symbol[0198] <= 'System.Byte[]'
Info: line 9 - code[0199] <= '0000000000000001'
Info: line -1 - symbol[0199] <= 'System.Byte[]'
Info: line 9 - code[019A] <= '0000_000_111_000_011'
Info: line -1 - symbol[019A] <= 'System.Byte[]'
Info: line 9 - code[019B] <= '0000_000_000_111_011'
Info: line -1 - symbol[019B] <= 'System.Byte[]'
Info: line 9 - code[019C] <= '0000_111_000_000_011'
Info: line -1 - symbol[019C] <= 'System.Byte[]'
Info: line 9 - code[019D] <= '0001_001_000_000_000'
Info: line -1 - symbol[019D] <= 'System.Byte[]'
Info: line 9 - code[019E] <= '0000000000000010'
Info: line -1 - symbol[019E] <= 'System.Byte[]'
Info: line 9 - code[019F] <= '1001_000_000_000_000'
Info: line -1 - symbol[019F] <= 'System.Byte[]'
Info: line 9 - code[01A0] <= '0000000010100110'
Info: line -1 - symbol[01A0] <= 'System.Byte[]'
Info: line 9 - code[01A1] <= '0000_100_000_000_110'
Info: line -1 - symbol[01A1] <= 'System.Byte[]'
Info: line 9 - code[01A2] <= '0001_001_000_000_000'
Info: line -1 - symbol[01A2] <= 'System.Byte[]'
Info: line 9 - code[01A3] <= '0000000000000001'
Info: line -1 - symbol[01A3] <= 'System.Byte[]'
Info: line 9 - code[01A4] <= '1001_000_000_000_000'
Info: line -1 - symbol[01A4] <= 'System.Byte[]'
Info: line 9 - code[01A5] <= '0000000010000011'
Info: line -1 - symbol[01A5] <= 'System.Byte[]'
Info: line 9 - code[01A6] <= '0000_100_000_000_110'
Info: line -1 - symbol[01A6] <= 'System.Byte[]'
Info: line 9 - code[01A7] <= '0001_001_000_000_000'
Info: line -1 - symbol[01A7] <= 'System.Byte[]'
Info: line 9 - code[01A8] <= '0000000000000111'
Info: line -1 - symbol[01A8] <= 'System.Byte[]'
Info: line 9 - code[01A9] <= '1001_000_000_000_000'
Info: line -1 - symbol[01A9] <= 'System.Byte[]'
Info: line 9 - code[01AA] <= '0000000000101010'
Info: line -1 - symbol[01AA] <= 'System.Byte[]'
Info: line 9 - code[01AB] <= '0110_000_000_000_011'
Info: line -1 - symbol[01AB] <= 'System.Byte[]'
Info: line 9 - code[01AC] <= '0010_000_000_000_000'
Info: line -1 - symbol[01AC] <= 'System.Byte[]'
Info: line 9 - code[01AD] <= '0000000010100110'
Info: line -1 - symbol[01AD] <= 'System.Byte[]'
Info: line 9 - code[01AE] <= '0000_100_000_000_110'
Info: line -1 - symbol[01AE] <= 'System.Byte[]'
Info: line 9 - code[01AF] <= '0001_001_000_000_000'
Info: line -1 - symbol[01AF] <= 'System.Byte[]'
Info: line 9 - code[01B0] <= '0000000000001101'
Info: line -1 - symbol[01B0] <= 'System.Byte[]'
Info: line 9 - code[01B1] <= '1001_000_000_000_000'
Info: line -1 - symbol[01B1] <= 'System.Byte[]'
Info: line 9 - code[01B2] <= '0000000001011111'
Info: line -1 - symbol[01B2] <= 'System.Byte[]'
Info: line 9 - code[01B3] <= '0000_100_000_000_110'
Info: line -1 - symbol[01B3] <= 'System.Byte[]'
Info: line 9 - code[01B4] <= '0001_001_000_000_000'
Info: line -1 - symbol[01B4] <= 'System.Byte[]'
Info: line 9 - code[01B5] <= '0000000000001010'
Info: line -1 - symbol[01B5] <= 'System.Byte[]'
Info: line 9 - code[01B6] <= '1001_000_000_000_000'
Info: line -1 - symbol[01B6] <= 'System.Byte[]'
Info: line 9 - code[01B7] <= '0000000001101110'
Info: line -1 - symbol[01B7] <= 'System.Byte[]'
Info: line 9 - code[01B8] <= '0000_100_000_000_110'
Info: line -1 - symbol[01B8] <= 'System.Byte[]'
Info: line 9 - code[01B9] <= '0001_001_000_000_000'
Info: line -1 - symbol[01B9] <= 'System.Byte[]'
Info: line 9 - code[01BA] <= '0000000000001000'
Info: line -1 - symbol[01BA] <= 'System.Byte[]'
Info: line 9 - code[01BB] <= '1001_000_000_000_000'
Info: line -1 - symbol[01BB] <= 'System.Byte[]'
Info: line 9 - code[01BC] <= '0000000001011010'
Info: line -1 - symbol[01BC] <= 'System.Byte[]'
Info: line 9 - code[01BD] <= '0000_100_000_000_010'
Info: line -1 - symbol[01BD] <= 'System.Byte[]'
Info: line 9 - code[01BE] <= '0000_000_000_000_000'
Info: line -1 - symbol[01BE] <= 'System.Byte[]'
Info: line 9 - code[01BF] <= '0000_000_000_111_011'
Info: line -1 - symbol[01BF] <= 'System.Byte[]'
Info: line 9 - code[01C0] <= '0110_000_000_000_011'
Info: line -1 - symbol[01C0] <= 'System.Byte[]'
Info: line 9 - code[01C1] <= '0010_000_000_000_000'
Info: line -1 - symbol[01C1] <= 'System.Byte[]'
Info: line 9 - code[01C2] <= '0000000010011010'
Info: line -1 - symbol[01C2] <= 'System.Byte[]'
Info: line 9 - code[01C3] <= '0000_111_110_110_000'
Info: line -1 - symbol[01C3] <= 'System.Byte[]'
Info: line 9 - code[01C4] <= '0000_000_010_100_010'
Info: line -1 - symbol[01C4] <= 'System.Byte[]'
Info: line 9 - code[01C5] <= '0001_000_001_000_000'
Info: line -1 - symbol[01C5] <= 'System.Byte[]'
Info: line 9 - code[01C6] <= '0000000001000000'
Info: line -1 - symbol[01C6] <= 'System.Byte[]'
Info: line 9 - code[01C7] <= '1010_000_000_000_000'
Info: line -1 - symbol[01C7] <= 'System.Byte[]'
Info: line 9 - code[01C8] <= '0000000000011001'
Info: line -1 - symbol[01C8] <= 'System.Byte[]'
Info: line 9 - code[01C9] <= '0000_000_000_111_011'
Info: line -1 - symbol[01C9] <= 'System.Byte[]'
Info: line 9 - code[01CA] <= '0001_000_000_100_000'
Info: line -1 - symbol[01CA] <= 'System.Byte[]'
Info: line 9 - code[01CB] <= '1111111100111110'
Info: line -1 - symbol[01CB] <= 'System.Byte[]'
Info: line 9 - code[01CC] <= '0000_000_111_110_000'
Info: line -1 - symbol[01CC] <= 'System.Byte[]'
Info: line 9 - code[01CD] <= '0001_000_100_000_000'
Info: line -1 - symbol[01CD] <= 'System.Byte[]'
Info: line 9 - code[01CE] <= '1111111100111111'
Info: line -1 - symbol[01CE] <= 'System.Byte[]'
Info: line 9 - code[01CF] <= '0000_000_000_100_010'
Info: line -1 - symbol[01CF] <= 'System.Byte[]'
Info: line 9 - code[01D0] <= '0000_000_110_111_000'
Info: line -1 - symbol[01D0] <= 'System.Byte[]'
Info: line 9 - code[01D1] <= '0000_000_000_100_010'
Info: line -1 - symbol[01D1] <= 'System.Byte[]'
Info: line 9 - code[01D2] <= '0000_000_100_000_010'
Info: line -1 - symbol[01D2] <= 'System.Byte[]'
Info: line 9 - code[01D3] <= '0100_000_000_000_010'
Info: line -1 - symbol[01D3] <= 'System.Byte[]'
Info: line 9 - code[01D4] <= '0000_100_000_000_010'
Info: line -1 - symbol[01D4] <= 'System.Byte[]'
Info: line 9 - code[01D5] <= '0000_000_000_100_010'
Info: line -1 - symbol[01D5] <= 'System.Byte[]'
Info: line 9 - code[01D6] <= '0000_000_100_000_010'
Info: line -1 - symbol[01D6] <= 'System.Byte[]'
Info: line 9 - code[01D7] <= '0100_000_000_000_010'
Info: line -1 - symbol[01D7] <= 'System.Byte[]'
Info: line 9 - code[01D8] <= '0000_000_000_111_011'
Info: line -1 - symbol[01D8] <= 'System.Byte[]'
Info: line 9 - code[01D9] <= '0001_000_000_100_000'
Info: line -1 - symbol[01D9] <= 'System.Byte[]'
Info: line 9 - code[01DA] <= '1111111100111100'
Info: line -1 - symbol[01DA] <= 'System.Byte[]'
Info: line 9 - code[01DB] <= '0000_000_111_110_000'
Info: line -1 - symbol[01DB] <= 'System.Byte[]'
Info: line 9 - code[01DC] <= '0001_000_100_000_000'
Info: line -1 - symbol[01DC] <= 'System.Byte[]'
Info: line 9 - code[01DD] <= '1111111100111101'
Info: line -1 - symbol[01DD] <= 'System.Byte[]'
Info: line 9 - code[01DE] <= '0000_000_000_100_010'
Info: line -1 - symbol[01DE] <= 'System.Byte[]'
Info: line 9 - code[01DF] <= '0000_000_110_111_000'
Info: line -1 - symbol[01DF] <= 'System.Byte[]'
Info: line 9 - code[01E0] <= '0100_000_000_000_010'
Info: line -1 - symbol[01E0] <= 'System.Byte[]'
Info: line 9 - code[01E1] <= '0001_000_100_000_000'
Info: line -1 - symbol[01E1] <= 'System.Byte[]'
Info: line 9 - code[01E2] <= '0000000000000000'
Info: line -1 - symbol[01E2] <= 'System.Byte[]'
Info: line 9 - code[01E3] <= '0000_000_000_010_000'
Info: line -1 - symbol[01E3] <= 'System.Byte[]'
Info: line 9 - code[01E4] <= '0001_000_000_001_000'
Info: line -1 - symbol[01E4] <= 'System.Byte[]'
Info: line 9 - code[01E5] <= '0000000000100000'
Info: line -1 - symbol[01E5] <= 'System.Byte[]'
Info: line 9 - code[01E6] <= '1100_000_000_000_000'
Info: line -1 - symbol[01E6] <= 'System.Byte[]'
Info: line 9 - code[01E7] <= '0000000000000011'
Info: line -1 - symbol[01E7] <= 'System.Byte[]'
Info: line 9 - code[01E8] <= '0010_000_000_000_000'
Info: line -1 - symbol[01E8] <= 'System.Byte[]'
Warning: value 11111111111111111111111111100000 truncated to value 1111111111100000 in line 135.
Info: line 9 - code[01E9] <= '1111111111100000'
Info: line -1 - symbol[01E9] <= 'System.Byte[]'
Info: line 9 - code[01EA] <= '0001_000_000_100_000'
Info: line -1 - symbol[01EA] <= 'System.Byte[]'
Info: line 9 - code[01EB] <= '0000000000000000'
Info: line -1 - symbol[01EB] <= 'System.Byte[]'
Info: line 9 - code[01EC] <= '0000_000_000_111_011'
Info: line -1 - symbol[01EC] <= 'System.Byte[]'
Info: line 9 - code[01ED] <= '0001_000_100_000_000'
Info: line -1 - symbol[01ED] <= 'System.Byte[]'
Info: line 9 - code[01EE] <= '0000000000000000'
Info: line -1 - symbol[01EE] <= 'System.Byte[]'
Info: line 9 - code[01EF] <= '0110_000_000_000_011'
Info: line -1 - symbol[01EF] <= 'System.Byte[]'
Info: line 9 - code[01F0] <= '0010_000_000_000_000'
Info: line -1 - symbol[01F0] <= 'System.Byte[]'
Info: line 9 - code[01F1] <= '0000000001101011'
Info: line -1 - symbol[01F1] <= 'System.Byte[]'
Info: line 9 - code[01F2] <= '0000_000_000_111_011'
Info: line -1 - symbol[01F2] <= 'System.Byte[]'
Info: line 9 - code[01F3] <= '0001_000_000_101_000'
Info: line -1 - symbol[01F3] <= 'System.Byte[]'
Info: line 9 - code[01F4] <= '0000000001000000'
Info: line -1 - symbol[01F4] <= 'System.Byte[]'
Info: line 9 - code[01F5] <= '0000_100_110_110_000'
Info: line -1 - symbol[01F5] <= 'System.Byte[]'
Info: line 9 - code[01F6] <= '0000_000_000_100_010'
Info: line -1 - symbol[01F6] <= 'System.Byte[]'
Info: line 9 - code[01F7] <= '0000_111_110_110_000'
Info: line -1 - symbol[01F7] <= 'System.Byte[]'
Info: line 9 - code[01F8] <= '0000_000_010_000_000'
Info: line -1 - symbol[01F8] <= 'System.Byte[]'
Info: line 9 - code[01F9] <= '0001_000_001_000_000'
Info: line -1 - symbol[01F9] <= 'System.Byte[]'
Info: line 9 - code[01FA] <= '0000000001000000'
Info: line -1 - symbol[01FA] <= 'System.Byte[]'
Info: line 9 - code[01FB] <= '1010_000_000_000_000'
Info: line -1 - symbol[01FB] <= 'System.Byte[]'
Info: line 9 - code[01FC] <= '0000000000000011'
Info: line -1 - symbol[01FC] <= 'System.Byte[]'
Info: line 9 - code[01FD] <= '0010_000_000_000_000'
Info: line -1 - symbol[01FD] <= 'System.Byte[]'
Warning: value 11111111111111111111111111110100 truncated to value 1111111111110100 in line 157.
Info: line 9 - code[01FE] <= '1111111111110100'
Info: line -1 - symbol[01FE] <= 'System.Byte[]'
Info: line 9 - code[01FF] <= '0000_000_000_100_010'
Info: line -1 - symbol[01FF] <= 'System.Byte[]'
Info: line 9 - code[0200] <= '0000_000_000_010_000'
Info: line -1 - symbol[0200] <= 'System.Byte[]'
Info: line 9 - code[0201] <= '0001_000_000_001_000'
Info: line -1 - symbol[0201] <= 'System.Byte[]'
Info: line 9 - code[0202] <= '0000000000011111'
Info: line -1 - symbol[0202] <= 'System.Byte[]'
Info: line 9 - code[0203] <= '1100_000_000_000_000'
Info: line -1 - symbol[0203] <= 'System.Byte[]'
Info: line 9 - code[0204] <= '0000000000000011'
Info: line -1 - symbol[0204] <= 'System.Byte[]'
Info: line 9 - code[0205] <= '0010_000_000_000_000'
Info: line -1 - symbol[0205] <= 'System.Byte[]'
Warning: value 11111111111111111111111111100110 truncated to value 1111111111100110 in line 165.
Info: line 9 - code[0206] <= '1111111111100110'
Info: line -1 - symbol[0206] <= 'System.Byte[]'
Info: line 9 - code[0207] <= '0000_000_000_000_000'
Info: line -1 - symbol[0207] <= 'System.Byte[]'
Info: line 9 - code[0208] <= '0001_000_000_100_000'
Info: line -1 - symbol[0208] <= 'System.Byte[]'
Info: line 9 - code[0209] <= '0000000000011111'
Info: line -1 - symbol[0209] <= 'System.Byte[]'
Info: line 9 - code[020A] <= '0000_000_000_111_011'
Info: line -1 - symbol[020A] <= 'System.Byte[]'
Info: line 9 - code[020B] <= '0110_000_000_000_011'
Info: line -1 - symbol[020B] <= 'System.Byte[]'
Info: line 9 - code[020C] <= '0010_000_000_000_000'
Info: line -1 - symbol[020C] <= 'System.Byte[]'
Info: line 9 - code[020D] <= '0000000000101100'
Info: line -1 - symbol[020D] <= 'System.Byte[]'
Info: line 9 - code[020E] <= '0000_000_000_100_010'
Info: line -1 - symbol[020E] <= 'System.Byte[]'
Info: line 9 - code[020F] <= '0010_000_000_000_000'
Info: line -1 - symbol[020F] <= 'System.Byte[]'
Info: line 9 - code[0210] <= '0000000000000010'
Info: line -1 - symbol[0210] <= 'System.Byte[]'
Info: line 9 - code[0211] <= '0000_100_000_000_010'
Info: line -1 - symbol[0211] <= 'System.Byte[]'
Info: line 9 - code[0212] <= '0001_000_100_000_000'
Info: line -1 - symbol[0212] <= 'System.Byte[]'
Info: line 9 - code[0213] <= '0000000000000000'
Info: line -1 - symbol[0213] <= 'System.Byte[]'
Info: line 9 - code[0214] <= '0010_000_000_000_000'
Info: line -1 - symbol[0214] <= 'System.Byte[]'
Warning: value 11111111111111111111111110110100 truncated to value 1111111110110100 in line 182.
Info: line 9 - code[0215] <= '1111111110110100'
Info: line -1 - symbol[0215] <= 'System.Byte[]'
Info: line 9 - code[0216] <= '0000_100_000_000_010'
Info: line -1 - symbol[0216] <= 'System.Byte[]'
Info: line 9 - code[0217] <= '0001_000_001_000_000'
Info: line -1 - symbol[0217] <= 'System.Byte[]'
Info: line 9 - code[0218] <= '0000000000000000'
Info: line -1 - symbol[0218] <= 'System.Byte[]'
Info: line 9 - code[0219] <= '1011_000_000_000_000'
Info: line -1 - symbol[0219] <= 'System.Byte[]'
Info: line 9 - code[021A] <= '0000000000000011'
Info: line -1 - symbol[021A] <= 'System.Byte[]'
Info: line 9 - code[021B] <= '0010_000_011_000_000'
Info: line -1 - symbol[021B] <= 'System.Byte[]'
Warning: value 11111111111111111111111110101101 truncated to value 1111111110101101 in line 190.
Info: line 9 - code[021C] <= '1111111110101101'
Info: line -1 - symbol[021C] <= 'System.Byte[]'
Info: line 9 - code[021D] <= '0001_000_000_001_000'
Info: line -1 - symbol[021D] <= 'System.Byte[]'
Info: line 9 - code[021E] <= '0000000000000000'
Info: line -1 - symbol[021E] <= 'System.Byte[]'
Info: line 9 - code[021F] <= '1101_000_000_000_000'
Info: line -1 - symbol[021F] <= 'System.Byte[]'
Warning: value 11111111111111111111111110101001 truncated to value 1111111110101001 in line 194.
Info: line 9 - code[0220] <= '1111111110101001'
Info: line -1 - symbol[0220] <= 'System.Byte[]'
Info: line 9 - code[0221] <= '0001_000_100_000_000'
Info: line -1 - symbol[0221] <= 'System.Byte[]'
Info: line 9 - code[0222] <= '0000000000111111'
Info: line -1 - symbol[0222] <= 'System.Byte[]'
Info: line 9 - code[0223] <= '0010_000_000_011_000'
Info: line -1 - symbol[0223] <= 'System.Byte[]'
Warning: value 11111111111111111111111110100101 truncated to value 1111111110100101 in line 198.
Info: line 9 - code[0224] <= '1111111110100101'
Info: line -1 - symbol[0224] <= 'System.Byte[]'
Info: line 9 - code[0225] <= '0000_100_000_000_010'
Info: line -1 - symbol[0225] <= 'System.Byte[]'
Info: line 9 - code[0226] <= '0010_000_000_000_000'
Info: line -1 - symbol[0226] <= 'System.Byte[]'
Warning: value 11111111111111111111111110111100 truncated to value 1111111110111100 in line 202.
Info: line 9 - code[0227] <= '1111111110111100'
Info: line -1 - symbol[0227] <= 'System.Byte[]'
Info: line 9 - code[0228] <= '0000_100_000_000_010'
Info: line -1 - symbol[0228] <= 'System.Byte[]'
Info: line 9 - code[0229] <= '0001_100_000_000_000'
Info: line -1 - symbol[0229] <= 'System.Byte[]'
Info: line 9 - code[022A] <= '0000000000100000'
Info: line -1 - symbol[022A] <= 'System.Byte[]'
Info: line 9 - code[022B] <= '0001_000_000_100_000'
Info: line -1 - symbol[022B] <= 'System.Byte[]'
Info: line 9 - code[022C] <= '0000000000000000'
Info: line -1 - symbol[022C] <= 'System.Byte[]'
Info: line 9 - code[022D] <= '0000_000_000_111_011'
Info: line -1 - symbol[022D] <= 'System.Byte[]'
Info: line 9 - code[022E] <= '0110_000_000_000_011'
Info: line -1 - symbol[022E] <= 'System.Byte[]'
Info: line 9 - code[022F] <= '0010_000_000_000_000'
Info: line -1 - symbol[022F] <= 'System.Byte[]'
Info: line 9 - code[0230] <= '0000000000001001'
Info: line -1 - symbol[0230] <= 'System.Byte[]'
Info: line 9 - code[0231] <= '0000_000_000_100_010'
Info: line -1 - symbol[0231] <= 'System.Byte[]'
Info: line 9 - code[0232] <= '0000_000_000_010_000'
Info: line -1 - symbol[0232] <= 'System.Byte[]'
Info: line 9 - code[0233] <= '0001_000_000_001_000'
Info: line -1 - symbol[0233] <= 'System.Byte[]'
Info: line 9 - code[0234] <= '0000000000100000'
Info: line -1 - symbol[0234] <= 'System.Byte[]'
Info: line 9 - code[0235] <= '1100_000_000_000_000'
Info: line -1 - symbol[0235] <= 'System.Byte[]'
Info: line 9 - code[0236] <= '0000000000010001'
Info: line -1 - symbol[0236] <= 'System.Byte[]'
Info: line 9 - code[0237] <= '0010_000_000_000_000'
Info: line -1 - symbol[0237] <= 'System.Byte[]'
Warning: value 11111111111111111111111111110101 truncated to value 1111111111110101 in line 220.
Info: line 9 - code[0238] <= '1111111111110101'
Info: line -1 - symbol[0238] <= 'System.Byte[]'
Info: line 9 - code[0239] <= '0110_000_000_000_011'
Info: line -1 - symbol[0239] <= 'System.Byte[]'
Info: line 9 - code[023A] <= '0010_000_000_000_000'
Info: line -1 - symbol[023A] <= 'System.Byte[]'
Info: line 9 - code[023B] <= '0000000000100001'
Info: line -1 - symbol[023B] <= 'System.Byte[]'
Info: line 9 - code[023C] <= '0001_100_000_000_000'
Info: line -1 - symbol[023C] <= 'System.Byte[]'
Info: line 9 - code[023D] <= '0000000000100000'
Info: line -1 - symbol[023D] <= 'System.Byte[]'
Info: line 9 - code[023E] <= '0001_000_100_000_000'
Info: line -1 - symbol[023E] <= 'System.Byte[]'
Info: line 9 - code[023F] <= '0000000000000111'
Info: line -1 - symbol[023F] <= 'System.Byte[]'
Info: line 9 - code[0240] <= '0000_111_110_110_000'
Info: line -1 - symbol[0240] <= 'System.Byte[]'
Info: line 9 - code[0241] <= '1011_000_000_000_000'
Info: line -1 - symbol[0241] <= 'System.Byte[]'
Info: line 9 - code[0242] <= '0000000000000011'
Info: line -1 - symbol[0242] <= 'System.Byte[]'
Info: line 9 - code[0243] <= '0010_000_011_000_000'
Info: line -1 - symbol[0243] <= 'System.Byte[]'
Warning: value 11111111111111111111111111111100 truncated to value 1111111111111100 in line 233.
Info: line 9 - code[0244] <= '1111111111111100'
Info: line -1 - symbol[0244] <= 'System.Byte[]'
Info: line 9 - code[0245] <= '0100_000_000_000_010'
Info: line -1 - symbol[0245] <= 'System.Byte[]'
Info: line 9 - code[0246] <= '0000_100_000_000_010'
Info: line -1 - symbol[0246] <= 'System.Byte[]'
Info: line 9 - code[0247] <= '0001_000_100_100_000'
Info: line -1 - symbol[0247] <= 'System.Byte[]'
Info: line 9 - code[0248] <= '0000000000000000'
Info: line -1 - symbol[0248] <= 'System.Byte[]'
Info: line 9 - code[0249] <= '0010_000_000_000_000'
Info: line -1 - symbol[0249] <= 'System.Byte[]'
Warning: value 11111111111111111111111101111111 truncated to value 1111111101111111 in line 240.
Info: line 9 - code[024A] <= '1111111101111111'
Info: line -1 - symbol[024A] <= 'System.Byte[]'
Info: line 9 - code[024B] <= '0001_000_000_100_000'
Info: line -1 - symbol[024B] <= 'System.Byte[]'
Info: line 9 - code[024C] <= '1111111100111100'
Info: line -1 - symbol[024C] <= 'System.Byte[]'
Info: line 9 - code[024D] <= '0000_000_100_110_000'
Info: line -1 - symbol[024D] <= 'System.Byte[]'
Info: line 9 - code[024E] <= '0000_000_111_000_011'
Info: line -1 - symbol[024E] <= 'System.Byte[]'
Info: line 9 - code[024F] <= '0001_000_100_000_000'
Info: line -1 - symbol[024F] <= 'System.Byte[]'
Info: line 9 - code[0250] <= '1111111100111101'
Info: line -1 - symbol[0250] <= 'System.Byte[]'
Info: line 9 - code[0251] <= '0010_000_000_000_000'
Info: line -1 - symbol[0251] <= 'System.Byte[]'
Info: line 9 - code[0252] <= '0000000000000111'
Info: line -1 - symbol[0252] <= 'System.Byte[]'
Info: line 9 - code[0253] <= '0001_000_000_100_000'
Info: line -1 - symbol[0253] <= 'System.Byte[]'
Info: line 9 - code[0254] <= '1111111100111110'
Info: line -1 - symbol[0254] <= 'System.Byte[]'
Info: line 9 - code[0255] <= '0000_000_100_110_000'
Info: line -1 - symbol[0255] <= 'System.Byte[]'
Info: line 9 - code[0256] <= '0000_000_111_000_011'
Info: line -1 - symbol[0256] <= 'System.Byte[]'
Info: line 9 - code[0257] <= '0001_000_100_000_000'
Info: line -1 - symbol[0257] <= 'System.Byte[]'
Info: line 9 - code[0258] <= '1111111100111111'
Info: line -1 - symbol[0258] <= 'System.Byte[]'
Info: line 9 - code[0259] <= '0000_000_110_100_000'
Info: line -1 - symbol[0259] <= 'System.Byte[]'
Info: line 9 - code[025A] <= '0000_000_100_000_010'
Info: line -1 - symbol[025A] <= 'System.Byte[]'
Info: line 9 - code[025B] <= '0100_000_000_000_010'
Info: line -1 - symbol[025B] <= 'System.Byte[]'
Info: line 9 - code[025C] <= '0000_111_000_000_011'
Info: line -1 - symbol[025C] <= 'System.Byte[]'
Info: line 9 - code[025D] <= '0001_000_000_101_000'
Info: line -1 - symbol[025D] <= 'System.Byte[]'
Info: line 9 - code[025E] <= '1111111100000000'
Info: line -1 - symbol[025E] <= 'System.Byte[]'
Info: line 9 - code[025F] <= '0000_100_000_110_000'
Info: line -1 - symbol[025F] <= 'System.Byte[]'
Info: line 9 - code[0260] <= '0000_111_000_100_000'
Info: line -1 - symbol[0260] <= 'System.Byte[]'
Info: line 9 - code[0261] <= '0000_100_000_000_010'
Info: line -1 - symbol[0261] <= 'System.Byte[]'
Info: line 9 - code[0262] <= '0100_000_000_000_010'
Info: line -1 - symbol[0262] <= 'System.Byte[]'
Info: line 9 - code[0263] <= '0000_100_110_000_000'
Info: line -1 - symbol[0263] <= 'System.Byte[]'
Info: line 9 - code[0264] <= '1001_000_000_000_000'
Info: line -1 - symbol[0264] <= 'System.Byte[]'
Info: line 9 - code[0265] <= '0000000000000110'
Info: line -1 - symbol[0265] <= 'System.Byte[]'
Info: line 9 - code[0266] <= '0110_000_000_000_011'
Info: line -1 - symbol[0266] <= 'System.Byte[]'
Info: line 9 - code[0267] <= '0010_000_000_000_000'
Info: line -1 - symbol[0267] <= 'System.Byte[]'
Warning: value 11111111111111111111111100110010 truncated to value 1111111100110010 in line 274.
Info: line 9 - code[0268] <= '1111111100110010'
Info: line -1 - symbol[0268] <= 'System.Byte[]'
Info: line 9 - code[0269] <= '0010_000_010_000_000'
Info: line -1 - symbol[0269] <= 'System.Byte[]'
Warning: value 11111111111111111111111111111001 truncated to value 1111111111111001 in line 276.
Info: line 9 - code[026A] <= '1111111111111001'
Info: line -1 - symbol[026A] <= 'System.Byte[]'
Info: line 9 - code[026B] <= '0100_000_000_000_010'
Info: line -1 - symbol[026B] <= 'System.Byte[]'
Info: line 9 - code[026C] <= '0000000000001101'
Info: line -1 - symbol[026C] <= 'System.Byte[]'
Info: line 9 - code[026D] <= '0000000000001010'
Info: line -1 - symbol[026D] <= 'System.Byte[]'
Info: line 9 - code[026E] <= '0000000000101010'
Info: line -1 - symbol[026E] <= 'System.Byte[]'
Info: line 9 - code[026F] <= '0000000001000010'
Info: line -1 - symbol[026F] <= 'System.Byte[]'
Info: line 9 - code[0270] <= '0000000001010010'
Info: line -1 - symbol[0270] <= 'System.Byte[]'
Info: line 9 - code[0271] <= '0000000001000101'
Info: line -1 - symbol[0271] <= 'System.Byte[]'
Info: line 9 - code[0272] <= '0000000001000001'
Info: line -1 - symbol[0272] <= 'System.Byte[]'
Info: line 9 - code[0273] <= '0000000001001011'
Info: line -1 - symbol[0273] <= 'System.Byte[]'
Info: line 9 - code[0274] <= '0000000000000000'
Info: line -1 - symbol[0274] <= 'System.Byte[]'
Info: line 9 - code[0275] <= '0000000000001101'
Info: line -1 - symbol[0275] <= 'System.Byte[]'
Info: line 9 - code[0276] <= '0000000000001010'
Info: line -1 - symbol[0276] <= 'System.Byte[]'
Info: line 9 - code[0277] <= '0000000000101010'
Info: line -1 - symbol[0277] <= 'System.Byte[]'
Info: line 9 - code[0278] <= '0000000001000101'
Info: line -1 - symbol[0278] <= 'System.Byte[]'
Info: line 9 - code[0279] <= '0000000001010010'
Info: line -1 - symbol[0279] <= 'System.Byte[]'
Info: line 9 - code[027A] <= '0000000001010010'
Info: line -1 - symbol[027A] <= 'System.Byte[]'
Info: line 9 - code[027B] <= '0000000001001111'
Info: line -1 - symbol[027B] <= 'System.Byte[]'
Info: line 9 - code[027C] <= '0000000001010010'
Info: line -1 - symbol[027C] <= 'System.Byte[]'
Info: line 9 - code[027D] <= '0000000000100000'
Info: line -1 - symbol[027D] <= 'System.Byte[]'
Info: line 9 - code[027E] <= '0000000000000111'
Info: line -1 - symbol[027E] <= 'System.Byte[]'
Info: line 9 - code[027F] <= '0000000000000000'
Info: line -1 - symbol[027F] <= 'System.Byte[]'
Info: line 9 - code[0280] <= '0000000000001000'
Info: line -1 - symbol[0280] <= 'System.Byte[]'
Info: line 9 - code[0281] <= '0000000000000111'
Info: line -1 - symbol[0281] <= 'System.Byte[]'
Info: line 9 - code[0282] <= '0000000000000000'
Info: line -1 - symbol[0282] <= 'System.Byte[]'
Info: line 9 - code[0283] <= '0000000000000001'
Info: line -1 - symbol[0283] <= 'System.Byte[]'
Info: line 9 - code[0284] <= '0000000000000000'
Info: line -1 - symbol[0284] <= 'System.Byte[]'
Info: line 9 - code[0285] <= '0000000001010010'
Info: line -1 - symbol[0285] <= 'System.Byte[]'
Info: line 9 - code[0286] <= '0000000001100101'
Info: line -1 - symbol[0286] <= 'System.Byte[]'
Info: line 9 - code[0287] <= '0000000001100001'
Info: line -1 - symbol[0287] <= 'System.Byte[]'
Info: line 9 - code[0288] <= '0000000001100100'
Info: line -1 - symbol[0288] <= 'System.Byte[]'
Info: line 9 - code[0289] <= '0000000001111001'
Info: line -1 - symbol[0289] <= 'System.Byte[]'
Info: line 9 - code[028A] <= '0000000000101110'
Info: line -1 - symbol[028A] <= 'System.Byte[]'
Info: line 9 - code[028B] <= '0000000000001101'
Info: line -1 - symbol[028B] <= 'System.Byte[]'
Info: line 9 - code[028C] <= '0000000000001010'
Info: line -1 - symbol[028C] <= 'System.Byte[]'
Info: line 9 - code[028D] <= '0000000000000000'
Info: line -1 - symbol[028D] <= 'System.Byte[]'
Generating code: 
Warning in line 9: found 375 uninitialized locations:
0003 .. 0007
028E .. 03FF

Writing 'C:\Users\zoltanp\Documents\HexCalc\sys_sifp\prog\helloworld_code.mif' ... Done.
Writing 'C:\Users\zoltanp\Documents\HexCalc\sys_sifp\prog\helloworld_code.cgf' ... Done.
Writing 'C:\Users\zoltanp\Documents\HexCalc\sys_sifp\prog\helloworld_code.coe' (LF only) ... Done (initialized locations: 649, empty locations: 375, total locations: 1024).
Generating code 'C:\Users\zoltanp\Documents\HexCalc\sys_sifp\prog\helloworld_code.vhd' ... Done.
Writing 'C:\Users\zoltanp\Documents\HexCalc\sys_sifp\prog\helloworld_code.hex' ... Done.
Writing 'C:\Users\zoltanp\Documents\HexCalc\sys_sifp\prog\helloworld_code_lendian.bin' ... Done.
Writing 'C:\Users\zoltanp\Documents\HexCalc\sys_sifp\prog\helloworld_code_bendian.bin' ... Done.
Generating symbol: 
Writing 'C:\Users\zoltanp\Documents\HexCalc\sys_sifp\prog\helloworld_sym.mif' ... Done.
Writing 'C:\Users\zoltanp\Documents\HexCalc\sys_sifp\prog\helloworld_sym.cgf' ... Done.
Writing 'C:\Users\zoltanp\Documents\HexCalc\sys_sifp\prog\helloworld_sym.coe' (LF only) ... Done (initialized locations: 1024, empty locations: 0, total locations: 1024).
Generating code 'C:\Users\zoltanp\Documents\HexCalc\sys_sifp\prog\helloworld_sym.vhd' ... Done.
Writing 'C:\Users\zoltanp\Documents\HexCalc\sys_sifp\prog\helloworld_sym.hex' ... Done.
Writing 'C:\Users\zoltanp\Documents\HexCalc\sys_si